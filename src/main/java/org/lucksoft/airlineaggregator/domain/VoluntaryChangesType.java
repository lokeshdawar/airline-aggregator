//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Specifies charges and/or penalties associated with making ticket changes after purchase.
 * 
 * <p>Java class for VoluntaryChangesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VoluntaryChangesType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence minOccurs="0"&gt;
 *         &lt;element name="Penalty" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CurrencyAmountGroup"/&gt;
 *                 &lt;attribute name="PenaltyType" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *                 &lt;attribute name="DepartureStatus" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *                 &lt;attribute name="Percent" type="{http://www.opentravel.org/OTA/2003/05}Percentage" /&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="VolChangeInd" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VoluntaryChangesType", propOrder = {
    "penalty"
})
public class VoluntaryChangesType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "Penalty")
    protected VoluntaryChangesType.Penalty penalty;
    @XmlAttribute(name = "VolChangeInd")
    protected Boolean volChangeInd;

    /**
     * Gets the value of the penalty property.
     * 
     * @return
     *     possible object is
     *     {@link VoluntaryChangesType.Penalty }
     *     
     */
    public VoluntaryChangesType.Penalty getPenalty() {
        return penalty;
    }

    /**
     * Sets the value of the penalty property.
     * 
     * @param value
     *     allowed object is
     *     {@link VoluntaryChangesType.Penalty }
     *     
     */
    public void setPenalty(VoluntaryChangesType.Penalty value) {
        this.penalty = value;
    }

    /**
     * Gets the value of the volChangeInd property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVolChangeInd() {
        return volChangeInd;
    }

    /**
     * Sets the value of the volChangeInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVolChangeInd(Boolean value) {
        this.volChangeInd = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            VoluntaryChangesType.Penalty thePenalty;
            thePenalty = this.getPenalty();
            strategy.appendField(locator, this, "penalty", buffer, thePenalty);
        }
        {
            Boolean theVolChangeInd;
            theVolChangeInd = this.isVolChangeInd();
            strategy.appendField(locator, this, "volChangeInd", buffer, theVolChangeInd);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof VoluntaryChangesType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final VoluntaryChangesType that = ((VoluntaryChangesType) object);
        {
            VoluntaryChangesType.Penalty lhsPenalty;
            lhsPenalty = this.getPenalty();
            VoluntaryChangesType.Penalty rhsPenalty;
            rhsPenalty = that.getPenalty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "penalty", lhsPenalty), LocatorUtils.property(thatLocator, "penalty", rhsPenalty), lhsPenalty, rhsPenalty)) {
                return false;
            }
        }
        {
            Boolean lhsVolChangeInd;
            lhsVolChangeInd = this.isVolChangeInd();
            Boolean rhsVolChangeInd;
            rhsVolChangeInd = that.isVolChangeInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "volChangeInd", lhsVolChangeInd), LocatorUtils.property(thatLocator, "volChangeInd", rhsVolChangeInd), lhsVolChangeInd, rhsVolChangeInd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            VoluntaryChangesType.Penalty thePenalty;
            thePenalty = this.getPenalty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "penalty", thePenalty), currentHashCode, thePenalty);
        }
        {
            Boolean theVolChangeInd;
            theVolChangeInd = this.isVolChangeInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "volChangeInd", theVolChangeInd), currentHashCode, theVolChangeInd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof VoluntaryChangesType) {
            final VoluntaryChangesType copy = ((VoluntaryChangesType) draftCopy);
            if (this.penalty!= null) {
                VoluntaryChangesType.Penalty sourcePenalty;
                sourcePenalty = this.getPenalty();
                VoluntaryChangesType.Penalty copyPenalty = ((VoluntaryChangesType.Penalty) strategy.copy(LocatorUtils.property(locator, "penalty", sourcePenalty), sourcePenalty));
                copy.setPenalty(copyPenalty);
            } else {
                copy.penalty = null;
            }
            if (this.volChangeInd!= null) {
                Boolean sourceVolChangeInd;
                sourceVolChangeInd = this.isVolChangeInd();
                Boolean copyVolChangeInd = ((Boolean) strategy.copy(LocatorUtils.property(locator, "volChangeInd", sourceVolChangeInd), sourceVolChangeInd));
                copy.setVolChangeInd(copyVolChangeInd);
            } else {
                copy.volChangeInd = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new VoluntaryChangesType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CurrencyAmountGroup"/&gt;
     *       &lt;attribute name="PenaltyType" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *       &lt;attribute name="DepartureStatus" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
     *       &lt;attribute name="Percent" type="{http://www.opentravel.org/OTA/2003/05}Percentage" /&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Penalty
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "PenaltyType")
        protected String penaltyType;
        @XmlAttribute(name = "DepartureStatus")
        protected String departureStatus;
        @XmlAttribute(name = "Percent")
        protected BigDecimal percent;
        @XmlAttribute(name = "Amount")
        protected BigDecimal amount;
        @XmlAttribute(name = "CurrencyCode")
        protected String currencyCode;
        @XmlAttribute(name = "DecimalPlaces")
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger decimalPlaces;

        /**
         * Gets the value of the penaltyType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPenaltyType() {
            return penaltyType;
        }

        /**
         * Sets the value of the penaltyType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPenaltyType(String value) {
            this.penaltyType = value;
        }

        /**
         * Gets the value of the departureStatus property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDepartureStatus() {
            return departureStatus;
        }

        /**
         * Sets the value of the departureStatus property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDepartureStatus(String value) {
            this.departureStatus = value;
        }

        /**
         * Gets the value of the percent property.
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getPercent() {
            return percent;
        }

        /**
         * Sets the value of the percent property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         */
        public void setPercent(BigDecimal value) {
            this.percent = value;
        }

        /**
         * Gets the value of the amount property.
         * 
         * @return
         *     possible object is
         *     {@link BigDecimal }
         *     
         */
        public BigDecimal getAmount() {
            return amount;
        }

        /**
         * Sets the value of the amount property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigDecimal }
         *     
         */
        public void setAmount(BigDecimal value) {
            this.amount = value;
        }

        /**
         * Gets the value of the currencyCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCurrencyCode() {
            return currencyCode;
        }

        /**
         * Sets the value of the currencyCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCurrencyCode(String value) {
            this.currencyCode = value;
        }

        /**
         * Gets the value of the decimalPlaces property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getDecimalPlaces() {
            return decimalPlaces;
        }

        /**
         * Sets the value of the decimalPlaces property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setDecimalPlaces(BigInteger value) {
            this.decimalPlaces = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String thePenaltyType;
                thePenaltyType = this.getPenaltyType();
                strategy.appendField(locator, this, "penaltyType", buffer, thePenaltyType);
            }
            {
                String theDepartureStatus;
                theDepartureStatus = this.getDepartureStatus();
                strategy.appendField(locator, this, "departureStatus", buffer, theDepartureStatus);
            }
            {
                BigDecimal thePercent;
                thePercent = this.getPercent();
                strategy.appendField(locator, this, "percent", buffer, thePercent);
            }
            {
                BigDecimal theAmount;
                theAmount = this.getAmount();
                strategy.appendField(locator, this, "amount", buffer, theAmount);
            }
            {
                String theCurrencyCode;
                theCurrencyCode = this.getCurrencyCode();
                strategy.appendField(locator, this, "currencyCode", buffer, theCurrencyCode);
            }
            {
                BigInteger theDecimalPlaces;
                theDecimalPlaces = this.getDecimalPlaces();
                strategy.appendField(locator, this, "decimalPlaces", buffer, theDecimalPlaces);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VoluntaryChangesType.Penalty)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VoluntaryChangesType.Penalty that = ((VoluntaryChangesType.Penalty) object);
            {
                String lhsPenaltyType;
                lhsPenaltyType = this.getPenaltyType();
                String rhsPenaltyType;
                rhsPenaltyType = that.getPenaltyType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "penaltyType", lhsPenaltyType), LocatorUtils.property(thatLocator, "penaltyType", rhsPenaltyType), lhsPenaltyType, rhsPenaltyType)) {
                    return false;
                }
            }
            {
                String lhsDepartureStatus;
                lhsDepartureStatus = this.getDepartureStatus();
                String rhsDepartureStatus;
                rhsDepartureStatus = that.getDepartureStatus();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "departureStatus", lhsDepartureStatus), LocatorUtils.property(thatLocator, "departureStatus", rhsDepartureStatus), lhsDepartureStatus, rhsDepartureStatus)) {
                    return false;
                }
            }
            {
                BigDecimal lhsPercent;
                lhsPercent = this.getPercent();
                BigDecimal rhsPercent;
                rhsPercent = that.getPercent();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "percent", lhsPercent), LocatorUtils.property(thatLocator, "percent", rhsPercent), lhsPercent, rhsPercent)) {
                    return false;
                }
            }
            {
                BigDecimal lhsAmount;
                lhsAmount = this.getAmount();
                BigDecimal rhsAmount;
                rhsAmount = that.getAmount();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "amount", lhsAmount), LocatorUtils.property(thatLocator, "amount", rhsAmount), lhsAmount, rhsAmount)) {
                    return false;
                }
            }
            {
                String lhsCurrencyCode;
                lhsCurrencyCode = this.getCurrencyCode();
                String rhsCurrencyCode;
                rhsCurrencyCode = that.getCurrencyCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyCode", lhsCurrencyCode), LocatorUtils.property(thatLocator, "currencyCode", rhsCurrencyCode), lhsCurrencyCode, rhsCurrencyCode)) {
                    return false;
                }
            }
            {
                BigInteger lhsDecimalPlaces;
                lhsDecimalPlaces = this.getDecimalPlaces();
                BigInteger rhsDecimalPlaces;
                rhsDecimalPlaces = that.getDecimalPlaces();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "decimalPlaces", lhsDecimalPlaces), LocatorUtils.property(thatLocator, "decimalPlaces", rhsDecimalPlaces), lhsDecimalPlaces, rhsDecimalPlaces)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String thePenaltyType;
                thePenaltyType = this.getPenaltyType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "penaltyType", thePenaltyType), currentHashCode, thePenaltyType);
            }
            {
                String theDepartureStatus;
                theDepartureStatus = this.getDepartureStatus();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "departureStatus", theDepartureStatus), currentHashCode, theDepartureStatus);
            }
            {
                BigDecimal thePercent;
                thePercent = this.getPercent();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percent", thePercent), currentHashCode, thePercent);
            }
            {
                BigDecimal theAmount;
                theAmount = this.getAmount();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "amount", theAmount), currentHashCode, theAmount);
            }
            {
                String theCurrencyCode;
                theCurrencyCode = this.getCurrencyCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyCode", theCurrencyCode), currentHashCode, theCurrencyCode);
            }
            {
                BigInteger theDecimalPlaces;
                theDecimalPlaces = this.getDecimalPlaces();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "decimalPlaces", theDecimalPlaces), currentHashCode, theDecimalPlaces);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof VoluntaryChangesType.Penalty) {
                final VoluntaryChangesType.Penalty copy = ((VoluntaryChangesType.Penalty) draftCopy);
                if (this.penaltyType!= null) {
                    String sourcePenaltyType;
                    sourcePenaltyType = this.getPenaltyType();
                    String copyPenaltyType = ((String) strategy.copy(LocatorUtils.property(locator, "penaltyType", sourcePenaltyType), sourcePenaltyType));
                    copy.setPenaltyType(copyPenaltyType);
                } else {
                    copy.penaltyType = null;
                }
                if (this.departureStatus!= null) {
                    String sourceDepartureStatus;
                    sourceDepartureStatus = this.getDepartureStatus();
                    String copyDepartureStatus = ((String) strategy.copy(LocatorUtils.property(locator, "departureStatus", sourceDepartureStatus), sourceDepartureStatus));
                    copy.setDepartureStatus(copyDepartureStatus);
                } else {
                    copy.departureStatus = null;
                }
                if (this.percent!= null) {
                    BigDecimal sourcePercent;
                    sourcePercent = this.getPercent();
                    BigDecimal copyPercent = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "percent", sourcePercent), sourcePercent));
                    copy.setPercent(copyPercent);
                } else {
                    copy.percent = null;
                }
                if (this.amount!= null) {
                    BigDecimal sourceAmount;
                    sourceAmount = this.getAmount();
                    BigDecimal copyAmount = ((BigDecimal) strategy.copy(LocatorUtils.property(locator, "amount", sourceAmount), sourceAmount));
                    copy.setAmount(copyAmount);
                } else {
                    copy.amount = null;
                }
                if (this.currencyCode!= null) {
                    String sourceCurrencyCode;
                    sourceCurrencyCode = this.getCurrencyCode();
                    String copyCurrencyCode = ((String) strategy.copy(LocatorUtils.property(locator, "currencyCode", sourceCurrencyCode), sourceCurrencyCode));
                    copy.setCurrencyCode(copyCurrencyCode);
                } else {
                    copy.currencyCode = null;
                }
                if (this.decimalPlaces!= null) {
                    BigInteger sourceDecimalPlaces;
                    sourceDecimalPlaces = this.getDecimalPlaces();
                    BigInteger copyDecimalPlaces = ((BigInteger) strategy.copy(LocatorUtils.property(locator, "decimalPlaces", sourceDecimalPlaces), sourceDecimalPlaces));
                    copy.setDecimalPlaces(copyDecimalPlaces);
                } else {
                    copy.decimalPlaces = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VoluntaryChangesType.Penalty();
        }

    }

}
