//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 * 	FlightSegmentType extends FlightSegmentBaseType to provide additional functionality. 
 * 	
 * 
 * <p>Java class for FlightSegmentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FlightSegmentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.opentravel.org/OTA/2003/05}FlightSegmentBaseType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="MarketingAirline" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;CompanyNameType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}SingleVendorIndGroup"/&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="FlightNumber" type="{http://www.opentravel.org/OTA/2003/05}FlightNumberType" /&gt;
 *       &lt;attribute name="TourOperatorFlightID" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to8" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FlightSegmentType", propOrder = {
    "marketingAirline"
})
@XmlSeeAlso({
    BookFlightSegmentType.class
})
public class FlightSegmentType
    extends FlightSegmentBaseType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "MarketingAirline")
    protected FlightSegmentType.MarketingAirline marketingAirline;
    @XmlAttribute(name = "FlightNumber")
    protected String flightNumber;
    @XmlAttribute(name = "TourOperatorFlightID")
    protected String tourOperatorFlightID;

    /**
     * Gets the value of the marketingAirline property.
     * 
     * @return
     *     possible object is
     *     {@link FlightSegmentType.MarketingAirline }
     *     
     */
    public FlightSegmentType.MarketingAirline getMarketingAirline() {
        return marketingAirline;
    }

    /**
     * Sets the value of the marketingAirline property.
     * 
     * @param value
     *     allowed object is
     *     {@link FlightSegmentType.MarketingAirline }
     *     
     */
    public void setMarketingAirline(FlightSegmentType.MarketingAirline value) {
        this.marketingAirline = value;
    }

    /**
     * Gets the value of the flightNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFlightNumber() {
        return flightNumber;
    }

    /**
     * Sets the value of the flightNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFlightNumber(String value) {
        this.flightNumber = value;
    }

    /**
     * Gets the value of the tourOperatorFlightID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTourOperatorFlightID() {
        return tourOperatorFlightID;
    }

    /**
     * Sets the value of the tourOperatorFlightID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTourOperatorFlightID(String value) {
        this.tourOperatorFlightID = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            FlightSegmentType.MarketingAirline theMarketingAirline;
            theMarketingAirline = this.getMarketingAirline();
            strategy.appendField(locator, this, "marketingAirline", buffer, theMarketingAirline);
        }
        {
            String theFlightNumber;
            theFlightNumber = this.getFlightNumber();
            strategy.appendField(locator, this, "flightNumber", buffer, theFlightNumber);
        }
        {
            String theTourOperatorFlightID;
            theTourOperatorFlightID = this.getTourOperatorFlightID();
            strategy.appendField(locator, this, "tourOperatorFlightID", buffer, theTourOperatorFlightID);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FlightSegmentType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final FlightSegmentType that = ((FlightSegmentType) object);
        {
            FlightSegmentType.MarketingAirline lhsMarketingAirline;
            lhsMarketingAirline = this.getMarketingAirline();
            FlightSegmentType.MarketingAirline rhsMarketingAirline;
            rhsMarketingAirline = that.getMarketingAirline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "marketingAirline", lhsMarketingAirline), LocatorUtils.property(thatLocator, "marketingAirline", rhsMarketingAirline), lhsMarketingAirline, rhsMarketingAirline)) {
                return false;
            }
        }
        {
            String lhsFlightNumber;
            lhsFlightNumber = this.getFlightNumber();
            String rhsFlightNumber;
            rhsFlightNumber = that.getFlightNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "flightNumber", lhsFlightNumber), LocatorUtils.property(thatLocator, "flightNumber", rhsFlightNumber), lhsFlightNumber, rhsFlightNumber)) {
                return false;
            }
        }
        {
            String lhsTourOperatorFlightID;
            lhsTourOperatorFlightID = this.getTourOperatorFlightID();
            String rhsTourOperatorFlightID;
            rhsTourOperatorFlightID = that.getTourOperatorFlightID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tourOperatorFlightID", lhsTourOperatorFlightID), LocatorUtils.property(thatLocator, "tourOperatorFlightID", rhsTourOperatorFlightID), lhsTourOperatorFlightID, rhsTourOperatorFlightID)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            FlightSegmentType.MarketingAirline theMarketingAirline;
            theMarketingAirline = this.getMarketingAirline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "marketingAirline", theMarketingAirline), currentHashCode, theMarketingAirline);
        }
        {
            String theFlightNumber;
            theFlightNumber = this.getFlightNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "flightNumber", theFlightNumber), currentHashCode, theFlightNumber);
        }
        {
            String theTourOperatorFlightID;
            theTourOperatorFlightID = this.getTourOperatorFlightID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tourOperatorFlightID", theTourOperatorFlightID), currentHashCode, theTourOperatorFlightID);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof FlightSegmentType) {
            final FlightSegmentType copy = ((FlightSegmentType) draftCopy);
            if (this.marketingAirline!= null) {
                FlightSegmentType.MarketingAirline sourceMarketingAirline;
                sourceMarketingAirline = this.getMarketingAirline();
                FlightSegmentType.MarketingAirline copyMarketingAirline = ((FlightSegmentType.MarketingAirline) strategy.copy(LocatorUtils.property(locator, "marketingAirline", sourceMarketingAirline), sourceMarketingAirline));
                copy.setMarketingAirline(copyMarketingAirline);
            } else {
                copy.marketingAirline = null;
            }
            if (this.flightNumber!= null) {
                String sourceFlightNumber;
                sourceFlightNumber = this.getFlightNumber();
                String copyFlightNumber = ((String) strategy.copy(LocatorUtils.property(locator, "flightNumber", sourceFlightNumber), sourceFlightNumber));
                copy.setFlightNumber(copyFlightNumber);
            } else {
                copy.flightNumber = null;
            }
            if (this.tourOperatorFlightID!= null) {
                String sourceTourOperatorFlightID;
                sourceTourOperatorFlightID = this.getTourOperatorFlightID();
                String copyTourOperatorFlightID = ((String) strategy.copy(LocatorUtils.property(locator, "tourOperatorFlightID", sourceTourOperatorFlightID), sourceTourOperatorFlightID));
                copy.setTourOperatorFlightID(copyTourOperatorFlightID);
            } else {
                copy.tourOperatorFlightID = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new FlightSegmentType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;CompanyNameType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}SingleVendorIndGroup"/&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class MarketingAirline
        extends CompanyNameType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "SingleVendorInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String singleVendorInd;

        /**
         * Gets the value of the singleVendorInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSingleVendorInd() {
            return singleVendorInd;
        }

        /**
         * Sets the value of the singleVendorInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSingleVendorInd(String value) {
            this.singleVendorInd = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                String theSingleVendorInd;
                theSingleVendorInd = this.getSingleVendorInd();
                strategy.appendField(locator, this, "singleVendorInd", buffer, theSingleVendorInd);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof FlightSegmentType.MarketingAirline)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final FlightSegmentType.MarketingAirline that = ((FlightSegmentType.MarketingAirline) object);
            {
                String lhsSingleVendorInd;
                lhsSingleVendorInd = this.getSingleVendorInd();
                String rhsSingleVendorInd;
                rhsSingleVendorInd = that.getSingleVendorInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "singleVendorInd", lhsSingleVendorInd), LocatorUtils.property(thatLocator, "singleVendorInd", rhsSingleVendorInd), lhsSingleVendorInd, rhsSingleVendorInd)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                String theSingleVendorInd;
                theSingleVendorInd = this.getSingleVendorInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "singleVendorInd", theSingleVendorInd), currentHashCode, theSingleVendorInd);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof FlightSegmentType.MarketingAirline) {
                final FlightSegmentType.MarketingAirline copy = ((FlightSegmentType.MarketingAirline) draftCopy);
                if (this.singleVendorInd!= null) {
                    String sourceSingleVendorInd;
                    sourceSingleVendorInd = this.getSingleVendorInd();
                    String copySingleVendorInd = ((String) strategy.copy(LocatorUtils.property(locator, "singleVendorInd", sourceSingleVendorInd), sourceSingleVendorInd));
                    copy.setSingleVendorInd(copySingleVendorInd);
                } else {
                    copy.singleVendorInd = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new FlightSegmentType.MarketingAirline();
        }

    }

}
