//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * SSR's for this booking request e.g.,. meals
 * 
 * <p>Java class for SpecialServiceRequestType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SpecialServiceRequestType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Airline" type="{http://www.opentravel.org/OTA/2003/05}CompanyNameType" minOccurs="0"/&gt;
 *         &lt;element name="Text" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to128" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="SSRCode" use="required" type="{http://www.opentravel.org/OTA/2003/05}AlphaLength4" /&gt;
 *       &lt;attribute name="ServiceQuantity" type="{http://www.opentravel.org/OTA/2003/05}Numeric1to99" /&gt;
 *       &lt;attribute name="Status" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SpecialServiceRequestType", propOrder = {
    "airline",
    "text"
})
@XmlSeeAlso({
    org.lucksoft.airlineaggregator.domain.SpecialReqDetailsType.SpecialServiceRequests.SpecialServiceRequest.class
})
public class SpecialServiceRequestType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "Airline")
    protected CompanyNameType airline;
    @XmlElement(name = "Text")
    protected String text;
    @XmlAttribute(name = "SSRCode", required = true)
    protected String ssrCode;
    @XmlAttribute(name = "ServiceQuantity")
    protected Integer serviceQuantity;
    @XmlAttribute(name = "Status")
    protected String status;

    /**
     * Gets the value of the airline property.
     * 
     * @return
     *     possible object is
     *     {@link CompanyNameType }
     *     
     */
    public CompanyNameType getAirline() {
        return airline;
    }

    /**
     * Sets the value of the airline property.
     * 
     * @param value
     *     allowed object is
     *     {@link CompanyNameType }
     *     
     */
    public void setAirline(CompanyNameType value) {
        this.airline = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setText(String value) {
        this.text = value;
    }

    /**
     * Gets the value of the ssrCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSSRCode() {
        return ssrCode;
    }

    /**
     * Sets the value of the ssrCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSSRCode(String value) {
        this.ssrCode = value;
    }

    /**
     * Gets the value of the serviceQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getServiceQuantity() {
        return serviceQuantity;
    }

    /**
     * Sets the value of the serviceQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setServiceQuantity(Integer value) {
        this.serviceQuantity = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatus(String value) {
        this.status = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            strategy.appendField(locator, this, "airline", buffer, theAirline);
        }
        {
            String theText;
            theText = this.getText();
            strategy.appendField(locator, this, "text", buffer, theText);
        }
        {
            String theSSRCode;
            theSSRCode = this.getSSRCode();
            strategy.appendField(locator, this, "ssrCode", buffer, theSSRCode);
        }
        {
            Integer theServiceQuantity;
            theServiceQuantity = this.getServiceQuantity();
            strategy.appendField(locator, this, "serviceQuantity", buffer, theServiceQuantity);
        }
        {
            String theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SpecialServiceRequestType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SpecialServiceRequestType that = ((SpecialServiceRequestType) object);
        {
            CompanyNameType lhsAirline;
            lhsAirline = this.getAirline();
            CompanyNameType rhsAirline;
            rhsAirline = that.getAirline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airline", lhsAirline), LocatorUtils.property(thatLocator, "airline", rhsAirline), lhsAirline, rhsAirline)) {
                return false;
            }
        }
        {
            String lhsText;
            lhsText = this.getText();
            String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        {
            String lhsSSRCode;
            lhsSSRCode = this.getSSRCode();
            String rhsSSRCode;
            rhsSSRCode = that.getSSRCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ssrCode", lhsSSRCode), LocatorUtils.property(thatLocator, "ssrCode", rhsSSRCode), lhsSSRCode, rhsSSRCode)) {
                return false;
            }
        }
        {
            Integer lhsServiceQuantity;
            lhsServiceQuantity = this.getServiceQuantity();
            Integer rhsServiceQuantity;
            rhsServiceQuantity = that.getServiceQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "serviceQuantity", lhsServiceQuantity), LocatorUtils.property(thatLocator, "serviceQuantity", rhsServiceQuantity), lhsServiceQuantity, rhsServiceQuantity)) {
                return false;
            }
        }
        {
            String lhsStatus;
            lhsStatus = this.getStatus();
            String rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airline", theAirline), currentHashCode, theAirline);
        }
        {
            String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        {
            String theSSRCode;
            theSSRCode = this.getSSRCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ssrCode", theSSRCode), currentHashCode, theSSRCode);
        }
        {
            Integer theServiceQuantity;
            theServiceQuantity = this.getServiceQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "serviceQuantity", theServiceQuantity), currentHashCode, theServiceQuantity);
        }
        {
            String theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof SpecialServiceRequestType) {
            final SpecialServiceRequestType copy = ((SpecialServiceRequestType) draftCopy);
            if (this.airline!= null) {
                CompanyNameType sourceAirline;
                sourceAirline = this.getAirline();
                CompanyNameType copyAirline = ((CompanyNameType) strategy.copy(LocatorUtils.property(locator, "airline", sourceAirline), sourceAirline));
                copy.setAirline(copyAirline);
            } else {
                copy.airline = null;
            }
            if (this.text!= null) {
                String sourceText;
                sourceText = this.getText();
                String copyText = ((String) strategy.copy(LocatorUtils.property(locator, "text", sourceText), sourceText));
                copy.setText(copyText);
            } else {
                copy.text = null;
            }
            if (this.ssrCode!= null) {
                String sourceSSRCode;
                sourceSSRCode = this.getSSRCode();
                String copySSRCode = ((String) strategy.copy(LocatorUtils.property(locator, "ssrCode", sourceSSRCode), sourceSSRCode));
                copy.setSSRCode(copySSRCode);
            } else {
                copy.ssrCode = null;
            }
            if (this.serviceQuantity!= null) {
                Integer sourceServiceQuantity;
                sourceServiceQuantity = this.getServiceQuantity();
                Integer copyServiceQuantity = ((Integer) strategy.copy(LocatorUtils.property(locator, "serviceQuantity", sourceServiceQuantity), sourceServiceQuantity));
                copy.setServiceQuantity(copyServiceQuantity);
            } else {
                copy.serviceQuantity = null;
            }
            if (this.status!= null) {
                String sourceStatus;
                sourceStatus = this.getStatus();
                String copyStatus = ((String) strategy.copy(LocatorUtils.property(locator, "status", sourceStatus), sourceStatus));
                copy.setStatus(copyStatus);
            } else {
                copy.status = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new SpecialServiceRequestType();
    }

}
