//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Specify actual airline, flight number, or booking class
 * 
 * <p>Java class for SpecificFlightInfoType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SpecificFlightInfoType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="FlightNumber" type="{http://www.opentravel.org/OTA/2003/05}FlightNumberType" minOccurs="0"/&gt;
 *         &lt;element name="Airline" type="{http://www.opentravel.org/OTA/2003/05}CompanyNameType" minOccurs="0"/&gt;
 *         &lt;element name="BookingClassPref" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}BookingClassPrefGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SpecificFlightInfoType", propOrder = {
    "flightNumber",
    "airline",
    "bookingClassPref"
})
public class SpecificFlightInfoType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "FlightNumber")
    @XmlSchemaType(name = "anySimpleType")
    protected String flightNumber;
    @XmlElement(name = "Airline")
    protected CompanyNameType airline;
    @XmlElement(name = "BookingClassPref")
    protected SpecificFlightInfoType.BookingClassPref bookingClassPref;

    /**
     * Gets the value of the flightNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFlightNumber() {
        return flightNumber;
    }

    /**
     * Sets the value of the flightNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFlightNumber(String value) {
        this.flightNumber = value;
    }

    /**
     * Gets the value of the airline property.
     * 
     * @return
     *     possible object is
     *     {@link CompanyNameType }
     *     
     */
    public CompanyNameType getAirline() {
        return airline;
    }

    /**
     * Sets the value of the airline property.
     * 
     * @param value
     *     allowed object is
     *     {@link CompanyNameType }
     *     
     */
    public void setAirline(CompanyNameType value) {
        this.airline = value;
    }

    /**
     * Gets the value of the bookingClassPref property.
     * 
     * @return
     *     possible object is
     *     {@link SpecificFlightInfoType.BookingClassPref }
     *     
     */
    public SpecificFlightInfoType.BookingClassPref getBookingClassPref() {
        return bookingClassPref;
    }

    /**
     * Sets the value of the bookingClassPref property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpecificFlightInfoType.BookingClassPref }
     *     
     */
    public void setBookingClassPref(SpecificFlightInfoType.BookingClassPref value) {
        this.bookingClassPref = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theFlightNumber;
            theFlightNumber = this.getFlightNumber();
            strategy.appendField(locator, this, "flightNumber", buffer, theFlightNumber);
        }
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            strategy.appendField(locator, this, "airline", buffer, theAirline);
        }
        {
            SpecificFlightInfoType.BookingClassPref theBookingClassPref;
            theBookingClassPref = this.getBookingClassPref();
            strategy.appendField(locator, this, "bookingClassPref", buffer, theBookingClassPref);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SpecificFlightInfoType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final SpecificFlightInfoType that = ((SpecificFlightInfoType) object);
        {
            String lhsFlightNumber;
            lhsFlightNumber = this.getFlightNumber();
            String rhsFlightNumber;
            rhsFlightNumber = that.getFlightNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "flightNumber", lhsFlightNumber), LocatorUtils.property(thatLocator, "flightNumber", rhsFlightNumber), lhsFlightNumber, rhsFlightNumber)) {
                return false;
            }
        }
        {
            CompanyNameType lhsAirline;
            lhsAirline = this.getAirline();
            CompanyNameType rhsAirline;
            rhsAirline = that.getAirline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airline", lhsAirline), LocatorUtils.property(thatLocator, "airline", rhsAirline), lhsAirline, rhsAirline)) {
                return false;
            }
        }
        {
            SpecificFlightInfoType.BookingClassPref lhsBookingClassPref;
            lhsBookingClassPref = this.getBookingClassPref();
            SpecificFlightInfoType.BookingClassPref rhsBookingClassPref;
            rhsBookingClassPref = that.getBookingClassPref();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bookingClassPref", lhsBookingClassPref), LocatorUtils.property(thatLocator, "bookingClassPref", rhsBookingClassPref), lhsBookingClassPref, rhsBookingClassPref)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theFlightNumber;
            theFlightNumber = this.getFlightNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "flightNumber", theFlightNumber), currentHashCode, theFlightNumber);
        }
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airline", theAirline), currentHashCode, theAirline);
        }
        {
            SpecificFlightInfoType.BookingClassPref theBookingClassPref;
            theBookingClassPref = this.getBookingClassPref();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bookingClassPref", theBookingClassPref), currentHashCode, theBookingClassPref);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof SpecificFlightInfoType) {
            final SpecificFlightInfoType copy = ((SpecificFlightInfoType) draftCopy);
            if (this.flightNumber!= null) {
                String sourceFlightNumber;
                sourceFlightNumber = this.getFlightNumber();
                String copyFlightNumber = ((String) strategy.copy(LocatorUtils.property(locator, "flightNumber", sourceFlightNumber), sourceFlightNumber));
                copy.setFlightNumber(copyFlightNumber);
            } else {
                copy.flightNumber = null;
            }
            if (this.airline!= null) {
                CompanyNameType sourceAirline;
                sourceAirline = this.getAirline();
                CompanyNameType copyAirline = ((CompanyNameType) strategy.copy(LocatorUtils.property(locator, "airline", sourceAirline), sourceAirline));
                copy.setAirline(copyAirline);
            } else {
                copy.airline = null;
            }
            if (this.bookingClassPref!= null) {
                SpecificFlightInfoType.BookingClassPref sourceBookingClassPref;
                sourceBookingClassPref = this.getBookingClassPref();
                SpecificFlightInfoType.BookingClassPref copyBookingClassPref = ((SpecificFlightInfoType.BookingClassPref) strategy.copy(LocatorUtils.property(locator, "bookingClassPref", sourceBookingClassPref), sourceBookingClassPref));
                copy.setBookingClassPref(copyBookingClassPref);
            } else {
                copy.bookingClassPref = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new SpecificFlightInfoType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}BookingClassPrefGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class BookingClassPref
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "ResBookDesigCode", required = true)
        protected String resBookDesigCode;
        @XmlAttribute(name = "ResBookDesigCodeType")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String resBookDesigCodeType;
        @XmlAttribute(name = "PreferLevel")
        protected PreferLevelType preferLevel;

        /**
         * Gets the value of the resBookDesigCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getResBookDesigCode() {
            return resBookDesigCode;
        }

        /**
         * Sets the value of the resBookDesigCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setResBookDesigCode(String value) {
            this.resBookDesigCode = value;
        }

        /**
         * Gets the value of the resBookDesigCodeType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getResBookDesigCodeType() {
            return resBookDesigCodeType;
        }

        /**
         * Sets the value of the resBookDesigCodeType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setResBookDesigCodeType(String value) {
            this.resBookDesigCodeType = value;
        }

        /**
         * Gets the value of the preferLevel property.
         * 
         * @return
         *     possible object is
         *     {@link PreferLevelType }
         *     
         */
        public PreferLevelType getPreferLevel() {
            if (preferLevel == null) {
                return PreferLevelType.PREFERRED;
            } else {
                return preferLevel;
            }
        }

        /**
         * Sets the value of the preferLevel property.
         * 
         * @param value
         *     allowed object is
         *     {@link PreferLevelType }
         *     
         */
        public void setPreferLevel(PreferLevelType value) {
            this.preferLevel = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theResBookDesigCode;
                theResBookDesigCode = this.getResBookDesigCode();
                strategy.appendField(locator, this, "resBookDesigCode", buffer, theResBookDesigCode);
            }
            {
                String theResBookDesigCodeType;
                theResBookDesigCodeType = this.getResBookDesigCodeType();
                strategy.appendField(locator, this, "resBookDesigCodeType", buffer, theResBookDesigCodeType);
            }
            {
                PreferLevelType thePreferLevel;
                thePreferLevel = this.getPreferLevel();
                strategy.appendField(locator, this, "preferLevel", buffer, thePreferLevel);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof SpecificFlightInfoType.BookingClassPref)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final SpecificFlightInfoType.BookingClassPref that = ((SpecificFlightInfoType.BookingClassPref) object);
            {
                String lhsResBookDesigCode;
                lhsResBookDesigCode = this.getResBookDesigCode();
                String rhsResBookDesigCode;
                rhsResBookDesigCode = that.getResBookDesigCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "resBookDesigCode", lhsResBookDesigCode), LocatorUtils.property(thatLocator, "resBookDesigCode", rhsResBookDesigCode), lhsResBookDesigCode, rhsResBookDesigCode)) {
                    return false;
                }
            }
            {
                String lhsResBookDesigCodeType;
                lhsResBookDesigCodeType = this.getResBookDesigCodeType();
                String rhsResBookDesigCodeType;
                rhsResBookDesigCodeType = that.getResBookDesigCodeType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "resBookDesigCodeType", lhsResBookDesigCodeType), LocatorUtils.property(thatLocator, "resBookDesigCodeType", rhsResBookDesigCodeType), lhsResBookDesigCodeType, rhsResBookDesigCodeType)) {
                    return false;
                }
            }
            {
                PreferLevelType lhsPreferLevel;
                lhsPreferLevel = this.getPreferLevel();
                PreferLevelType rhsPreferLevel;
                rhsPreferLevel = that.getPreferLevel();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "preferLevel", lhsPreferLevel), LocatorUtils.property(thatLocator, "preferLevel", rhsPreferLevel), lhsPreferLevel, rhsPreferLevel)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theResBookDesigCode;
                theResBookDesigCode = this.getResBookDesigCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resBookDesigCode", theResBookDesigCode), currentHashCode, theResBookDesigCode);
            }
            {
                String theResBookDesigCodeType;
                theResBookDesigCodeType = this.getResBookDesigCodeType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "resBookDesigCodeType", theResBookDesigCodeType), currentHashCode, theResBookDesigCodeType);
            }
            {
                PreferLevelType thePreferLevel;
                thePreferLevel = this.getPreferLevel();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preferLevel", thePreferLevel), currentHashCode, thePreferLevel);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof SpecificFlightInfoType.BookingClassPref) {
                final SpecificFlightInfoType.BookingClassPref copy = ((SpecificFlightInfoType.BookingClassPref) draftCopy);
                if (this.resBookDesigCode!= null) {
                    String sourceResBookDesigCode;
                    sourceResBookDesigCode = this.getResBookDesigCode();
                    String copyResBookDesigCode = ((String) strategy.copy(LocatorUtils.property(locator, "resBookDesigCode", sourceResBookDesigCode), sourceResBookDesigCode));
                    copy.setResBookDesigCode(copyResBookDesigCode);
                } else {
                    copy.resBookDesigCode = null;
                }
                if (this.resBookDesigCodeType!= null) {
                    String sourceResBookDesigCodeType;
                    sourceResBookDesigCodeType = this.getResBookDesigCodeType();
                    String copyResBookDesigCodeType = ((String) strategy.copy(LocatorUtils.property(locator, "resBookDesigCodeType", sourceResBookDesigCodeType), sourceResBookDesigCodeType));
                    copy.setResBookDesigCodeType(copyResBookDesigCodeType);
                } else {
                    copy.resBookDesigCodeType = null;
                }
                if (this.preferLevel!= null) {
                    PreferLevelType sourcePreferLevel;
                    sourcePreferLevel = this.getPreferLevel();
                    PreferLevelType copyPreferLevel = ((PreferLevelType) strategy.copy(LocatorUtils.property(locator, "preferLevel", sourcePreferLevel), sourcePreferLevel));
                    copy.setPreferLevel(copyPreferLevel);
                } else {
                    copy.preferLevel = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new SpecificFlightInfoType.BookingClassPref();
        }

    }

}
