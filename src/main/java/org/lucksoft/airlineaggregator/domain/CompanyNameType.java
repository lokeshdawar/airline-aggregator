//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Identifies a company by name.
 * 
 * <p>Java class for CompanyNameType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CompanyNameType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;StringLength0to128"&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CompanyID_AttributesGroup"/&gt;
 *       &lt;attribute name="Division" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to32" /&gt;
 *       &lt;attribute name="Department" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to32" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CompanyNameType", propOrder = {
    "value"
})
@XmlSeeAlso({
    org.lucksoft.airlineaggregator.domain.DirectBillType.CompanyName.class,
    OperatingAirlineType.class,
    org.lucksoft.airlineaggregator.domain.FlightSegmentType.MarketingAirline.class,
    CompanyNamePrefType.class
})
public class CompanyNameType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlValue
    protected String value;
    @XmlAttribute(name = "Division")
    protected String division;
    @XmlAttribute(name = "Department")
    protected String department;
    @XmlAttribute(name = "CompanyShortName")
    protected String companyShortName;
    @XmlAttribute(name = "TravelSector")
    protected String travelSector;
    @XmlAttribute(name = "Code")
    protected String code;
    @XmlAttribute(name = "CodeContext")
    protected String codeContext;

    /**
     * Used for Character Strings, length 0 to 128
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the division property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDivision() {
        return division;
    }

    /**
     * Sets the value of the division property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDivision(String value) {
        this.division = value;
    }

    /**
     * Gets the value of the department property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDepartment() {
        return department;
    }

    /**
     * Sets the value of the department property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDepartment(String value) {
        this.department = value;
    }

    /**
     * Gets the value of the companyShortName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCompanyShortName() {
        return companyShortName;
    }

    /**
     * Sets the value of the companyShortName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCompanyShortName(String value) {
        this.companyShortName = value;
    }

    /**
     * Gets the value of the travelSector property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTravelSector() {
        return travelSector;
    }

    /**
     * Sets the value of the travelSector property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTravelSector(String value) {
        this.travelSector = value;
    }

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCode(String value) {
        this.code = value;
    }

    /**
     * Gets the value of the codeContext property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCodeContext() {
        return codeContext;
    }

    /**
     * Sets the value of the codeContext property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCodeContext(String value) {
        this.codeContext = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theValue;
            theValue = this.getValue();
            strategy.appendField(locator, this, "value", buffer, theValue);
        }
        {
            String theDivision;
            theDivision = this.getDivision();
            strategy.appendField(locator, this, "division", buffer, theDivision);
        }
        {
            String theDepartment;
            theDepartment = this.getDepartment();
            strategy.appendField(locator, this, "department", buffer, theDepartment);
        }
        {
            String theCompanyShortName;
            theCompanyShortName = this.getCompanyShortName();
            strategy.appendField(locator, this, "companyShortName", buffer, theCompanyShortName);
        }
        {
            String theTravelSector;
            theTravelSector = this.getTravelSector();
            strategy.appendField(locator, this, "travelSector", buffer, theTravelSector);
        }
        {
            String theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode);
        }
        {
            String theCodeContext;
            theCodeContext = this.getCodeContext();
            strategy.appendField(locator, this, "codeContext", buffer, theCodeContext);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CompanyNameType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CompanyNameType that = ((CompanyNameType) object);
        {
            String lhsValue;
            lhsValue = this.getValue();
            String rhsValue;
            rhsValue = that.getValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        {
            String lhsDivision;
            lhsDivision = this.getDivision();
            String rhsDivision;
            rhsDivision = that.getDivision();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "division", lhsDivision), LocatorUtils.property(thatLocator, "division", rhsDivision), lhsDivision, rhsDivision)) {
                return false;
            }
        }
        {
            String lhsDepartment;
            lhsDepartment = this.getDepartment();
            String rhsDepartment;
            rhsDepartment = that.getDepartment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "department", lhsDepartment), LocatorUtils.property(thatLocator, "department", rhsDepartment), lhsDepartment, rhsDepartment)) {
                return false;
            }
        }
        {
            String lhsCompanyShortName;
            lhsCompanyShortName = this.getCompanyShortName();
            String rhsCompanyShortName;
            rhsCompanyShortName = that.getCompanyShortName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companyShortName", lhsCompanyShortName), LocatorUtils.property(thatLocator, "companyShortName", rhsCompanyShortName), lhsCompanyShortName, rhsCompanyShortName)) {
                return false;
            }
        }
        {
            String lhsTravelSector;
            lhsTravelSector = this.getTravelSector();
            String rhsTravelSector;
            rhsTravelSector = that.getTravelSector();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "travelSector", lhsTravelSector), LocatorUtils.property(thatLocator, "travelSector", rhsTravelSector), lhsTravelSector, rhsTravelSector)) {
                return false;
            }
        }
        {
            String lhsCode;
            lhsCode = this.getCode();
            String rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            String lhsCodeContext;
            lhsCodeContext = this.getCodeContext();
            String rhsCodeContext;
            rhsCodeContext = that.getCodeContext();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "codeContext", lhsCodeContext), LocatorUtils.property(thatLocator, "codeContext", rhsCodeContext), lhsCodeContext, rhsCodeContext)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theValue;
            theValue = this.getValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        {
            String theDivision;
            theDivision = this.getDivision();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "division", theDivision), currentHashCode, theDivision);
        }
        {
            String theDepartment;
            theDepartment = this.getDepartment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "department", theDepartment), currentHashCode, theDepartment);
        }
        {
            String theCompanyShortName;
            theCompanyShortName = this.getCompanyShortName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companyShortName", theCompanyShortName), currentHashCode, theCompanyShortName);
        }
        {
            String theTravelSector;
            theTravelSector = this.getTravelSector();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "travelSector", theTravelSector), currentHashCode, theTravelSector);
        }
        {
            String theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            String theCodeContext;
            theCodeContext = this.getCodeContext();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "codeContext", theCodeContext), currentHashCode, theCodeContext);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof CompanyNameType) {
            final CompanyNameType copy = ((CompanyNameType) draftCopy);
            if (this.value!= null) {
                String sourceValue;
                sourceValue = this.getValue();
                String copyValue = ((String) strategy.copy(LocatorUtils.property(locator, "value", sourceValue), sourceValue));
                copy.setValue(copyValue);
            } else {
                copy.value = null;
            }
            if (this.division!= null) {
                String sourceDivision;
                sourceDivision = this.getDivision();
                String copyDivision = ((String) strategy.copy(LocatorUtils.property(locator, "division", sourceDivision), sourceDivision));
                copy.setDivision(copyDivision);
            } else {
                copy.division = null;
            }
            if (this.department!= null) {
                String sourceDepartment;
                sourceDepartment = this.getDepartment();
                String copyDepartment = ((String) strategy.copy(LocatorUtils.property(locator, "department", sourceDepartment), sourceDepartment));
                copy.setDepartment(copyDepartment);
            } else {
                copy.department = null;
            }
            if (this.companyShortName!= null) {
                String sourceCompanyShortName;
                sourceCompanyShortName = this.getCompanyShortName();
                String copyCompanyShortName = ((String) strategy.copy(LocatorUtils.property(locator, "companyShortName", sourceCompanyShortName), sourceCompanyShortName));
                copy.setCompanyShortName(copyCompanyShortName);
            } else {
                copy.companyShortName = null;
            }
            if (this.travelSector!= null) {
                String sourceTravelSector;
                sourceTravelSector = this.getTravelSector();
                String copyTravelSector = ((String) strategy.copy(LocatorUtils.property(locator, "travelSector", sourceTravelSector), sourceTravelSector));
                copy.setTravelSector(copyTravelSector);
            } else {
                copy.travelSector = null;
            }
            if (this.code!= null) {
                String sourceCode;
                sourceCode = this.getCode();
                String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                copy.setCode(copyCode);
            } else {
                copy.code = null;
            }
            if (this.codeContext!= null) {
                String sourceCodeContext;
                sourceCodeContext = this.getCodeContext();
                String copyCodeContext = ((String) strategy.copy(LocatorUtils.property(locator, "codeContext", sourceCodeContext), sourceCodeContext));
                copy.setCodeContext(copyCodeContext);
            } else {
                copy.codeContext = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CompanyNameType();
    }

}
