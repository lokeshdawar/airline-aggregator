//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Telephone number(s) to be used with this collection of preferences.
 * 
 * <p>Java class for PhonePrefType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PhonePrefType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Telephone"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TelephoneInfoGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PhonePrefType", propOrder = {
    "telephone"
})
public class PhonePrefType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "Telephone", required = true)
    protected PhonePrefType.Telephone telephone;

    /**
     * Gets the value of the telephone property.
     * 
     * @return
     *     possible object is
     *     {@link PhonePrefType.Telephone }
     *     
     */
    public PhonePrefType.Telephone getTelephone() {
        return telephone;
    }

    /**
     * Sets the value of the telephone property.
     * 
     * @param value
     *     allowed object is
     *     {@link PhonePrefType.Telephone }
     *     
     */
    public void setTelephone(PhonePrefType.Telephone value) {
        this.telephone = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            PhonePrefType.Telephone theTelephone;
            theTelephone = this.getTelephone();
            strategy.appendField(locator, this, "telephone", buffer, theTelephone);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PhonePrefType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PhonePrefType that = ((PhonePrefType) object);
        {
            PhonePrefType.Telephone lhsTelephone;
            lhsTelephone = this.getTelephone();
            PhonePrefType.Telephone rhsTelephone;
            rhsTelephone = that.getTelephone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telephone", lhsTelephone), LocatorUtils.property(thatLocator, "telephone", rhsTelephone), lhsTelephone, rhsTelephone)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PhonePrefType.Telephone theTelephone;
            theTelephone = this.getTelephone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telephone", theTelephone), currentHashCode, theTelephone);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof PhonePrefType) {
            final PhonePrefType copy = ((PhonePrefType) draftCopy);
            if (this.telephone!= null) {
                PhonePrefType.Telephone sourceTelephone;
                sourceTelephone = this.getTelephone();
                PhonePrefType.Telephone copyTelephone = ((PhonePrefType.Telephone) strategy.copy(LocatorUtils.property(locator, "telephone", sourceTelephone), sourceTelephone));
                copy.setTelephone(copyTelephone);
            } else {
                copy.telephone = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new PhonePrefType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TelephoneInfoGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class Telephone
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "RPH")
        protected String rph;
        @XmlAttribute(name = "ShareSynchInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareSynchInd;
        @XmlAttribute(name = "ShareMarketInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareMarketInd;
        @XmlAttribute(name = "PhoneLocationType")
        protected String phoneLocationType;
        @XmlAttribute(name = "PhoneTechType")
        protected String phoneTechType;
        @XmlAttribute(name = "PhoneUseType")
        protected String phoneUseType;
        @XmlAttribute(name = "CountryAccessCode")
        protected String countryAccessCode;
        @XmlAttribute(name = "AreaCityCode")
        protected String areaCityCode;
        @XmlAttribute(name = "PhoneNumber", required = true)
        protected String phoneNumber;
        @XmlAttribute(name = "Extension")
        protected String extension;
        @XmlAttribute(name = "PIN")
        protected String pin;
        @XmlAttribute(name = "Remark")
        protected String remark;
        @XmlAttribute(name = "FormattedInd")
        protected Boolean formattedInd;
        @XmlAttribute(name = "DefaultInd")
        protected Boolean defaultInd;

        /**
         * Gets the value of the rph property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRPH() {
            return rph;
        }

        /**
         * Sets the value of the rph property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRPH(String value) {
            this.rph = value;
        }

        /**
         * Gets the value of the shareSynchInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareSynchInd() {
            return shareSynchInd;
        }

        /**
         * Sets the value of the shareSynchInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareSynchInd(String value) {
            this.shareSynchInd = value;
        }

        /**
         * Gets the value of the shareMarketInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareMarketInd() {
            return shareMarketInd;
        }

        /**
         * Sets the value of the shareMarketInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareMarketInd(String value) {
            this.shareMarketInd = value;
        }

        /**
         * Gets the value of the phoneLocationType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneLocationType() {
            return phoneLocationType;
        }

        /**
         * Sets the value of the phoneLocationType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneLocationType(String value) {
            this.phoneLocationType = value;
        }

        /**
         * Gets the value of the phoneTechType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneTechType() {
            return phoneTechType;
        }

        /**
         * Sets the value of the phoneTechType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneTechType(String value) {
            this.phoneTechType = value;
        }

        /**
         * Gets the value of the phoneUseType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneUseType() {
            return phoneUseType;
        }

        /**
         * Sets the value of the phoneUseType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneUseType(String value) {
            this.phoneUseType = value;
        }

        /**
         * Gets the value of the countryAccessCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCountryAccessCode() {
            return countryAccessCode;
        }

        /**
         * Sets the value of the countryAccessCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCountryAccessCode(String value) {
            this.countryAccessCode = value;
        }

        /**
         * Gets the value of the areaCityCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getAreaCityCode() {
            return areaCityCode;
        }

        /**
         * Sets the value of the areaCityCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setAreaCityCode(String value) {
            this.areaCityCode = value;
        }

        /**
         * Gets the value of the phoneNumber property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneNumber() {
            return phoneNumber;
        }

        /**
         * Sets the value of the phoneNumber property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneNumber(String value) {
            this.phoneNumber = value;
        }

        /**
         * Gets the value of the extension property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getExtension() {
            return extension;
        }

        /**
         * Sets the value of the extension property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setExtension(String value) {
            this.extension = value;
        }

        /**
         * Gets the value of the pin property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPIN() {
            return pin;
        }

        /**
         * Sets the value of the pin property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPIN(String value) {
            this.pin = value;
        }

        /**
         * Gets the value of the remark property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRemark() {
            return remark;
        }

        /**
         * Sets the value of the remark property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRemark(String value) {
            this.remark = value;
        }

        /**
         * Gets the value of the formattedInd property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isFormattedInd() {
            if (formattedInd == null) {
                return false;
            } else {
                return formattedInd;
            }
        }

        /**
         * Sets the value of the formattedInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setFormattedInd(Boolean value) {
            this.formattedInd = value;
        }

        /**
         * Gets the value of the defaultInd property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isDefaultInd() {
            if (defaultInd == null) {
                return false;
            } else {
                return defaultInd;
            }
        }

        /**
         * Sets the value of the defaultInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setDefaultInd(Boolean value) {
            this.defaultInd = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theRPH;
                theRPH = this.getRPH();
                strategy.appendField(locator, this, "rph", buffer, theRPH);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
            }
            {
                String thePhoneLocationType;
                thePhoneLocationType = this.getPhoneLocationType();
                strategy.appendField(locator, this, "phoneLocationType", buffer, thePhoneLocationType);
            }
            {
                String thePhoneTechType;
                thePhoneTechType = this.getPhoneTechType();
                strategy.appendField(locator, this, "phoneTechType", buffer, thePhoneTechType);
            }
            {
                String thePhoneUseType;
                thePhoneUseType = this.getPhoneUseType();
                strategy.appendField(locator, this, "phoneUseType", buffer, thePhoneUseType);
            }
            {
                String theCountryAccessCode;
                theCountryAccessCode = this.getCountryAccessCode();
                strategy.appendField(locator, this, "countryAccessCode", buffer, theCountryAccessCode);
            }
            {
                String theAreaCityCode;
                theAreaCityCode = this.getAreaCityCode();
                strategy.appendField(locator, this, "areaCityCode", buffer, theAreaCityCode);
            }
            {
                String thePhoneNumber;
                thePhoneNumber = this.getPhoneNumber();
                strategy.appendField(locator, this, "phoneNumber", buffer, thePhoneNumber);
            }
            {
                String theExtension;
                theExtension = this.getExtension();
                strategy.appendField(locator, this, "extension", buffer, theExtension);
            }
            {
                String thePIN;
                thePIN = this.getPIN();
                strategy.appendField(locator, this, "pin", buffer, thePIN);
            }
            {
                String theRemark;
                theRemark = this.getRemark();
                strategy.appendField(locator, this, "remark", buffer, theRemark);
            }
            {
                boolean theFormattedInd;
                theFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                strategy.appendField(locator, this, "formattedInd", buffer, theFormattedInd);
            }
            {
                boolean theDefaultInd;
                theDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                strategy.appendField(locator, this, "defaultInd", buffer, theDefaultInd);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PhonePrefType.Telephone)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PhonePrefType.Telephone that = ((PhonePrefType.Telephone) object);
            {
                String lhsRPH;
                lhsRPH = this.getRPH();
                String rhsRPH;
                rhsRPH = that.getRPH();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rph", lhsRPH), LocatorUtils.property(thatLocator, "rph", rhsRPH), lhsRPH, rhsRPH)) {
                    return false;
                }
            }
            {
                String lhsShareSynchInd;
                lhsShareSynchInd = this.getShareSynchInd();
                String rhsShareSynchInd;
                rhsShareSynchInd = that.getShareSynchInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                    return false;
                }
            }
            {
                String lhsShareMarketInd;
                lhsShareMarketInd = this.getShareMarketInd();
                String rhsShareMarketInd;
                rhsShareMarketInd = that.getShareMarketInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                    return false;
                }
            }
            {
                String lhsPhoneLocationType;
                lhsPhoneLocationType = this.getPhoneLocationType();
                String rhsPhoneLocationType;
                rhsPhoneLocationType = that.getPhoneLocationType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneLocationType", lhsPhoneLocationType), LocatorUtils.property(thatLocator, "phoneLocationType", rhsPhoneLocationType), lhsPhoneLocationType, rhsPhoneLocationType)) {
                    return false;
                }
            }
            {
                String lhsPhoneTechType;
                lhsPhoneTechType = this.getPhoneTechType();
                String rhsPhoneTechType;
                rhsPhoneTechType = that.getPhoneTechType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneTechType", lhsPhoneTechType), LocatorUtils.property(thatLocator, "phoneTechType", rhsPhoneTechType), lhsPhoneTechType, rhsPhoneTechType)) {
                    return false;
                }
            }
            {
                String lhsPhoneUseType;
                lhsPhoneUseType = this.getPhoneUseType();
                String rhsPhoneUseType;
                rhsPhoneUseType = that.getPhoneUseType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneUseType", lhsPhoneUseType), LocatorUtils.property(thatLocator, "phoneUseType", rhsPhoneUseType), lhsPhoneUseType, rhsPhoneUseType)) {
                    return false;
                }
            }
            {
                String lhsCountryAccessCode;
                lhsCountryAccessCode = this.getCountryAccessCode();
                String rhsCountryAccessCode;
                rhsCountryAccessCode = that.getCountryAccessCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "countryAccessCode", lhsCountryAccessCode), LocatorUtils.property(thatLocator, "countryAccessCode", rhsCountryAccessCode), lhsCountryAccessCode, rhsCountryAccessCode)) {
                    return false;
                }
            }
            {
                String lhsAreaCityCode;
                lhsAreaCityCode = this.getAreaCityCode();
                String rhsAreaCityCode;
                rhsAreaCityCode = that.getAreaCityCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "areaCityCode", lhsAreaCityCode), LocatorUtils.property(thatLocator, "areaCityCode", rhsAreaCityCode), lhsAreaCityCode, rhsAreaCityCode)) {
                    return false;
                }
            }
            {
                String lhsPhoneNumber;
                lhsPhoneNumber = this.getPhoneNumber();
                String rhsPhoneNumber;
                rhsPhoneNumber = that.getPhoneNumber();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber)) {
                    return false;
                }
            }
            {
                String lhsExtension;
                lhsExtension = this.getExtension();
                String rhsExtension;
                rhsExtension = that.getExtension();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "extension", lhsExtension), LocatorUtils.property(thatLocator, "extension", rhsExtension), lhsExtension, rhsExtension)) {
                    return false;
                }
            }
            {
                String lhsPIN;
                lhsPIN = this.getPIN();
                String rhsPIN;
                rhsPIN = that.getPIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "pin", lhsPIN), LocatorUtils.property(thatLocator, "pin", rhsPIN), lhsPIN, rhsPIN)) {
                    return false;
                }
            }
            {
                String lhsRemark;
                lhsRemark = this.getRemark();
                String rhsRemark;
                rhsRemark = that.getRemark();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "remark", lhsRemark), LocatorUtils.property(thatLocator, "remark", rhsRemark), lhsRemark, rhsRemark)) {
                    return false;
                }
            }
            {
                boolean lhsFormattedInd;
                lhsFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                boolean rhsFormattedInd;
                rhsFormattedInd = ((that.formattedInd!= null)?that.isFormattedInd():false);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "formattedInd", lhsFormattedInd), LocatorUtils.property(thatLocator, "formattedInd", rhsFormattedInd), lhsFormattedInd, rhsFormattedInd)) {
                    return false;
                }
            }
            {
                boolean lhsDefaultInd;
                lhsDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                boolean rhsDefaultInd;
                rhsDefaultInd = ((that.defaultInd!= null)?that.isDefaultInd():false);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultInd", lhsDefaultInd), LocatorUtils.property(thatLocator, "defaultInd", rhsDefaultInd), lhsDefaultInd, rhsDefaultInd)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theRPH;
                theRPH = this.getRPH();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rph", theRPH), currentHashCode, theRPH);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
            }
            {
                String thePhoneLocationType;
                thePhoneLocationType = this.getPhoneLocationType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneLocationType", thePhoneLocationType), currentHashCode, thePhoneLocationType);
            }
            {
                String thePhoneTechType;
                thePhoneTechType = this.getPhoneTechType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneTechType", thePhoneTechType), currentHashCode, thePhoneTechType);
            }
            {
                String thePhoneUseType;
                thePhoneUseType = this.getPhoneUseType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneUseType", thePhoneUseType), currentHashCode, thePhoneUseType);
            }
            {
                String theCountryAccessCode;
                theCountryAccessCode = this.getCountryAccessCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryAccessCode", theCountryAccessCode), currentHashCode, theCountryAccessCode);
            }
            {
                String theAreaCityCode;
                theAreaCityCode = this.getAreaCityCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "areaCityCode", theAreaCityCode), currentHashCode, theAreaCityCode);
            }
            {
                String thePhoneNumber;
                thePhoneNumber = this.getPhoneNumber();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber);
            }
            {
                String theExtension;
                theExtension = this.getExtension();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extension", theExtension), currentHashCode, theExtension);
            }
            {
                String thePIN;
                thePIN = this.getPIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pin", thePIN), currentHashCode, thePIN);
            }
            {
                String theRemark;
                theRemark = this.getRemark();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remark", theRemark), currentHashCode, theRemark);
            }
            {
                boolean theFormattedInd;
                theFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formattedInd", theFormattedInd), currentHashCode, theFormattedInd);
            }
            {
                boolean theDefaultInd;
                theDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultInd", theDefaultInd), currentHashCode, theDefaultInd);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PhonePrefType.Telephone) {
                final PhonePrefType.Telephone copy = ((PhonePrefType.Telephone) draftCopy);
                if (this.rph!= null) {
                    String sourceRPH;
                    sourceRPH = this.getRPH();
                    String copyRPH = ((String) strategy.copy(LocatorUtils.property(locator, "rph", sourceRPH), sourceRPH));
                    copy.setRPH(copyRPH);
                } else {
                    copy.rph = null;
                }
                if (this.shareSynchInd!= null) {
                    String sourceShareSynchInd;
                    sourceShareSynchInd = this.getShareSynchInd();
                    String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                    copy.setShareSynchInd(copyShareSynchInd);
                } else {
                    copy.shareSynchInd = null;
                }
                if (this.shareMarketInd!= null) {
                    String sourceShareMarketInd;
                    sourceShareMarketInd = this.getShareMarketInd();
                    String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                    copy.setShareMarketInd(copyShareMarketInd);
                } else {
                    copy.shareMarketInd = null;
                }
                if (this.phoneLocationType!= null) {
                    String sourcePhoneLocationType;
                    sourcePhoneLocationType = this.getPhoneLocationType();
                    String copyPhoneLocationType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneLocationType", sourcePhoneLocationType), sourcePhoneLocationType));
                    copy.setPhoneLocationType(copyPhoneLocationType);
                } else {
                    copy.phoneLocationType = null;
                }
                if (this.phoneTechType!= null) {
                    String sourcePhoneTechType;
                    sourcePhoneTechType = this.getPhoneTechType();
                    String copyPhoneTechType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneTechType", sourcePhoneTechType), sourcePhoneTechType));
                    copy.setPhoneTechType(copyPhoneTechType);
                } else {
                    copy.phoneTechType = null;
                }
                if (this.phoneUseType!= null) {
                    String sourcePhoneUseType;
                    sourcePhoneUseType = this.getPhoneUseType();
                    String copyPhoneUseType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneUseType", sourcePhoneUseType), sourcePhoneUseType));
                    copy.setPhoneUseType(copyPhoneUseType);
                } else {
                    copy.phoneUseType = null;
                }
                if (this.countryAccessCode!= null) {
                    String sourceCountryAccessCode;
                    sourceCountryAccessCode = this.getCountryAccessCode();
                    String copyCountryAccessCode = ((String) strategy.copy(LocatorUtils.property(locator, "countryAccessCode", sourceCountryAccessCode), sourceCountryAccessCode));
                    copy.setCountryAccessCode(copyCountryAccessCode);
                } else {
                    copy.countryAccessCode = null;
                }
                if (this.areaCityCode!= null) {
                    String sourceAreaCityCode;
                    sourceAreaCityCode = this.getAreaCityCode();
                    String copyAreaCityCode = ((String) strategy.copy(LocatorUtils.property(locator, "areaCityCode", sourceAreaCityCode), sourceAreaCityCode));
                    copy.setAreaCityCode(copyAreaCityCode);
                } else {
                    copy.areaCityCode = null;
                }
                if (this.phoneNumber!= null) {
                    String sourcePhoneNumber;
                    sourcePhoneNumber = this.getPhoneNumber();
                    String copyPhoneNumber = ((String) strategy.copy(LocatorUtils.property(locator, "phoneNumber", sourcePhoneNumber), sourcePhoneNumber));
                    copy.setPhoneNumber(copyPhoneNumber);
                } else {
                    copy.phoneNumber = null;
                }
                if (this.extension!= null) {
                    String sourceExtension;
                    sourceExtension = this.getExtension();
                    String copyExtension = ((String) strategy.copy(LocatorUtils.property(locator, "extension", sourceExtension), sourceExtension));
                    copy.setExtension(copyExtension);
                } else {
                    copy.extension = null;
                }
                if (this.pin!= null) {
                    String sourcePIN;
                    sourcePIN = this.getPIN();
                    String copyPIN = ((String) strategy.copy(LocatorUtils.property(locator, "pin", sourcePIN), sourcePIN));
                    copy.setPIN(copyPIN);
                } else {
                    copy.pin = null;
                }
                if (this.remark!= null) {
                    String sourceRemark;
                    sourceRemark = this.getRemark();
                    String copyRemark = ((String) strategy.copy(LocatorUtils.property(locator, "remark", sourceRemark), sourceRemark));
                    copy.setRemark(copyRemark);
                } else {
                    copy.remark = null;
                }
                if (this.formattedInd!= null) {
                    boolean sourceFormattedInd;
                    sourceFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                    boolean copyFormattedInd = strategy.copy(LocatorUtils.property(locator, "formattedInd", sourceFormattedInd), sourceFormattedInd);
                    copy.setFormattedInd(copyFormattedInd);
                } else {
                    copy.formattedInd = null;
                }
                if (this.defaultInd!= null) {
                    boolean sourceDefaultInd;
                    sourceDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                    boolean copyDefaultInd = strategy.copy(LocatorUtils.property(locator, "defaultInd", sourceDefaultInd), sourceDefaultInd);
                    copy.setDefaultInd(copyDefaultInd);
                } else {
                    copy.defaultInd = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PhonePrefType.Telephone();
        }

    }

}
