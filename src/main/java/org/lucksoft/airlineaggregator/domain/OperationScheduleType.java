//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Details of an operating schedule (e.g. a golf tee time may be more expensive during peak hours v. off peak hours).
 * 
 * <p>Java class for OperationScheduleType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OperationScheduleType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OperationTimes" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="OperationTime" maxOccurs="999"&gt;
 *                     &lt;complexType&gt;
 *                       &lt;complexContent&gt;
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                           &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DOW_PatternGroup"/&gt;
 *                           &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
 *                           &lt;attribute name="AdditionalOperationInfoCode" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *                           &lt;attribute name="Frequency" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
 *                           &lt;attribute name="Text" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to64" /&gt;
 *                         &lt;/restriction&gt;
 *                       &lt;/complexContent&gt;
 *                     &lt;/complexType&gt;
 *                   &lt;/element&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OperationScheduleType", propOrder = {
    "operationTimes"
})
@XmlSeeAlso({
    OperationSchedulePlusChargeType.class
})
public class OperationScheduleType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "OperationTimes")
    protected OperationScheduleType.OperationTimes operationTimes;
    @XmlAttribute(name = "Start")
    protected String start;
    @XmlAttribute(name = "Duration")
    protected String duration;
    @XmlAttribute(name = "End")
    protected String end;

    /**
     * Gets the value of the operationTimes property.
     * 
     * @return
     *     possible object is
     *     {@link OperationScheduleType.OperationTimes }
     *     
     */
    public OperationScheduleType.OperationTimes getOperationTimes() {
        return operationTimes;
    }

    /**
     * Sets the value of the operationTimes property.
     * 
     * @param value
     *     allowed object is
     *     {@link OperationScheduleType.OperationTimes }
     *     
     */
    public void setOperationTimes(OperationScheduleType.OperationTimes value) {
        this.operationTimes = value;
    }

    /**
     * Gets the value of the start property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStart() {
        return start;
    }

    /**
     * Sets the value of the start property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStart(String value) {
        this.start = value;
    }

    /**
     * Gets the value of the duration property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDuration() {
        return duration;
    }

    /**
     * Sets the value of the duration property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDuration(String value) {
        this.duration = value;
    }

    /**
     * Gets the value of the end property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnd() {
        return end;
    }

    /**
     * Sets the value of the end property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnd(String value) {
        this.end = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            OperationScheduleType.OperationTimes theOperationTimes;
            theOperationTimes = this.getOperationTimes();
            strategy.appendField(locator, this, "operationTimes", buffer, theOperationTimes);
        }
        {
            String theStart;
            theStart = this.getStart();
            strategy.appendField(locator, this, "start", buffer, theStart);
        }
        {
            String theDuration;
            theDuration = this.getDuration();
            strategy.appendField(locator, this, "duration", buffer, theDuration);
        }
        {
            String theEnd;
            theEnd = this.getEnd();
            strategy.appendField(locator, this, "end", buffer, theEnd);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OperationScheduleType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OperationScheduleType that = ((OperationScheduleType) object);
        {
            OperationScheduleType.OperationTimes lhsOperationTimes;
            lhsOperationTimes = this.getOperationTimes();
            OperationScheduleType.OperationTimes rhsOperationTimes;
            rhsOperationTimes = that.getOperationTimes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operationTimes", lhsOperationTimes), LocatorUtils.property(thatLocator, "operationTimes", rhsOperationTimes), lhsOperationTimes, rhsOperationTimes)) {
                return false;
            }
        }
        {
            String lhsStart;
            lhsStart = this.getStart();
            String rhsStart;
            rhsStart = that.getStart();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "start", lhsStart), LocatorUtils.property(thatLocator, "start", rhsStart), lhsStart, rhsStart)) {
                return false;
            }
        }
        {
            String lhsDuration;
            lhsDuration = this.getDuration();
            String rhsDuration;
            rhsDuration = that.getDuration();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                return false;
            }
        }
        {
            String lhsEnd;
            lhsEnd = this.getEnd();
            String rhsEnd;
            rhsEnd = that.getEnd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "end", lhsEnd), LocatorUtils.property(thatLocator, "end", rhsEnd), lhsEnd, rhsEnd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            OperationScheduleType.OperationTimes theOperationTimes;
            theOperationTimes = this.getOperationTimes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operationTimes", theOperationTimes), currentHashCode, theOperationTimes);
        }
        {
            String theStart;
            theStart = this.getStart();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "start", theStart), currentHashCode, theStart);
        }
        {
            String theDuration;
            theDuration = this.getDuration();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
        }
        {
            String theEnd;
            theEnd = this.getEnd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "end", theEnd), currentHashCode, theEnd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof OperationScheduleType) {
            final OperationScheduleType copy = ((OperationScheduleType) draftCopy);
            if (this.operationTimes!= null) {
                OperationScheduleType.OperationTimes sourceOperationTimes;
                sourceOperationTimes = this.getOperationTimes();
                OperationScheduleType.OperationTimes copyOperationTimes = ((OperationScheduleType.OperationTimes) strategy.copy(LocatorUtils.property(locator, "operationTimes", sourceOperationTimes), sourceOperationTimes));
                copy.setOperationTimes(copyOperationTimes);
            } else {
                copy.operationTimes = null;
            }
            if (this.start!= null) {
                String sourceStart;
                sourceStart = this.getStart();
                String copyStart = ((String) strategy.copy(LocatorUtils.property(locator, "start", sourceStart), sourceStart));
                copy.setStart(copyStart);
            } else {
                copy.start = null;
            }
            if (this.duration!= null) {
                String sourceDuration;
                sourceDuration = this.getDuration();
                String copyDuration = ((String) strategy.copy(LocatorUtils.property(locator, "duration", sourceDuration), sourceDuration));
                copy.setDuration(copyDuration);
            } else {
                copy.duration = null;
            }
            if (this.end!= null) {
                String sourceEnd;
                sourceEnd = this.getEnd();
                String copyEnd = ((String) strategy.copy(LocatorUtils.property(locator, "end", sourceEnd), sourceEnd));
                copy.setEnd(copyEnd);
            } else {
                copy.end = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new OperationScheduleType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="OperationTime" maxOccurs="999"&gt;
     *           &lt;complexType&gt;
     *             &lt;complexContent&gt;
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DOW_PatternGroup"/&gt;
     *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
     *                 &lt;attribute name="AdditionalOperationInfoCode" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
     *                 &lt;attribute name="Frequency" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
     *                 &lt;attribute name="Text" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to64" /&gt;
     *               &lt;/restriction&gt;
     *             &lt;/complexContent&gt;
     *           &lt;/complexType&gt;
     *         &lt;/element&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "operationTime"
    })
    public static class OperationTimes
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "OperationTime", required = true)
        protected List<OperationScheduleType.OperationTimes.OperationTime> operationTime;

        /**
         * Gets the value of the operationTime property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the operationTime property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getOperationTime().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link OperationScheduleType.OperationTimes.OperationTime }
         * 
         * 
         */
        public List<OperationScheduleType.OperationTimes.OperationTime> getOperationTime() {
            if (operationTime == null) {
                operationTime = new ArrayList<OperationScheduleType.OperationTimes.OperationTime>();
            }
            return this.operationTime;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<OperationScheduleType.OperationTimes.OperationTime> theOperationTime;
                theOperationTime = (((this.operationTime!= null)&&(!this.operationTime.isEmpty()))?this.getOperationTime():null);
                strategy.appendField(locator, this, "operationTime", buffer, theOperationTime);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof OperationScheduleType.OperationTimes)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final OperationScheduleType.OperationTimes that = ((OperationScheduleType.OperationTimes) object);
            {
                List<OperationScheduleType.OperationTimes.OperationTime> lhsOperationTime;
                lhsOperationTime = (((this.operationTime!= null)&&(!this.operationTime.isEmpty()))?this.getOperationTime():null);
                List<OperationScheduleType.OperationTimes.OperationTime> rhsOperationTime;
                rhsOperationTime = (((that.operationTime!= null)&&(!that.operationTime.isEmpty()))?that.getOperationTime():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "operationTime", lhsOperationTime), LocatorUtils.property(thatLocator, "operationTime", rhsOperationTime), lhsOperationTime, rhsOperationTime)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<OperationScheduleType.OperationTimes.OperationTime> theOperationTime;
                theOperationTime = (((this.operationTime!= null)&&(!this.operationTime.isEmpty()))?this.getOperationTime():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operationTime", theOperationTime), currentHashCode, theOperationTime);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof OperationScheduleType.OperationTimes) {
                final OperationScheduleType.OperationTimes copy = ((OperationScheduleType.OperationTimes) draftCopy);
                if ((this.operationTime!= null)&&(!this.operationTime.isEmpty())) {
                    List<OperationScheduleType.OperationTimes.OperationTime> sourceOperationTime;
                    sourceOperationTime = (((this.operationTime!= null)&&(!this.operationTime.isEmpty()))?this.getOperationTime():null);
                    @SuppressWarnings("unchecked")
                    List<OperationScheduleType.OperationTimes.OperationTime> copyOperationTime = ((List<OperationScheduleType.OperationTimes.OperationTime> ) strategy.copy(LocatorUtils.property(locator, "operationTime", sourceOperationTime), sourceOperationTime));
                    copy.operationTime = null;
                    if (copyOperationTime!= null) {
                        List<OperationScheduleType.OperationTimes.OperationTime> uniqueOperationTimel = copy.getOperationTime();
                        uniqueOperationTimel.addAll(copyOperationTime);
                    }
                } else {
                    copy.operationTime = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new OperationScheduleType.OperationTimes();
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType&gt;
         *   &lt;complexContent&gt;
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
         *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DOW_PatternGroup"/&gt;
         *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
         *       &lt;attribute name="AdditionalOperationInfoCode" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
         *       &lt;attribute name="Frequency" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
         *       &lt;attribute name="Text" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to64" /&gt;
         *     &lt;/restriction&gt;
         *   &lt;/complexContent&gt;
         * &lt;/complexType&gt;
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class OperationTime
            implements Cloneable, CopyTo, Equals, HashCode, ToString
        {

            @XmlAttribute(name = "AdditionalOperationInfoCode")
            protected String additionalOperationInfoCode;
            @XmlAttribute(name = "Frequency")
            protected String frequency;
            @XmlAttribute(name = "Text")
            protected String text;
            @XmlAttribute(name = "Mon")
            protected Boolean mon;
            @XmlAttribute(name = "Tue")
            protected Boolean tue;
            @XmlAttribute(name = "Weds")
            protected Boolean weds;
            @XmlAttribute(name = "Thur")
            protected Boolean thur;
            @XmlAttribute(name = "Fri")
            protected Boolean fri;
            @XmlAttribute(name = "Sat")
            protected Boolean sat;
            @XmlAttribute(name = "Sun")
            protected Boolean sun;
            @XmlAttribute(name = "Start")
            protected String start;
            @XmlAttribute(name = "Duration")
            protected String duration;
            @XmlAttribute(name = "End")
            protected String end;

            /**
             * Gets the value of the additionalOperationInfoCode property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getAdditionalOperationInfoCode() {
                return additionalOperationInfoCode;
            }

            /**
             * Sets the value of the additionalOperationInfoCode property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setAdditionalOperationInfoCode(String value) {
                this.additionalOperationInfoCode = value;
            }

            /**
             * Gets the value of the frequency property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getFrequency() {
                return frequency;
            }

            /**
             * Sets the value of the frequency property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setFrequency(String value) {
                this.frequency = value;
            }

            /**
             * Gets the value of the text property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getText() {
                return text;
            }

            /**
             * Sets the value of the text property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setText(String value) {
                this.text = value;
            }

            /**
             * Gets the value of the mon property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isMon() {
                return mon;
            }

            /**
             * Sets the value of the mon property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setMon(Boolean value) {
                this.mon = value;
            }

            /**
             * Gets the value of the tue property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isTue() {
                return tue;
            }

            /**
             * Sets the value of the tue property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setTue(Boolean value) {
                this.tue = value;
            }

            /**
             * Gets the value of the weds property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isWeds() {
                return weds;
            }

            /**
             * Sets the value of the weds property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setWeds(Boolean value) {
                this.weds = value;
            }

            /**
             * Gets the value of the thur property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isThur() {
                return thur;
            }

            /**
             * Sets the value of the thur property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setThur(Boolean value) {
                this.thur = value;
            }

            /**
             * Gets the value of the fri property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isFri() {
                return fri;
            }

            /**
             * Sets the value of the fri property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setFri(Boolean value) {
                this.fri = value;
            }

            /**
             * Gets the value of the sat property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isSat() {
                return sat;
            }

            /**
             * Sets the value of the sat property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setSat(Boolean value) {
                this.sat = value;
            }

            /**
             * Gets the value of the sun property.
             * 
             * @return
             *     possible object is
             *     {@link Boolean }
             *     
             */
            public Boolean isSun() {
                return sun;
            }

            /**
             * Sets the value of the sun property.
             * 
             * @param value
             *     allowed object is
             *     {@link Boolean }
             *     
             */
            public void setSun(Boolean value) {
                this.sun = value;
            }

            /**
             * Gets the value of the start property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getStart() {
                return start;
            }

            /**
             * Sets the value of the start property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setStart(String value) {
                this.start = value;
            }

            /**
             * Gets the value of the duration property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getDuration() {
                return duration;
            }

            /**
             * Sets the value of the duration property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setDuration(String value) {
                this.duration = value;
            }

            /**
             * Gets the value of the end property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getEnd() {
                return end;
            }

            /**
             * Sets the value of the end property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setEnd(String value) {
                this.end = value;
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theAdditionalOperationInfoCode;
                    theAdditionalOperationInfoCode = this.getAdditionalOperationInfoCode();
                    strategy.appendField(locator, this, "additionalOperationInfoCode", buffer, theAdditionalOperationInfoCode);
                }
                {
                    String theFrequency;
                    theFrequency = this.getFrequency();
                    strategy.appendField(locator, this, "frequency", buffer, theFrequency);
                }
                {
                    String theText;
                    theText = this.getText();
                    strategy.appendField(locator, this, "text", buffer, theText);
                }
                {
                    Boolean theMon;
                    theMon = this.isMon();
                    strategy.appendField(locator, this, "mon", buffer, theMon);
                }
                {
                    Boolean theTue;
                    theTue = this.isTue();
                    strategy.appendField(locator, this, "tue", buffer, theTue);
                }
                {
                    Boolean theWeds;
                    theWeds = this.isWeds();
                    strategy.appendField(locator, this, "weds", buffer, theWeds);
                }
                {
                    Boolean theThur;
                    theThur = this.isThur();
                    strategy.appendField(locator, this, "thur", buffer, theThur);
                }
                {
                    Boolean theFri;
                    theFri = this.isFri();
                    strategy.appendField(locator, this, "fri", buffer, theFri);
                }
                {
                    Boolean theSat;
                    theSat = this.isSat();
                    strategy.appendField(locator, this, "sat", buffer, theSat);
                }
                {
                    Boolean theSun;
                    theSun = this.isSun();
                    strategy.appendField(locator, this, "sun", buffer, theSun);
                }
                {
                    String theStart;
                    theStart = this.getStart();
                    strategy.appendField(locator, this, "start", buffer, theStart);
                }
                {
                    String theDuration;
                    theDuration = this.getDuration();
                    strategy.appendField(locator, this, "duration", buffer, theDuration);
                }
                {
                    String theEnd;
                    theEnd = this.getEnd();
                    strategy.appendField(locator, this, "end", buffer, theEnd);
                }
                return buffer;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof OperationScheduleType.OperationTimes.OperationTime)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final OperationScheduleType.OperationTimes.OperationTime that = ((OperationScheduleType.OperationTimes.OperationTime) object);
                {
                    String lhsAdditionalOperationInfoCode;
                    lhsAdditionalOperationInfoCode = this.getAdditionalOperationInfoCode();
                    String rhsAdditionalOperationInfoCode;
                    rhsAdditionalOperationInfoCode = that.getAdditionalOperationInfoCode();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalOperationInfoCode", lhsAdditionalOperationInfoCode), LocatorUtils.property(thatLocator, "additionalOperationInfoCode", rhsAdditionalOperationInfoCode), lhsAdditionalOperationInfoCode, rhsAdditionalOperationInfoCode)) {
                        return false;
                    }
                }
                {
                    String lhsFrequency;
                    lhsFrequency = this.getFrequency();
                    String rhsFrequency;
                    rhsFrequency = that.getFrequency();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "frequency", lhsFrequency), LocatorUtils.property(thatLocator, "frequency", rhsFrequency), lhsFrequency, rhsFrequency)) {
                        return false;
                    }
                }
                {
                    String lhsText;
                    lhsText = this.getText();
                    String rhsText;
                    rhsText = that.getText();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                        return false;
                    }
                }
                {
                    Boolean lhsMon;
                    lhsMon = this.isMon();
                    Boolean rhsMon;
                    rhsMon = that.isMon();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "mon", lhsMon), LocatorUtils.property(thatLocator, "mon", rhsMon), lhsMon, rhsMon)) {
                        return false;
                    }
                }
                {
                    Boolean lhsTue;
                    lhsTue = this.isTue();
                    Boolean rhsTue;
                    rhsTue = that.isTue();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "tue", lhsTue), LocatorUtils.property(thatLocator, "tue", rhsTue), lhsTue, rhsTue)) {
                        return false;
                    }
                }
                {
                    Boolean lhsWeds;
                    lhsWeds = this.isWeds();
                    Boolean rhsWeds;
                    rhsWeds = that.isWeds();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "weds", lhsWeds), LocatorUtils.property(thatLocator, "weds", rhsWeds), lhsWeds, rhsWeds)) {
                        return false;
                    }
                }
                {
                    Boolean lhsThur;
                    lhsThur = this.isThur();
                    Boolean rhsThur;
                    rhsThur = that.isThur();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "thur", lhsThur), LocatorUtils.property(thatLocator, "thur", rhsThur), lhsThur, rhsThur)) {
                        return false;
                    }
                }
                {
                    Boolean lhsFri;
                    lhsFri = this.isFri();
                    Boolean rhsFri;
                    rhsFri = that.isFri();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "fri", lhsFri), LocatorUtils.property(thatLocator, "fri", rhsFri), lhsFri, rhsFri)) {
                        return false;
                    }
                }
                {
                    Boolean lhsSat;
                    lhsSat = this.isSat();
                    Boolean rhsSat;
                    rhsSat = that.isSat();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "sat", lhsSat), LocatorUtils.property(thatLocator, "sat", rhsSat), lhsSat, rhsSat)) {
                        return false;
                    }
                }
                {
                    Boolean lhsSun;
                    lhsSun = this.isSun();
                    Boolean rhsSun;
                    rhsSun = that.isSun();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "sun", lhsSun), LocatorUtils.property(thatLocator, "sun", rhsSun), lhsSun, rhsSun)) {
                        return false;
                    }
                }
                {
                    String lhsStart;
                    lhsStart = this.getStart();
                    String rhsStart;
                    rhsStart = that.getStart();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "start", lhsStart), LocatorUtils.property(thatLocator, "start", rhsStart), lhsStart, rhsStart)) {
                        return false;
                    }
                }
                {
                    String lhsDuration;
                    lhsDuration = this.getDuration();
                    String rhsDuration;
                    rhsDuration = that.getDuration();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                        return false;
                    }
                }
                {
                    String lhsEnd;
                    lhsEnd = this.getEnd();
                    String rhsEnd;
                    rhsEnd = that.getEnd();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "end", lhsEnd), LocatorUtils.property(thatLocator, "end", rhsEnd), lhsEnd, rhsEnd)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theAdditionalOperationInfoCode;
                    theAdditionalOperationInfoCode = this.getAdditionalOperationInfoCode();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalOperationInfoCode", theAdditionalOperationInfoCode), currentHashCode, theAdditionalOperationInfoCode);
                }
                {
                    String theFrequency;
                    theFrequency = this.getFrequency();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "frequency", theFrequency), currentHashCode, theFrequency);
                }
                {
                    String theText;
                    theText = this.getText();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
                }
                {
                    Boolean theMon;
                    theMon = this.isMon();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mon", theMon), currentHashCode, theMon);
                }
                {
                    Boolean theTue;
                    theTue = this.isTue();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tue", theTue), currentHashCode, theTue);
                }
                {
                    Boolean theWeds;
                    theWeds = this.isWeds();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weds", theWeds), currentHashCode, theWeds);
                }
                {
                    Boolean theThur;
                    theThur = this.isThur();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "thur", theThur), currentHashCode, theThur);
                }
                {
                    Boolean theFri;
                    theFri = this.isFri();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fri", theFri), currentHashCode, theFri);
                }
                {
                    Boolean theSat;
                    theSat = this.isSat();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sat", theSat), currentHashCode, theSat);
                }
                {
                    Boolean theSun;
                    theSun = this.isSun();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sun", theSun), currentHashCode, theSun);
                }
                {
                    String theStart;
                    theStart = this.getStart();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "start", theStart), currentHashCode, theStart);
                }
                {
                    String theDuration;
                    theDuration = this.getDuration();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
                }
                {
                    String theEnd;
                    theEnd = this.getEnd();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "end", theEnd), currentHashCode, theEnd);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public Object clone() {
                return copyTo(createNewInstance());
            }

            public Object copyTo(Object target) {
                final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
                return copyTo(null, target, strategy);
            }

            public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
                final Object draftCopy = ((target == null)?createNewInstance():target);
                if (draftCopy instanceof OperationScheduleType.OperationTimes.OperationTime) {
                    final OperationScheduleType.OperationTimes.OperationTime copy = ((OperationScheduleType.OperationTimes.OperationTime) draftCopy);
                    if (this.additionalOperationInfoCode!= null) {
                        String sourceAdditionalOperationInfoCode;
                        sourceAdditionalOperationInfoCode = this.getAdditionalOperationInfoCode();
                        String copyAdditionalOperationInfoCode = ((String) strategy.copy(LocatorUtils.property(locator, "additionalOperationInfoCode", sourceAdditionalOperationInfoCode), sourceAdditionalOperationInfoCode));
                        copy.setAdditionalOperationInfoCode(copyAdditionalOperationInfoCode);
                    } else {
                        copy.additionalOperationInfoCode = null;
                    }
                    if (this.frequency!= null) {
                        String sourceFrequency;
                        sourceFrequency = this.getFrequency();
                        String copyFrequency = ((String) strategy.copy(LocatorUtils.property(locator, "frequency", sourceFrequency), sourceFrequency));
                        copy.setFrequency(copyFrequency);
                    } else {
                        copy.frequency = null;
                    }
                    if (this.text!= null) {
                        String sourceText;
                        sourceText = this.getText();
                        String copyText = ((String) strategy.copy(LocatorUtils.property(locator, "text", sourceText), sourceText));
                        copy.setText(copyText);
                    } else {
                        copy.text = null;
                    }
                    if (this.mon!= null) {
                        Boolean sourceMon;
                        sourceMon = this.isMon();
                        Boolean copyMon = ((Boolean) strategy.copy(LocatorUtils.property(locator, "mon", sourceMon), sourceMon));
                        copy.setMon(copyMon);
                    } else {
                        copy.mon = null;
                    }
                    if (this.tue!= null) {
                        Boolean sourceTue;
                        sourceTue = this.isTue();
                        Boolean copyTue = ((Boolean) strategy.copy(LocatorUtils.property(locator, "tue", sourceTue), sourceTue));
                        copy.setTue(copyTue);
                    } else {
                        copy.tue = null;
                    }
                    if (this.weds!= null) {
                        Boolean sourceWeds;
                        sourceWeds = this.isWeds();
                        Boolean copyWeds = ((Boolean) strategy.copy(LocatorUtils.property(locator, "weds", sourceWeds), sourceWeds));
                        copy.setWeds(copyWeds);
                    } else {
                        copy.weds = null;
                    }
                    if (this.thur!= null) {
                        Boolean sourceThur;
                        sourceThur = this.isThur();
                        Boolean copyThur = ((Boolean) strategy.copy(LocatorUtils.property(locator, "thur", sourceThur), sourceThur));
                        copy.setThur(copyThur);
                    } else {
                        copy.thur = null;
                    }
                    if (this.fri!= null) {
                        Boolean sourceFri;
                        sourceFri = this.isFri();
                        Boolean copyFri = ((Boolean) strategy.copy(LocatorUtils.property(locator, "fri", sourceFri), sourceFri));
                        copy.setFri(copyFri);
                    } else {
                        copy.fri = null;
                    }
                    if (this.sat!= null) {
                        Boolean sourceSat;
                        sourceSat = this.isSat();
                        Boolean copySat = ((Boolean) strategy.copy(LocatorUtils.property(locator, "sat", sourceSat), sourceSat));
                        copy.setSat(copySat);
                    } else {
                        copy.sat = null;
                    }
                    if (this.sun!= null) {
                        Boolean sourceSun;
                        sourceSun = this.isSun();
                        Boolean copySun = ((Boolean) strategy.copy(LocatorUtils.property(locator, "sun", sourceSun), sourceSun));
                        copy.setSun(copySun);
                    } else {
                        copy.sun = null;
                    }
                    if (this.start!= null) {
                        String sourceStart;
                        sourceStart = this.getStart();
                        String copyStart = ((String) strategy.copy(LocatorUtils.property(locator, "start", sourceStart), sourceStart));
                        copy.setStart(copyStart);
                    } else {
                        copy.start = null;
                    }
                    if (this.duration!= null) {
                        String sourceDuration;
                        sourceDuration = this.getDuration();
                        String copyDuration = ((String) strategy.copy(LocatorUtils.property(locator, "duration", sourceDuration), sourceDuration));
                        copy.setDuration(copyDuration);
                    } else {
                        copy.duration = null;
                    }
                    if (this.end!= null) {
                        String sourceEnd;
                        sourceEnd = this.getEnd();
                        String copyEnd = ((String) strategy.copy(LocatorUtils.property(locator, "end", sourceEnd), sourceEnd));
                        copy.setEnd(copyEnd);
                    } else {
                        copy.end = null;
                    }
                }
                return draftCopy;
            }

            public Object createNewInstance() {
                return new OperationScheduleType.OperationTimes.OperationTime();
            }

        }

    }

}
