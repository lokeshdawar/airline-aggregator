//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Provides information on a specific documents
 * 
 * <p>Java class for DocumentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DocumentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element name="DocHolderName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" minOccurs="0"/&gt;
 *           &lt;element name="DocHolderFormattedName" type="{http://www.opentravel.org/OTA/2003/05}PersonNameType" minOccurs="0"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element name="DocLimitations" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" maxOccurs="9" minOccurs="0"/&gt;
 *         &lt;element name="AdditionalPersonNames" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;sequence&gt;
 *                   &lt;element name="AdditionalPersonName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" maxOccurs="99"/&gt;
 *                 &lt;/sequence&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}GenderGroup"/&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}BirthDateGroup"/&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PrivacyGroup"/&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}EffectiveExpireOptionalDateGroup"/&gt;
 *       &lt;attribute name="DocIssueAuthority" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
 *       &lt;attribute name="DocIssueLocation" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
 *       &lt;attribute name="DocID" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to32" /&gt;
 *       &lt;attribute name="DocType" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *       &lt;attribute name="DocIssueStateProv" type="{http://www.opentravel.org/OTA/2003/05}StateProvCodeType" /&gt;
 *       &lt;attribute name="DocIssueCountry" type="{http://www.opentravel.org/OTA/2003/05}ISO3166" /&gt;
 *       &lt;attribute name="BirthCountry" type="{http://www.opentravel.org/OTA/2003/05}ISO3166" /&gt;
 *       &lt;attribute name="DocHolderNationality" type="{http://www.opentravel.org/OTA/2003/05}ISO3166" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DocumentType", propOrder = {
    "docHolderName",
    "docHolderFormattedName",
    "docLimitations",
    "additionalPersonNames"
})
@XmlSeeAlso({
    org.lucksoft.airlineaggregator.domain.AirTravelerType.Document.class
})
public class DocumentType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "DocHolderName")
    protected String docHolderName;
    @XmlElement(name = "DocHolderFormattedName")
    protected PersonNameType docHolderFormattedName;
    @XmlElement(name = "DocLimitations")
    protected List<String> docLimitations;
    @XmlElement(name = "AdditionalPersonNames")
    protected DocumentType.AdditionalPersonNames additionalPersonNames;
    @XmlAttribute(name = "DocIssueAuthority")
    protected String docIssueAuthority;
    @XmlAttribute(name = "DocIssueLocation")
    protected String docIssueLocation;
    @XmlAttribute(name = "DocID")
    protected String docID;
    @XmlAttribute(name = "DocType")
    protected String docType;
    @XmlAttribute(name = "DocIssueStateProv")
    protected String docIssueStateProv;
    @XmlAttribute(name = "DocIssueCountry")
    protected String docIssueCountry;
    @XmlAttribute(name = "BirthCountry")
    protected String birthCountry;
    @XmlAttribute(name = "DocHolderNationality")
    protected String docHolderNationality;
    @XmlAttribute(name = "Gender")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String gender;
    @XmlAttribute(name = "BirthDate")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar birthDate;
    @XmlAttribute(name = "ShareSynchInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareSynchInd;
    @XmlAttribute(name = "ShareMarketInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareMarketInd;
    @XmlAttribute(name = "EffectiveDate")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar effectiveDate;
    @XmlAttribute(name = "ExpireDate")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar expireDate;

    /**
     * Gets the value of the docHolderName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocHolderName() {
        return docHolderName;
    }

    /**
     * Sets the value of the docHolderName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocHolderName(String value) {
        this.docHolderName = value;
    }

    /**
     * Gets the value of the docHolderFormattedName property.
     * 
     * @return
     *     possible object is
     *     {@link PersonNameType }
     *     
     */
    public PersonNameType getDocHolderFormattedName() {
        return docHolderFormattedName;
    }

    /**
     * Sets the value of the docHolderFormattedName property.
     * 
     * @param value
     *     allowed object is
     *     {@link PersonNameType }
     *     
     */
    public void setDocHolderFormattedName(PersonNameType value) {
        this.docHolderFormattedName = value;
    }

    /**
     * Gets the value of the docLimitations property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the docLimitations property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDocLimitations().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getDocLimitations() {
        if (docLimitations == null) {
            docLimitations = new ArrayList<String>();
        }
        return this.docLimitations;
    }

    /**
     * Gets the value of the additionalPersonNames property.
     * 
     * @return
     *     possible object is
     *     {@link DocumentType.AdditionalPersonNames }
     *     
     */
    public DocumentType.AdditionalPersonNames getAdditionalPersonNames() {
        return additionalPersonNames;
    }

    /**
     * Sets the value of the additionalPersonNames property.
     * 
     * @param value
     *     allowed object is
     *     {@link DocumentType.AdditionalPersonNames }
     *     
     */
    public void setAdditionalPersonNames(DocumentType.AdditionalPersonNames value) {
        this.additionalPersonNames = value;
    }

    /**
     * Gets the value of the docIssueAuthority property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocIssueAuthority() {
        return docIssueAuthority;
    }

    /**
     * Sets the value of the docIssueAuthority property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocIssueAuthority(String value) {
        this.docIssueAuthority = value;
    }

    /**
     * Gets the value of the docIssueLocation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocIssueLocation() {
        return docIssueLocation;
    }

    /**
     * Sets the value of the docIssueLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocIssueLocation(String value) {
        this.docIssueLocation = value;
    }

    /**
     * Gets the value of the docID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocID() {
        return docID;
    }

    /**
     * Sets the value of the docID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocID(String value) {
        this.docID = value;
    }

    /**
     * Gets the value of the docType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocType() {
        return docType;
    }

    /**
     * Sets the value of the docType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocType(String value) {
        this.docType = value;
    }

    /**
     * Gets the value of the docIssueStateProv property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocIssueStateProv() {
        return docIssueStateProv;
    }

    /**
     * Sets the value of the docIssueStateProv property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocIssueStateProv(String value) {
        this.docIssueStateProv = value;
    }

    /**
     * Gets the value of the docIssueCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocIssueCountry() {
        return docIssueCountry;
    }

    /**
     * Sets the value of the docIssueCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocIssueCountry(String value) {
        this.docIssueCountry = value;
    }

    /**
     * Gets the value of the birthCountry property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBirthCountry() {
        return birthCountry;
    }

    /**
     * Sets the value of the birthCountry property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBirthCountry(String value) {
        this.birthCountry = value;
    }

    /**
     * Gets the value of the docHolderNationality property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocHolderNationality() {
        return docHolderNationality;
    }

    /**
     * Sets the value of the docHolderNationality property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocHolderNationality(String value) {
        this.docHolderNationality = value;
    }

    /**
     * Gets the value of the gender property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGender() {
        return gender;
    }

    /**
     * Sets the value of the gender property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGender(String value) {
        this.gender = value;
    }

    /**
     * Gets the value of the birthDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getBirthDate() {
        return birthDate;
    }

    /**
     * Sets the value of the birthDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setBirthDate(XMLGregorianCalendar value) {
        this.birthDate = value;
    }

    /**
     * Gets the value of the shareSynchInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareSynchInd() {
        return shareSynchInd;
    }

    /**
     * Sets the value of the shareSynchInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareSynchInd(String value) {
        this.shareSynchInd = value;
    }

    /**
     * Gets the value of the shareMarketInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareMarketInd() {
        return shareMarketInd;
    }

    /**
     * Sets the value of the shareMarketInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareMarketInd(String value) {
        this.shareMarketInd = value;
    }

    /**
     * Gets the value of the effectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Sets the value of the effectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setEffectiveDate(XMLGregorianCalendar value) {
        this.effectiveDate = value;
    }

    /**
     * Gets the value of the expireDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getExpireDate() {
        return expireDate;
    }

    /**
     * Sets the value of the expireDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setExpireDate(XMLGregorianCalendar value) {
        this.expireDate = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theDocHolderName;
            theDocHolderName = this.getDocHolderName();
            strategy.appendField(locator, this, "docHolderName", buffer, theDocHolderName);
        }
        {
            PersonNameType theDocHolderFormattedName;
            theDocHolderFormattedName = this.getDocHolderFormattedName();
            strategy.appendField(locator, this, "docHolderFormattedName", buffer, theDocHolderFormattedName);
        }
        {
            List<String> theDocLimitations;
            theDocLimitations = (((this.docLimitations!= null)&&(!this.docLimitations.isEmpty()))?this.getDocLimitations():null);
            strategy.appendField(locator, this, "docLimitations", buffer, theDocLimitations);
        }
        {
            DocumentType.AdditionalPersonNames theAdditionalPersonNames;
            theAdditionalPersonNames = this.getAdditionalPersonNames();
            strategy.appendField(locator, this, "additionalPersonNames", buffer, theAdditionalPersonNames);
        }
        {
            String theDocIssueAuthority;
            theDocIssueAuthority = this.getDocIssueAuthority();
            strategy.appendField(locator, this, "docIssueAuthority", buffer, theDocIssueAuthority);
        }
        {
            String theDocIssueLocation;
            theDocIssueLocation = this.getDocIssueLocation();
            strategy.appendField(locator, this, "docIssueLocation", buffer, theDocIssueLocation);
        }
        {
            String theDocID;
            theDocID = this.getDocID();
            strategy.appendField(locator, this, "docID", buffer, theDocID);
        }
        {
            String theDocType;
            theDocType = this.getDocType();
            strategy.appendField(locator, this, "docType", buffer, theDocType);
        }
        {
            String theDocIssueStateProv;
            theDocIssueStateProv = this.getDocIssueStateProv();
            strategy.appendField(locator, this, "docIssueStateProv", buffer, theDocIssueStateProv);
        }
        {
            String theDocIssueCountry;
            theDocIssueCountry = this.getDocIssueCountry();
            strategy.appendField(locator, this, "docIssueCountry", buffer, theDocIssueCountry);
        }
        {
            String theBirthCountry;
            theBirthCountry = this.getBirthCountry();
            strategy.appendField(locator, this, "birthCountry", buffer, theBirthCountry);
        }
        {
            String theDocHolderNationality;
            theDocHolderNationality = this.getDocHolderNationality();
            strategy.appendField(locator, this, "docHolderNationality", buffer, theDocHolderNationality);
        }
        {
            String theGender;
            theGender = this.getGender();
            strategy.appendField(locator, this, "gender", buffer, theGender);
        }
        {
            XMLGregorianCalendar theBirthDate;
            theBirthDate = this.getBirthDate();
            strategy.appendField(locator, this, "birthDate", buffer, theBirthDate);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
        }
        {
            XMLGregorianCalendar theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            strategy.appendField(locator, this, "effectiveDate", buffer, theEffectiveDate);
        }
        {
            XMLGregorianCalendar theExpireDate;
            theExpireDate = this.getExpireDate();
            strategy.appendField(locator, this, "expireDate", buffer, theExpireDate);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DocumentType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DocumentType that = ((DocumentType) object);
        {
            String lhsDocHolderName;
            lhsDocHolderName = this.getDocHolderName();
            String rhsDocHolderName;
            rhsDocHolderName = that.getDocHolderName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docHolderName", lhsDocHolderName), LocatorUtils.property(thatLocator, "docHolderName", rhsDocHolderName), lhsDocHolderName, rhsDocHolderName)) {
                return false;
            }
        }
        {
            PersonNameType lhsDocHolderFormattedName;
            lhsDocHolderFormattedName = this.getDocHolderFormattedName();
            PersonNameType rhsDocHolderFormattedName;
            rhsDocHolderFormattedName = that.getDocHolderFormattedName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docHolderFormattedName", lhsDocHolderFormattedName), LocatorUtils.property(thatLocator, "docHolderFormattedName", rhsDocHolderFormattedName), lhsDocHolderFormattedName, rhsDocHolderFormattedName)) {
                return false;
            }
        }
        {
            List<String> lhsDocLimitations;
            lhsDocLimitations = (((this.docLimitations!= null)&&(!this.docLimitations.isEmpty()))?this.getDocLimitations():null);
            List<String> rhsDocLimitations;
            rhsDocLimitations = (((that.docLimitations!= null)&&(!that.docLimitations.isEmpty()))?that.getDocLimitations():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docLimitations", lhsDocLimitations), LocatorUtils.property(thatLocator, "docLimitations", rhsDocLimitations), lhsDocLimitations, rhsDocLimitations)) {
                return false;
            }
        }
        {
            DocumentType.AdditionalPersonNames lhsAdditionalPersonNames;
            lhsAdditionalPersonNames = this.getAdditionalPersonNames();
            DocumentType.AdditionalPersonNames rhsAdditionalPersonNames;
            rhsAdditionalPersonNames = that.getAdditionalPersonNames();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalPersonNames", lhsAdditionalPersonNames), LocatorUtils.property(thatLocator, "additionalPersonNames", rhsAdditionalPersonNames), lhsAdditionalPersonNames, rhsAdditionalPersonNames)) {
                return false;
            }
        }
        {
            String lhsDocIssueAuthority;
            lhsDocIssueAuthority = this.getDocIssueAuthority();
            String rhsDocIssueAuthority;
            rhsDocIssueAuthority = that.getDocIssueAuthority();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docIssueAuthority", lhsDocIssueAuthority), LocatorUtils.property(thatLocator, "docIssueAuthority", rhsDocIssueAuthority), lhsDocIssueAuthority, rhsDocIssueAuthority)) {
                return false;
            }
        }
        {
            String lhsDocIssueLocation;
            lhsDocIssueLocation = this.getDocIssueLocation();
            String rhsDocIssueLocation;
            rhsDocIssueLocation = that.getDocIssueLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docIssueLocation", lhsDocIssueLocation), LocatorUtils.property(thatLocator, "docIssueLocation", rhsDocIssueLocation), lhsDocIssueLocation, rhsDocIssueLocation)) {
                return false;
            }
        }
        {
            String lhsDocID;
            lhsDocID = this.getDocID();
            String rhsDocID;
            rhsDocID = that.getDocID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docID", lhsDocID), LocatorUtils.property(thatLocator, "docID", rhsDocID), lhsDocID, rhsDocID)) {
                return false;
            }
        }
        {
            String lhsDocType;
            lhsDocType = this.getDocType();
            String rhsDocType;
            rhsDocType = that.getDocType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docType", lhsDocType), LocatorUtils.property(thatLocator, "docType", rhsDocType), lhsDocType, rhsDocType)) {
                return false;
            }
        }
        {
            String lhsDocIssueStateProv;
            lhsDocIssueStateProv = this.getDocIssueStateProv();
            String rhsDocIssueStateProv;
            rhsDocIssueStateProv = that.getDocIssueStateProv();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docIssueStateProv", lhsDocIssueStateProv), LocatorUtils.property(thatLocator, "docIssueStateProv", rhsDocIssueStateProv), lhsDocIssueStateProv, rhsDocIssueStateProv)) {
                return false;
            }
        }
        {
            String lhsDocIssueCountry;
            lhsDocIssueCountry = this.getDocIssueCountry();
            String rhsDocIssueCountry;
            rhsDocIssueCountry = that.getDocIssueCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docIssueCountry", lhsDocIssueCountry), LocatorUtils.property(thatLocator, "docIssueCountry", rhsDocIssueCountry), lhsDocIssueCountry, rhsDocIssueCountry)) {
                return false;
            }
        }
        {
            String lhsBirthCountry;
            lhsBirthCountry = this.getBirthCountry();
            String rhsBirthCountry;
            rhsBirthCountry = that.getBirthCountry();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "birthCountry", lhsBirthCountry), LocatorUtils.property(thatLocator, "birthCountry", rhsBirthCountry), lhsBirthCountry, rhsBirthCountry)) {
                return false;
            }
        }
        {
            String lhsDocHolderNationality;
            lhsDocHolderNationality = this.getDocHolderNationality();
            String rhsDocHolderNationality;
            rhsDocHolderNationality = that.getDocHolderNationality();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docHolderNationality", lhsDocHolderNationality), LocatorUtils.property(thatLocator, "docHolderNationality", rhsDocHolderNationality), lhsDocHolderNationality, rhsDocHolderNationality)) {
                return false;
            }
        }
        {
            String lhsGender;
            lhsGender = this.getGender();
            String rhsGender;
            rhsGender = that.getGender();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "gender", lhsGender), LocatorUtils.property(thatLocator, "gender", rhsGender), lhsGender, rhsGender)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsBirthDate;
            lhsBirthDate = this.getBirthDate();
            XMLGregorianCalendar rhsBirthDate;
            rhsBirthDate = that.getBirthDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "birthDate", lhsBirthDate), LocatorUtils.property(thatLocator, "birthDate", rhsBirthDate), lhsBirthDate, rhsBirthDate)) {
                return false;
            }
        }
        {
            String lhsShareSynchInd;
            lhsShareSynchInd = this.getShareSynchInd();
            String rhsShareSynchInd;
            rhsShareSynchInd = that.getShareSynchInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                return false;
            }
        }
        {
            String lhsShareMarketInd;
            lhsShareMarketInd = this.getShareMarketInd();
            String rhsShareMarketInd;
            rhsShareMarketInd = that.getShareMarketInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsEffectiveDate;
            lhsEffectiveDate = this.getEffectiveDate();
            XMLGregorianCalendar rhsEffectiveDate;
            rhsEffectiveDate = that.getEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effectiveDate", lhsEffectiveDate), LocatorUtils.property(thatLocator, "effectiveDate", rhsEffectiveDate), lhsEffectiveDate, rhsEffectiveDate)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsExpireDate;
            lhsExpireDate = this.getExpireDate();
            XMLGregorianCalendar rhsExpireDate;
            rhsExpireDate = that.getExpireDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expireDate", lhsExpireDate), LocatorUtils.property(thatLocator, "expireDate", rhsExpireDate), lhsExpireDate, rhsExpireDate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theDocHolderName;
            theDocHolderName = this.getDocHolderName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docHolderName", theDocHolderName), currentHashCode, theDocHolderName);
        }
        {
            PersonNameType theDocHolderFormattedName;
            theDocHolderFormattedName = this.getDocHolderFormattedName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docHolderFormattedName", theDocHolderFormattedName), currentHashCode, theDocHolderFormattedName);
        }
        {
            List<String> theDocLimitations;
            theDocLimitations = (((this.docLimitations!= null)&&(!this.docLimitations.isEmpty()))?this.getDocLimitations():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docLimitations", theDocLimitations), currentHashCode, theDocLimitations);
        }
        {
            DocumentType.AdditionalPersonNames theAdditionalPersonNames;
            theAdditionalPersonNames = this.getAdditionalPersonNames();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalPersonNames", theAdditionalPersonNames), currentHashCode, theAdditionalPersonNames);
        }
        {
            String theDocIssueAuthority;
            theDocIssueAuthority = this.getDocIssueAuthority();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docIssueAuthority", theDocIssueAuthority), currentHashCode, theDocIssueAuthority);
        }
        {
            String theDocIssueLocation;
            theDocIssueLocation = this.getDocIssueLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docIssueLocation", theDocIssueLocation), currentHashCode, theDocIssueLocation);
        }
        {
            String theDocID;
            theDocID = this.getDocID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docID", theDocID), currentHashCode, theDocID);
        }
        {
            String theDocType;
            theDocType = this.getDocType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docType", theDocType), currentHashCode, theDocType);
        }
        {
            String theDocIssueStateProv;
            theDocIssueStateProv = this.getDocIssueStateProv();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docIssueStateProv", theDocIssueStateProv), currentHashCode, theDocIssueStateProv);
        }
        {
            String theDocIssueCountry;
            theDocIssueCountry = this.getDocIssueCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docIssueCountry", theDocIssueCountry), currentHashCode, theDocIssueCountry);
        }
        {
            String theBirthCountry;
            theBirthCountry = this.getBirthCountry();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "birthCountry", theBirthCountry), currentHashCode, theBirthCountry);
        }
        {
            String theDocHolderNationality;
            theDocHolderNationality = this.getDocHolderNationality();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docHolderNationality", theDocHolderNationality), currentHashCode, theDocHolderNationality);
        }
        {
            String theGender;
            theGender = this.getGender();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "gender", theGender), currentHashCode, theGender);
        }
        {
            XMLGregorianCalendar theBirthDate;
            theBirthDate = this.getBirthDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "birthDate", theBirthDate), currentHashCode, theBirthDate);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
        }
        {
            XMLGregorianCalendar theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effectiveDate", theEffectiveDate), currentHashCode, theEffectiveDate);
        }
        {
            XMLGregorianCalendar theExpireDate;
            theExpireDate = this.getExpireDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expireDate", theExpireDate), currentHashCode, theExpireDate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof DocumentType) {
            final DocumentType copy = ((DocumentType) draftCopy);
            if (this.docHolderName!= null) {
                String sourceDocHolderName;
                sourceDocHolderName = this.getDocHolderName();
                String copyDocHolderName = ((String) strategy.copy(LocatorUtils.property(locator, "docHolderName", sourceDocHolderName), sourceDocHolderName));
                copy.setDocHolderName(copyDocHolderName);
            } else {
                copy.docHolderName = null;
            }
            if (this.docHolderFormattedName!= null) {
                PersonNameType sourceDocHolderFormattedName;
                sourceDocHolderFormattedName = this.getDocHolderFormattedName();
                PersonNameType copyDocHolderFormattedName = ((PersonNameType) strategy.copy(LocatorUtils.property(locator, "docHolderFormattedName", sourceDocHolderFormattedName), sourceDocHolderFormattedName));
                copy.setDocHolderFormattedName(copyDocHolderFormattedName);
            } else {
                copy.docHolderFormattedName = null;
            }
            if ((this.docLimitations!= null)&&(!this.docLimitations.isEmpty())) {
                List<String> sourceDocLimitations;
                sourceDocLimitations = (((this.docLimitations!= null)&&(!this.docLimitations.isEmpty()))?this.getDocLimitations():null);
                @SuppressWarnings("unchecked")
                List<String> copyDocLimitations = ((List<String> ) strategy.copy(LocatorUtils.property(locator, "docLimitations", sourceDocLimitations), sourceDocLimitations));
                copy.docLimitations = null;
                if (copyDocLimitations!= null) {
                    List<String> uniqueDocLimitationsl = copy.getDocLimitations();
                    uniqueDocLimitationsl.addAll(copyDocLimitations);
                }
            } else {
                copy.docLimitations = null;
            }
            if (this.additionalPersonNames!= null) {
                DocumentType.AdditionalPersonNames sourceAdditionalPersonNames;
                sourceAdditionalPersonNames = this.getAdditionalPersonNames();
                DocumentType.AdditionalPersonNames copyAdditionalPersonNames = ((DocumentType.AdditionalPersonNames) strategy.copy(LocatorUtils.property(locator, "additionalPersonNames", sourceAdditionalPersonNames), sourceAdditionalPersonNames));
                copy.setAdditionalPersonNames(copyAdditionalPersonNames);
            } else {
                copy.additionalPersonNames = null;
            }
            if (this.docIssueAuthority!= null) {
                String sourceDocIssueAuthority;
                sourceDocIssueAuthority = this.getDocIssueAuthority();
                String copyDocIssueAuthority = ((String) strategy.copy(LocatorUtils.property(locator, "docIssueAuthority", sourceDocIssueAuthority), sourceDocIssueAuthority));
                copy.setDocIssueAuthority(copyDocIssueAuthority);
            } else {
                copy.docIssueAuthority = null;
            }
            if (this.docIssueLocation!= null) {
                String sourceDocIssueLocation;
                sourceDocIssueLocation = this.getDocIssueLocation();
                String copyDocIssueLocation = ((String) strategy.copy(LocatorUtils.property(locator, "docIssueLocation", sourceDocIssueLocation), sourceDocIssueLocation));
                copy.setDocIssueLocation(copyDocIssueLocation);
            } else {
                copy.docIssueLocation = null;
            }
            if (this.docID!= null) {
                String sourceDocID;
                sourceDocID = this.getDocID();
                String copyDocID = ((String) strategy.copy(LocatorUtils.property(locator, "docID", sourceDocID), sourceDocID));
                copy.setDocID(copyDocID);
            } else {
                copy.docID = null;
            }
            if (this.docType!= null) {
                String sourceDocType;
                sourceDocType = this.getDocType();
                String copyDocType = ((String) strategy.copy(LocatorUtils.property(locator, "docType", sourceDocType), sourceDocType));
                copy.setDocType(copyDocType);
            } else {
                copy.docType = null;
            }
            if (this.docIssueStateProv!= null) {
                String sourceDocIssueStateProv;
                sourceDocIssueStateProv = this.getDocIssueStateProv();
                String copyDocIssueStateProv = ((String) strategy.copy(LocatorUtils.property(locator, "docIssueStateProv", sourceDocIssueStateProv), sourceDocIssueStateProv));
                copy.setDocIssueStateProv(copyDocIssueStateProv);
            } else {
                copy.docIssueStateProv = null;
            }
            if (this.docIssueCountry!= null) {
                String sourceDocIssueCountry;
                sourceDocIssueCountry = this.getDocIssueCountry();
                String copyDocIssueCountry = ((String) strategy.copy(LocatorUtils.property(locator, "docIssueCountry", sourceDocIssueCountry), sourceDocIssueCountry));
                copy.setDocIssueCountry(copyDocIssueCountry);
            } else {
                copy.docIssueCountry = null;
            }
            if (this.birthCountry!= null) {
                String sourceBirthCountry;
                sourceBirthCountry = this.getBirthCountry();
                String copyBirthCountry = ((String) strategy.copy(LocatorUtils.property(locator, "birthCountry", sourceBirthCountry), sourceBirthCountry));
                copy.setBirthCountry(copyBirthCountry);
            } else {
                copy.birthCountry = null;
            }
            if (this.docHolderNationality!= null) {
                String sourceDocHolderNationality;
                sourceDocHolderNationality = this.getDocHolderNationality();
                String copyDocHolderNationality = ((String) strategy.copy(LocatorUtils.property(locator, "docHolderNationality", sourceDocHolderNationality), sourceDocHolderNationality));
                copy.setDocHolderNationality(copyDocHolderNationality);
            } else {
                copy.docHolderNationality = null;
            }
            if (this.gender!= null) {
                String sourceGender;
                sourceGender = this.getGender();
                String copyGender = ((String) strategy.copy(LocatorUtils.property(locator, "gender", sourceGender), sourceGender));
                copy.setGender(copyGender);
            } else {
                copy.gender = null;
            }
            if (this.birthDate!= null) {
                XMLGregorianCalendar sourceBirthDate;
                sourceBirthDate = this.getBirthDate();
                XMLGregorianCalendar copyBirthDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "birthDate", sourceBirthDate), sourceBirthDate));
                copy.setBirthDate(copyBirthDate);
            } else {
                copy.birthDate = null;
            }
            if (this.shareSynchInd!= null) {
                String sourceShareSynchInd;
                sourceShareSynchInd = this.getShareSynchInd();
                String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                copy.setShareSynchInd(copyShareSynchInd);
            } else {
                copy.shareSynchInd = null;
            }
            if (this.shareMarketInd!= null) {
                String sourceShareMarketInd;
                sourceShareMarketInd = this.getShareMarketInd();
                String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                copy.setShareMarketInd(copyShareMarketInd);
            } else {
                copy.shareMarketInd = null;
            }
            if (this.effectiveDate!= null) {
                XMLGregorianCalendar sourceEffectiveDate;
                sourceEffectiveDate = this.getEffectiveDate();
                XMLGregorianCalendar copyEffectiveDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "effectiveDate", sourceEffectiveDate), sourceEffectiveDate));
                copy.setEffectiveDate(copyEffectiveDate);
            } else {
                copy.effectiveDate = null;
            }
            if (this.expireDate!= null) {
                XMLGregorianCalendar sourceExpireDate;
                sourceExpireDate = this.getExpireDate();
                XMLGregorianCalendar copyExpireDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "expireDate", sourceExpireDate), sourceExpireDate));
                copy.setExpireDate(copyExpireDate);
            } else {
                copy.expireDate = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new DocumentType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;sequence&gt;
     *         &lt;element name="AdditionalPersonName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" maxOccurs="99"/&gt;
     *       &lt;/sequence&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "additionalPersonName"
    })
    public static class AdditionalPersonNames
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlElement(name = "AdditionalPersonName", required = true)
        protected List<String> additionalPersonName;

        /**
         * Gets the value of the additionalPersonName property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the additionalPersonName property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAdditionalPersonName().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getAdditionalPersonName() {
            if (additionalPersonName == null) {
                additionalPersonName = new ArrayList<String>();
            }
            return this.additionalPersonName;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                List<String> theAdditionalPersonName;
                theAdditionalPersonName = (((this.additionalPersonName!= null)&&(!this.additionalPersonName.isEmpty()))?this.getAdditionalPersonName():null);
                strategy.appendField(locator, this, "additionalPersonName", buffer, theAdditionalPersonName);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DocumentType.AdditionalPersonNames)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final DocumentType.AdditionalPersonNames that = ((DocumentType.AdditionalPersonNames) object);
            {
                List<String> lhsAdditionalPersonName;
                lhsAdditionalPersonName = (((this.additionalPersonName!= null)&&(!this.additionalPersonName.isEmpty()))?this.getAdditionalPersonName():null);
                List<String> rhsAdditionalPersonName;
                rhsAdditionalPersonName = (((that.additionalPersonName!= null)&&(!that.additionalPersonName.isEmpty()))?that.getAdditionalPersonName():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalPersonName", lhsAdditionalPersonName), LocatorUtils.property(thatLocator, "additionalPersonName", rhsAdditionalPersonName), lhsAdditionalPersonName, rhsAdditionalPersonName)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                List<String> theAdditionalPersonName;
                theAdditionalPersonName = (((this.additionalPersonName!= null)&&(!this.additionalPersonName.isEmpty()))?this.getAdditionalPersonName():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalPersonName", theAdditionalPersonName), currentHashCode, theAdditionalPersonName);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof DocumentType.AdditionalPersonNames) {
                final DocumentType.AdditionalPersonNames copy = ((DocumentType.AdditionalPersonNames) draftCopy);
                if ((this.additionalPersonName!= null)&&(!this.additionalPersonName.isEmpty())) {
                    List<String> sourceAdditionalPersonName;
                    sourceAdditionalPersonName = (((this.additionalPersonName!= null)&&(!this.additionalPersonName.isEmpty()))?this.getAdditionalPersonName():null);
                    @SuppressWarnings("unchecked")
                    List<String> copyAdditionalPersonName = ((List<String> ) strategy.copy(LocatorUtils.property(locator, "additionalPersonName", sourceAdditionalPersonName), sourceAdditionalPersonName));
                    copy.additionalPersonName = null;
                    if (copyAdditionalPersonName!= null) {
                        List<String> uniqueAdditionalPersonNamel = copy.getAdditionalPersonName();
                        uniqueAdditionalPersonNamel.addAll(copyAdditionalPersonName);
                    }
                } else {
                    copy.additionalPersonName = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new DocumentType.AdditionalPersonNames();
        }

    }

}
