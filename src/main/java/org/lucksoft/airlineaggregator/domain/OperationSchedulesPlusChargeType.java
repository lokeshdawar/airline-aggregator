//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * The OperationSchedule class defines the dates and hours of operation in addition the charges that may apply.
 * 	
 * 
 * <p>Java class for OperationSchedulesPlusChargeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OperationSchedulesPlusChargeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OperationSchedule" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.opentravel.org/OTA/2003/05}OperationSchedulePlusChargeType"&gt;
 *                 &lt;attribute name="Name" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to128" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OperationSchedulesPlusChargeType", propOrder = {
    "operationSchedule"
})
public class OperationSchedulesPlusChargeType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "OperationSchedule")
    protected List<OperationSchedulesPlusChargeType.OperationSchedule> operationSchedule;

    /**
     * Gets the value of the operationSchedule property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the operationSchedule property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOperationSchedule().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OperationSchedulesPlusChargeType.OperationSchedule }
     * 
     * 
     */
    public List<OperationSchedulesPlusChargeType.OperationSchedule> getOperationSchedule() {
        if (operationSchedule == null) {
            operationSchedule = new ArrayList<OperationSchedulesPlusChargeType.OperationSchedule>();
        }
        return this.operationSchedule;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<OperationSchedulesPlusChargeType.OperationSchedule> theOperationSchedule;
            theOperationSchedule = (((this.operationSchedule!= null)&&(!this.operationSchedule.isEmpty()))?this.getOperationSchedule():null);
            strategy.appendField(locator, this, "operationSchedule", buffer, theOperationSchedule);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OperationSchedulesPlusChargeType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OperationSchedulesPlusChargeType that = ((OperationSchedulesPlusChargeType) object);
        {
            List<OperationSchedulesPlusChargeType.OperationSchedule> lhsOperationSchedule;
            lhsOperationSchedule = (((this.operationSchedule!= null)&&(!this.operationSchedule.isEmpty()))?this.getOperationSchedule():null);
            List<OperationSchedulesPlusChargeType.OperationSchedule> rhsOperationSchedule;
            rhsOperationSchedule = (((that.operationSchedule!= null)&&(!that.operationSchedule.isEmpty()))?that.getOperationSchedule():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operationSchedule", lhsOperationSchedule), LocatorUtils.property(thatLocator, "operationSchedule", rhsOperationSchedule), lhsOperationSchedule, rhsOperationSchedule)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<OperationSchedulesPlusChargeType.OperationSchedule> theOperationSchedule;
            theOperationSchedule = (((this.operationSchedule!= null)&&(!this.operationSchedule.isEmpty()))?this.getOperationSchedule():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operationSchedule", theOperationSchedule), currentHashCode, theOperationSchedule);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof OperationSchedulesPlusChargeType) {
            final OperationSchedulesPlusChargeType copy = ((OperationSchedulesPlusChargeType) draftCopy);
            if ((this.operationSchedule!= null)&&(!this.operationSchedule.isEmpty())) {
                List<OperationSchedulesPlusChargeType.OperationSchedule> sourceOperationSchedule;
                sourceOperationSchedule = (((this.operationSchedule!= null)&&(!this.operationSchedule.isEmpty()))?this.getOperationSchedule():null);
                @SuppressWarnings("unchecked")
                List<OperationSchedulesPlusChargeType.OperationSchedule> copyOperationSchedule = ((List<OperationSchedulesPlusChargeType.OperationSchedule> ) strategy.copy(LocatorUtils.property(locator, "operationSchedule", sourceOperationSchedule), sourceOperationSchedule));
                copy.operationSchedule = null;
                if (copyOperationSchedule!= null) {
                    List<OperationSchedulesPlusChargeType.OperationSchedule> uniqueOperationSchedulel = copy.getOperationSchedule();
                    uniqueOperationSchedulel.addAll(copyOperationSchedule);
                }
            } else {
                copy.operationSchedule = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new OperationSchedulesPlusChargeType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.opentravel.org/OTA/2003/05}OperationSchedulePlusChargeType"&gt;
     *       &lt;attribute name="Name" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to128" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class OperationSchedule
        extends OperationSchedulePlusChargeType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "Name")
        protected String name;

        /**
         * Gets the value of the name property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getName() {
            return name;
        }

        /**
         * Sets the value of the name property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setName(String value) {
            this.name = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                String theName;
                theName = this.getName();
                strategy.appendField(locator, this, "name", buffer, theName);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof OperationSchedulesPlusChargeType.OperationSchedule)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final OperationSchedulesPlusChargeType.OperationSchedule that = ((OperationSchedulesPlusChargeType.OperationSchedule) object);
            {
                String lhsName;
                lhsName = this.getName();
                String rhsName;
                rhsName = that.getName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                String theName;
                theName = this.getName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof OperationSchedulesPlusChargeType.OperationSchedule) {
                final OperationSchedulesPlusChargeType.OperationSchedule copy = ((OperationSchedulesPlusChargeType.OperationSchedule) draftCopy);
                if (this.name!= null) {
                    String sourceName;
                    sourceName = this.getName();
                    String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                    copy.setName(copyName);
                } else {
                    copy.name = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new OperationSchedulesPlusChargeType.OperationSchedule();
        }

    }

}
