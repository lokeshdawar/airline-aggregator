//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Company name and location for sending invoice for remittances for travel services.
 * 
 * <p>Java class for DirectBillType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DirectBillType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="CompanyName" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;CompanyNameType"&gt;
 *                 &lt;attribute name="ContactName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Address" type="{http://www.opentravel.org/OTA/2003/05}AddressInfoType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PrivacyGroup"/&gt;
 *       &lt;attribute name="DirectBill_ID" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to32" /&gt;
 *       &lt;attribute name="BillingNumber" type="{http://www.opentravel.org/OTA/2003/05}StringLength0to64" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DirectBillType", propOrder = {
    "companyName",
    "address"
})
public class DirectBillType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "CompanyName")
    protected DirectBillType.CompanyName companyName;
    @XmlElement(name = "Address")
    protected AddressInfoType address;
    @XmlAttribute(name = "DirectBill_ID")
    protected String directBillID;
    @XmlAttribute(name = "BillingNumber")
    protected String billingNumber;
    @XmlAttribute(name = "ShareSynchInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareSynchInd;
    @XmlAttribute(name = "ShareMarketInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareMarketInd;

    /**
     * Gets the value of the companyName property.
     * 
     * @return
     *     possible object is
     *     {@link DirectBillType.CompanyName }
     *     
     */
    public DirectBillType.CompanyName getCompanyName() {
        return companyName;
    }

    /**
     * Sets the value of the companyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link DirectBillType.CompanyName }
     *     
     */
    public void setCompanyName(DirectBillType.CompanyName value) {
        this.companyName = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link AddressInfoType }
     *     
     */
    public AddressInfoType getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressInfoType }
     *     
     */
    public void setAddress(AddressInfoType value) {
        this.address = value;
    }

    /**
     * Gets the value of the directBillID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDirectBillID() {
        return directBillID;
    }

    /**
     * Sets the value of the directBillID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDirectBillID(String value) {
        this.directBillID = value;
    }

    /**
     * Gets the value of the billingNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBillingNumber() {
        return billingNumber;
    }

    /**
     * Sets the value of the billingNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBillingNumber(String value) {
        this.billingNumber = value;
    }

    /**
     * Gets the value of the shareSynchInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareSynchInd() {
        return shareSynchInd;
    }

    /**
     * Sets the value of the shareSynchInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareSynchInd(String value) {
        this.shareSynchInd = value;
    }

    /**
     * Gets the value of the shareMarketInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareMarketInd() {
        return shareMarketInd;
    }

    /**
     * Sets the value of the shareMarketInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareMarketInd(String value) {
        this.shareMarketInd = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DirectBillType.CompanyName theCompanyName;
            theCompanyName = this.getCompanyName();
            strategy.appendField(locator, this, "companyName", buffer, theCompanyName);
        }
        {
            AddressInfoType theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            String theDirectBillID;
            theDirectBillID = this.getDirectBillID();
            strategy.appendField(locator, this, "directBillID", buffer, theDirectBillID);
        }
        {
            String theBillingNumber;
            theBillingNumber = this.getBillingNumber();
            strategy.appendField(locator, this, "billingNumber", buffer, theBillingNumber);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DirectBillType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DirectBillType that = ((DirectBillType) object);
        {
            DirectBillType.CompanyName lhsCompanyName;
            lhsCompanyName = this.getCompanyName();
            DirectBillType.CompanyName rhsCompanyName;
            rhsCompanyName = that.getCompanyName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companyName", lhsCompanyName), LocatorUtils.property(thatLocator, "companyName", rhsCompanyName), lhsCompanyName, rhsCompanyName)) {
                return false;
            }
        }
        {
            AddressInfoType lhsAddress;
            lhsAddress = this.getAddress();
            AddressInfoType rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            String lhsDirectBillID;
            lhsDirectBillID = this.getDirectBillID();
            String rhsDirectBillID;
            rhsDirectBillID = that.getDirectBillID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "directBillID", lhsDirectBillID), LocatorUtils.property(thatLocator, "directBillID", rhsDirectBillID), lhsDirectBillID, rhsDirectBillID)) {
                return false;
            }
        }
        {
            String lhsBillingNumber;
            lhsBillingNumber = this.getBillingNumber();
            String rhsBillingNumber;
            rhsBillingNumber = that.getBillingNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "billingNumber", lhsBillingNumber), LocatorUtils.property(thatLocator, "billingNumber", rhsBillingNumber), lhsBillingNumber, rhsBillingNumber)) {
                return false;
            }
        }
        {
            String lhsShareSynchInd;
            lhsShareSynchInd = this.getShareSynchInd();
            String rhsShareSynchInd;
            rhsShareSynchInd = that.getShareSynchInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                return false;
            }
        }
        {
            String lhsShareMarketInd;
            lhsShareMarketInd = this.getShareMarketInd();
            String rhsShareMarketInd;
            rhsShareMarketInd = that.getShareMarketInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DirectBillType.CompanyName theCompanyName;
            theCompanyName = this.getCompanyName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companyName", theCompanyName), currentHashCode, theCompanyName);
        }
        {
            AddressInfoType theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            String theDirectBillID;
            theDirectBillID = this.getDirectBillID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "directBillID", theDirectBillID), currentHashCode, theDirectBillID);
        }
        {
            String theBillingNumber;
            theBillingNumber = this.getBillingNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "billingNumber", theBillingNumber), currentHashCode, theBillingNumber);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof DirectBillType) {
            final DirectBillType copy = ((DirectBillType) draftCopy);
            if (this.companyName!= null) {
                DirectBillType.CompanyName sourceCompanyName;
                sourceCompanyName = this.getCompanyName();
                DirectBillType.CompanyName copyCompanyName = ((DirectBillType.CompanyName) strategy.copy(LocatorUtils.property(locator, "companyName", sourceCompanyName), sourceCompanyName));
                copy.setCompanyName(copyCompanyName);
            } else {
                copy.companyName = null;
            }
            if (this.address!= null) {
                AddressInfoType sourceAddress;
                sourceAddress = this.getAddress();
                AddressInfoType copyAddress = ((AddressInfoType) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.setAddress(copyAddress);
            } else {
                copy.address = null;
            }
            if (this.directBillID!= null) {
                String sourceDirectBillID;
                sourceDirectBillID = this.getDirectBillID();
                String copyDirectBillID = ((String) strategy.copy(LocatorUtils.property(locator, "directBillID", sourceDirectBillID), sourceDirectBillID));
                copy.setDirectBillID(copyDirectBillID);
            } else {
                copy.directBillID = null;
            }
            if (this.billingNumber!= null) {
                String sourceBillingNumber;
                sourceBillingNumber = this.getBillingNumber();
                String copyBillingNumber = ((String) strategy.copy(LocatorUtils.property(locator, "billingNumber", sourceBillingNumber), sourceBillingNumber));
                copy.setBillingNumber(copyBillingNumber);
            } else {
                copy.billingNumber = null;
            }
            if (this.shareSynchInd!= null) {
                String sourceShareSynchInd;
                sourceShareSynchInd = this.getShareSynchInd();
                String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                copy.setShareSynchInd(copyShareSynchInd);
            } else {
                copy.shareSynchInd = null;
            }
            if (this.shareMarketInd!= null) {
                String sourceShareMarketInd;
                sourceShareMarketInd = this.getShareMarketInd();
                String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                copy.setShareMarketInd(copyShareMarketInd);
            } else {
                copy.shareMarketInd = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new DirectBillType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;CompanyNameType"&gt;
     *       &lt;attribute name="ContactName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class CompanyName
        extends CompanyNameType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "ContactName")
        protected String contactName;

        /**
         * Gets the value of the contactName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getContactName() {
            return contactName;
        }

        /**
         * Sets the value of the contactName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setContactName(String value) {
            this.contactName = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                String theContactName;
                theContactName = this.getContactName();
                strategy.appendField(locator, this, "contactName", buffer, theContactName);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof DirectBillType.CompanyName)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final DirectBillType.CompanyName that = ((DirectBillType.CompanyName) object);
            {
                String lhsContactName;
                lhsContactName = this.getContactName();
                String rhsContactName;
                rhsContactName = that.getContactName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "contactName", lhsContactName), LocatorUtils.property(thatLocator, "contactName", rhsContactName), lhsContactName, rhsContactName)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                String theContactName;
                theContactName = this.getContactName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactName", theContactName), currentHashCode, theContactName);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof DirectBillType.CompanyName) {
                final DirectBillType.CompanyName copy = ((DirectBillType.CompanyName) draftCopy);
                if (this.contactName!= null) {
                    String sourceContactName;
                    sourceContactName = this.getContactName();
                    String copyContactName = ((String) strategy.copy(LocatorUtils.property(locator, "contactName", sourceContactName), sourceContactName));
                    copy.setContactName(copyContactName);
                } else {
                    copy.contactName = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new DirectBillType.CompanyName();
        }

    }

}
