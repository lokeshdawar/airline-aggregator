//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Employment identification; using an employee ID number, title, level within the company, and an indication of their status, i.e.: active, retired, on leave, or terminated from employment.  Additional information about an employee can be entered into the element, including the name of the employee, if it differs from the person name identified as a customer or contact.
 * 
 * <p>Java class for EmployeeInfoType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="EmployeeInfoType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;StringLength0to64"&gt;
 *       &lt;attribute name="EmployeeId" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to16" /&gt;
 *       &lt;attribute name="EmployeeLevel" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to16" /&gt;
 *       &lt;attribute name="EmployeeTitle" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" /&gt;
 *       &lt;attribute name="EmployeeStatus" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "EmployeeInfoType", propOrder = {
    "value"
})
public class EmployeeInfoType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlValue
    protected String value;
    @XmlAttribute(name = "EmployeeId")
    protected String employeeId;
    @XmlAttribute(name = "EmployeeLevel")
    protected String employeeLevel;
    @XmlAttribute(name = "EmployeeTitle")
    protected String employeeTitle;
    @XmlAttribute(name = "EmployeeStatus")
    protected String employeeStatus;

    /**
     * Used for Character Strings, length 0 to 64
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the employeeId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmployeeId() {
        return employeeId;
    }

    /**
     * Sets the value of the employeeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmployeeId(String value) {
        this.employeeId = value;
    }

    /**
     * Gets the value of the employeeLevel property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmployeeLevel() {
        return employeeLevel;
    }

    /**
     * Sets the value of the employeeLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmployeeLevel(String value) {
        this.employeeLevel = value;
    }

    /**
     * Gets the value of the employeeTitle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmployeeTitle() {
        return employeeTitle;
    }

    /**
     * Sets the value of the employeeTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmployeeTitle(String value) {
        this.employeeTitle = value;
    }

    /**
     * Gets the value of the employeeStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEmployeeStatus() {
        return employeeStatus;
    }

    /**
     * Sets the value of the employeeStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEmployeeStatus(String value) {
        this.employeeStatus = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theValue;
            theValue = this.getValue();
            strategy.appendField(locator, this, "value", buffer, theValue);
        }
        {
            String theEmployeeId;
            theEmployeeId = this.getEmployeeId();
            strategy.appendField(locator, this, "employeeId", buffer, theEmployeeId);
        }
        {
            String theEmployeeLevel;
            theEmployeeLevel = this.getEmployeeLevel();
            strategy.appendField(locator, this, "employeeLevel", buffer, theEmployeeLevel);
        }
        {
            String theEmployeeTitle;
            theEmployeeTitle = this.getEmployeeTitle();
            strategy.appendField(locator, this, "employeeTitle", buffer, theEmployeeTitle);
        }
        {
            String theEmployeeStatus;
            theEmployeeStatus = this.getEmployeeStatus();
            strategy.appendField(locator, this, "employeeStatus", buffer, theEmployeeStatus);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof EmployeeInfoType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EmployeeInfoType that = ((EmployeeInfoType) object);
        {
            String lhsValue;
            lhsValue = this.getValue();
            String rhsValue;
            rhsValue = that.getValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        {
            String lhsEmployeeId;
            lhsEmployeeId = this.getEmployeeId();
            String rhsEmployeeId;
            rhsEmployeeId = that.getEmployeeId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "employeeId", lhsEmployeeId), LocatorUtils.property(thatLocator, "employeeId", rhsEmployeeId), lhsEmployeeId, rhsEmployeeId)) {
                return false;
            }
        }
        {
            String lhsEmployeeLevel;
            lhsEmployeeLevel = this.getEmployeeLevel();
            String rhsEmployeeLevel;
            rhsEmployeeLevel = that.getEmployeeLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "employeeLevel", lhsEmployeeLevel), LocatorUtils.property(thatLocator, "employeeLevel", rhsEmployeeLevel), lhsEmployeeLevel, rhsEmployeeLevel)) {
                return false;
            }
        }
        {
            String lhsEmployeeTitle;
            lhsEmployeeTitle = this.getEmployeeTitle();
            String rhsEmployeeTitle;
            rhsEmployeeTitle = that.getEmployeeTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "employeeTitle", lhsEmployeeTitle), LocatorUtils.property(thatLocator, "employeeTitle", rhsEmployeeTitle), lhsEmployeeTitle, rhsEmployeeTitle)) {
                return false;
            }
        }
        {
            String lhsEmployeeStatus;
            lhsEmployeeStatus = this.getEmployeeStatus();
            String rhsEmployeeStatus;
            rhsEmployeeStatus = that.getEmployeeStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "employeeStatus", lhsEmployeeStatus), LocatorUtils.property(thatLocator, "employeeStatus", rhsEmployeeStatus), lhsEmployeeStatus, rhsEmployeeStatus)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theValue;
            theValue = this.getValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        {
            String theEmployeeId;
            theEmployeeId = this.getEmployeeId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "employeeId", theEmployeeId), currentHashCode, theEmployeeId);
        }
        {
            String theEmployeeLevel;
            theEmployeeLevel = this.getEmployeeLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "employeeLevel", theEmployeeLevel), currentHashCode, theEmployeeLevel);
        }
        {
            String theEmployeeTitle;
            theEmployeeTitle = this.getEmployeeTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "employeeTitle", theEmployeeTitle), currentHashCode, theEmployeeTitle);
        }
        {
            String theEmployeeStatus;
            theEmployeeStatus = this.getEmployeeStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "employeeStatus", theEmployeeStatus), currentHashCode, theEmployeeStatus);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof EmployeeInfoType) {
            final EmployeeInfoType copy = ((EmployeeInfoType) draftCopy);
            if (this.value!= null) {
                String sourceValue;
                sourceValue = this.getValue();
                String copyValue = ((String) strategy.copy(LocatorUtils.property(locator, "value", sourceValue), sourceValue));
                copy.setValue(copyValue);
            } else {
                copy.value = null;
            }
            if (this.employeeId!= null) {
                String sourceEmployeeId;
                sourceEmployeeId = this.getEmployeeId();
                String copyEmployeeId = ((String) strategy.copy(LocatorUtils.property(locator, "employeeId", sourceEmployeeId), sourceEmployeeId));
                copy.setEmployeeId(copyEmployeeId);
            } else {
                copy.employeeId = null;
            }
            if (this.employeeLevel!= null) {
                String sourceEmployeeLevel;
                sourceEmployeeLevel = this.getEmployeeLevel();
                String copyEmployeeLevel = ((String) strategy.copy(LocatorUtils.property(locator, "employeeLevel", sourceEmployeeLevel), sourceEmployeeLevel));
                copy.setEmployeeLevel(copyEmployeeLevel);
            } else {
                copy.employeeLevel = null;
            }
            if (this.employeeTitle!= null) {
                String sourceEmployeeTitle;
                sourceEmployeeTitle = this.getEmployeeTitle();
                String copyEmployeeTitle = ((String) strategy.copy(LocatorUtils.property(locator, "employeeTitle", sourceEmployeeTitle), sourceEmployeeTitle));
                copy.setEmployeeTitle(copyEmployeeTitle);
            } else {
                copy.employeeTitle = null;
            }
            if (this.employeeStatus!= null) {
                String sourceEmployeeStatus;
                sourceEmployeeStatus = this.getEmployeeStatus();
                String copyEmployeeStatus = ((String) strategy.copy(LocatorUtils.property(locator, "employeeStatus", sourceEmployeeStatus), sourceEmployeeStatus));
                copy.setEmployeeStatus(copyEmployeeStatus);
            } else {
                copy.employeeStatus = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new EmployeeInfoType();
    }

}
