//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Collection of data used to ensure the correct reservation is canceled or modified (e.g. in the case of a hotel reservation modification, a CustLoyalty/ MembershipID would be verified as part of the reservation that you plan to modify to ensure the correct reservation is being modified).
 * 
 * <p>Java class for VerificationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="VerificationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="PersonName" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;extension base="{http://www.opentravel.org/OTA/2003/05}PersonNameType"&gt;
 *                 &lt;attribute name="PartialName" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Email" type="{http://www.opentravel.org/OTA/2003/05}EmailType" minOccurs="0"/&gt;
 *         &lt;element name="TelephoneInfo" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TelephoneInfoGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="PaymentCard" type="{http://www.opentravel.org/OTA/2003/05}PaymentCardType" minOccurs="0"/&gt;
 *         &lt;element name="AddressInfo" type="{http://www.opentravel.org/OTA/2003/05}AddressInfoType" minOccurs="0"/&gt;
 *         &lt;element name="CustLoyalty" maxOccurs="5" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CustomerLoyaltyGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Vendor" type="{http://www.opentravel.org/OTA/2003/05}CompanyNameType" maxOccurs="5" minOccurs="0"/&gt;
 *         &lt;element name="ReservationTimeSpan" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="AssociatedQuantity" maxOccurs="5" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CodeListGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="StartLocation" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;LocationType"&gt;
 *                 &lt;attribute name="AssociatedDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="EndLocation" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;simpleContent&gt;
 *               &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;LocationType"&gt;
 *                 &lt;attribute name="AssociatedDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" /&gt;
 *               &lt;/extension&gt;
 *             &lt;/simpleContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element ref="{http://www.opentravel.org/OTA/2003/05}TPA_Extensions" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VerificationType", propOrder = {
    "personName",
    "email",
    "telephoneInfo",
    "paymentCard",
    "addressInfo",
    "custLoyalty",
    "vendor",
    "reservationTimeSpan",
    "associatedQuantity",
    "startLocation",
    "endLocation",
    "tpaExtensions"
})
public class VerificationType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "PersonName")
    protected VerificationType.PersonName personName;
    @XmlElement(name = "Email")
    protected EmailType email;
    @XmlElement(name = "TelephoneInfo")
    protected VerificationType.TelephoneInfo telephoneInfo;
    @XmlElement(name = "PaymentCard")
    protected PaymentCardType paymentCard;
    @XmlElement(name = "AddressInfo")
    protected AddressInfoType addressInfo;
    @XmlElement(name = "CustLoyalty")
    protected List<VerificationType.CustLoyalty> custLoyalty;
    @XmlElement(name = "Vendor")
    protected List<CompanyNameType> vendor;
    @XmlElement(name = "ReservationTimeSpan")
    protected VerificationType.ReservationTimeSpan reservationTimeSpan;
    @XmlElement(name = "AssociatedQuantity")
    protected List<VerificationType.AssociatedQuantity> associatedQuantity;
    @XmlElement(name = "StartLocation")
    protected VerificationType.StartLocation startLocation;
    @XmlElement(name = "EndLocation")
    protected VerificationType.EndLocation endLocation;
    @XmlElement(name = "TPA_Extensions")
    protected TPAExtensionsType tpaExtensions;

    /**
     * Gets the value of the personName property.
     * 
     * @return
     *     possible object is
     *     {@link VerificationType.PersonName }
     *     
     */
    public VerificationType.PersonName getPersonName() {
        return personName;
    }

    /**
     * Sets the value of the personName property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerificationType.PersonName }
     *     
     */
    public void setPersonName(VerificationType.PersonName value) {
        this.personName = value;
    }

    /**
     * Gets the value of the email property.
     * 
     * @return
     *     possible object is
     *     {@link EmailType }
     *     
     */
    public EmailType getEmail() {
        return email;
    }

    /**
     * Sets the value of the email property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmailType }
     *     
     */
    public void setEmail(EmailType value) {
        this.email = value;
    }

    /**
     * Gets the value of the telephoneInfo property.
     * 
     * @return
     *     possible object is
     *     {@link VerificationType.TelephoneInfo }
     *     
     */
    public VerificationType.TelephoneInfo getTelephoneInfo() {
        return telephoneInfo;
    }

    /**
     * Sets the value of the telephoneInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerificationType.TelephoneInfo }
     *     
     */
    public void setTelephoneInfo(VerificationType.TelephoneInfo value) {
        this.telephoneInfo = value;
    }

    /**
     * Gets the value of the paymentCard property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentCardType }
     *     
     */
    public PaymentCardType getPaymentCard() {
        return paymentCard;
    }

    /**
     * Sets the value of the paymentCard property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentCardType }
     *     
     */
    public void setPaymentCard(PaymentCardType value) {
        this.paymentCard = value;
    }

    /**
     * Gets the value of the addressInfo property.
     * 
     * @return
     *     possible object is
     *     {@link AddressInfoType }
     *     
     */
    public AddressInfoType getAddressInfo() {
        return addressInfo;
    }

    /**
     * Sets the value of the addressInfo property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressInfoType }
     *     
     */
    public void setAddressInfo(AddressInfoType value) {
        this.addressInfo = value;
    }

    /**
     * Gets the value of the custLoyalty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the custLoyalty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCustLoyalty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VerificationType.CustLoyalty }
     * 
     * 
     */
    public List<VerificationType.CustLoyalty> getCustLoyalty() {
        if (custLoyalty == null) {
            custLoyalty = new ArrayList<VerificationType.CustLoyalty>();
        }
        return this.custLoyalty;
    }

    /**
     * Gets the value of the vendor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the vendor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVendor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CompanyNameType }
     * 
     * 
     */
    public List<CompanyNameType> getVendor() {
        if (vendor == null) {
            vendor = new ArrayList<CompanyNameType>();
        }
        return this.vendor;
    }

    /**
     * Gets the value of the reservationTimeSpan property.
     * 
     * @return
     *     possible object is
     *     {@link VerificationType.ReservationTimeSpan }
     *     
     */
    public VerificationType.ReservationTimeSpan getReservationTimeSpan() {
        return reservationTimeSpan;
    }

    /**
     * Sets the value of the reservationTimeSpan property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerificationType.ReservationTimeSpan }
     *     
     */
    public void setReservationTimeSpan(VerificationType.ReservationTimeSpan value) {
        this.reservationTimeSpan = value;
    }

    /**
     * Gets the value of the associatedQuantity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the associatedQuantity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAssociatedQuantity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VerificationType.AssociatedQuantity }
     * 
     * 
     */
    public List<VerificationType.AssociatedQuantity> getAssociatedQuantity() {
        if (associatedQuantity == null) {
            associatedQuantity = new ArrayList<VerificationType.AssociatedQuantity>();
        }
        return this.associatedQuantity;
    }

    /**
     * Gets the value of the startLocation property.
     * 
     * @return
     *     possible object is
     *     {@link VerificationType.StartLocation }
     *     
     */
    public VerificationType.StartLocation getStartLocation() {
        return startLocation;
    }

    /**
     * Sets the value of the startLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerificationType.StartLocation }
     *     
     */
    public void setStartLocation(VerificationType.StartLocation value) {
        this.startLocation = value;
    }

    /**
     * Gets the value of the endLocation property.
     * 
     * @return
     *     possible object is
     *     {@link VerificationType.EndLocation }
     *     
     */
    public VerificationType.EndLocation getEndLocation() {
        return endLocation;
    }

    /**
     * Sets the value of the endLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerificationType.EndLocation }
     *     
     */
    public void setEndLocation(VerificationType.EndLocation value) {
        this.endLocation = value;
    }

    /**
     * Gets the value of the tpaExtensions property.
     * 
     * @return
     *     possible object is
     *     {@link TPAExtensionsType }
     *     
     */
    public TPAExtensionsType getTPAExtensions() {
        return tpaExtensions;
    }

    /**
     * Sets the value of the tpaExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link TPAExtensionsType }
     *     
     */
    public void setTPAExtensions(TPAExtensionsType value) {
        this.tpaExtensions = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            VerificationType.PersonName thePersonName;
            thePersonName = this.getPersonName();
            strategy.appendField(locator, this, "personName", buffer, thePersonName);
        }
        {
            EmailType theEmail;
            theEmail = this.getEmail();
            strategy.appendField(locator, this, "email", buffer, theEmail);
        }
        {
            VerificationType.TelephoneInfo theTelephoneInfo;
            theTelephoneInfo = this.getTelephoneInfo();
            strategy.appendField(locator, this, "telephoneInfo", buffer, theTelephoneInfo);
        }
        {
            PaymentCardType thePaymentCard;
            thePaymentCard = this.getPaymentCard();
            strategy.appendField(locator, this, "paymentCard", buffer, thePaymentCard);
        }
        {
            AddressInfoType theAddressInfo;
            theAddressInfo = this.getAddressInfo();
            strategy.appendField(locator, this, "addressInfo", buffer, theAddressInfo);
        }
        {
            List<VerificationType.CustLoyalty> theCustLoyalty;
            theCustLoyalty = (((this.custLoyalty!= null)&&(!this.custLoyalty.isEmpty()))?this.getCustLoyalty():null);
            strategy.appendField(locator, this, "custLoyalty", buffer, theCustLoyalty);
        }
        {
            List<CompanyNameType> theVendor;
            theVendor = (((this.vendor!= null)&&(!this.vendor.isEmpty()))?this.getVendor():null);
            strategy.appendField(locator, this, "vendor", buffer, theVendor);
        }
        {
            VerificationType.ReservationTimeSpan theReservationTimeSpan;
            theReservationTimeSpan = this.getReservationTimeSpan();
            strategy.appendField(locator, this, "reservationTimeSpan", buffer, theReservationTimeSpan);
        }
        {
            List<VerificationType.AssociatedQuantity> theAssociatedQuantity;
            theAssociatedQuantity = (((this.associatedQuantity!= null)&&(!this.associatedQuantity.isEmpty()))?this.getAssociatedQuantity():null);
            strategy.appendField(locator, this, "associatedQuantity", buffer, theAssociatedQuantity);
        }
        {
            VerificationType.StartLocation theStartLocation;
            theStartLocation = this.getStartLocation();
            strategy.appendField(locator, this, "startLocation", buffer, theStartLocation);
        }
        {
            VerificationType.EndLocation theEndLocation;
            theEndLocation = this.getEndLocation();
            strategy.appendField(locator, this, "endLocation", buffer, theEndLocation);
        }
        {
            TPAExtensionsType theTPAExtensions;
            theTPAExtensions = this.getTPAExtensions();
            strategy.appendField(locator, this, "tpaExtensions", buffer, theTPAExtensions);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof VerificationType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final VerificationType that = ((VerificationType) object);
        {
            VerificationType.PersonName lhsPersonName;
            lhsPersonName = this.getPersonName();
            VerificationType.PersonName rhsPersonName;
            rhsPersonName = that.getPersonName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "personName", lhsPersonName), LocatorUtils.property(thatLocator, "personName", rhsPersonName), lhsPersonName, rhsPersonName)) {
                return false;
            }
        }
        {
            EmailType lhsEmail;
            lhsEmail = this.getEmail();
            EmailType rhsEmail;
            rhsEmail = that.getEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEmail), LocatorUtils.property(thatLocator, "email", rhsEmail), lhsEmail, rhsEmail)) {
                return false;
            }
        }
        {
            VerificationType.TelephoneInfo lhsTelephoneInfo;
            lhsTelephoneInfo = this.getTelephoneInfo();
            VerificationType.TelephoneInfo rhsTelephoneInfo;
            rhsTelephoneInfo = that.getTelephoneInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telephoneInfo", lhsTelephoneInfo), LocatorUtils.property(thatLocator, "telephoneInfo", rhsTelephoneInfo), lhsTelephoneInfo, rhsTelephoneInfo)) {
                return false;
            }
        }
        {
            PaymentCardType lhsPaymentCard;
            lhsPaymentCard = this.getPaymentCard();
            PaymentCardType rhsPaymentCard;
            rhsPaymentCard = that.getPaymentCard();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentCard", lhsPaymentCard), LocatorUtils.property(thatLocator, "paymentCard", rhsPaymentCard), lhsPaymentCard, rhsPaymentCard)) {
                return false;
            }
        }
        {
            AddressInfoType lhsAddressInfo;
            lhsAddressInfo = this.getAddressInfo();
            AddressInfoType rhsAddressInfo;
            rhsAddressInfo = that.getAddressInfo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addressInfo", lhsAddressInfo), LocatorUtils.property(thatLocator, "addressInfo", rhsAddressInfo), lhsAddressInfo, rhsAddressInfo)) {
                return false;
            }
        }
        {
            List<VerificationType.CustLoyalty> lhsCustLoyalty;
            lhsCustLoyalty = (((this.custLoyalty!= null)&&(!this.custLoyalty.isEmpty()))?this.getCustLoyalty():null);
            List<VerificationType.CustLoyalty> rhsCustLoyalty;
            rhsCustLoyalty = (((that.custLoyalty!= null)&&(!that.custLoyalty.isEmpty()))?that.getCustLoyalty():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "custLoyalty", lhsCustLoyalty), LocatorUtils.property(thatLocator, "custLoyalty", rhsCustLoyalty), lhsCustLoyalty, rhsCustLoyalty)) {
                return false;
            }
        }
        {
            List<CompanyNameType> lhsVendor;
            lhsVendor = (((this.vendor!= null)&&(!this.vendor.isEmpty()))?this.getVendor():null);
            List<CompanyNameType> rhsVendor;
            rhsVendor = (((that.vendor!= null)&&(!that.vendor.isEmpty()))?that.getVendor():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendor", lhsVendor), LocatorUtils.property(thatLocator, "vendor", rhsVendor), lhsVendor, rhsVendor)) {
                return false;
            }
        }
        {
            VerificationType.ReservationTimeSpan lhsReservationTimeSpan;
            lhsReservationTimeSpan = this.getReservationTimeSpan();
            VerificationType.ReservationTimeSpan rhsReservationTimeSpan;
            rhsReservationTimeSpan = that.getReservationTimeSpan();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reservationTimeSpan", lhsReservationTimeSpan), LocatorUtils.property(thatLocator, "reservationTimeSpan", rhsReservationTimeSpan), lhsReservationTimeSpan, rhsReservationTimeSpan)) {
                return false;
            }
        }
        {
            List<VerificationType.AssociatedQuantity> lhsAssociatedQuantity;
            lhsAssociatedQuantity = (((this.associatedQuantity!= null)&&(!this.associatedQuantity.isEmpty()))?this.getAssociatedQuantity():null);
            List<VerificationType.AssociatedQuantity> rhsAssociatedQuantity;
            rhsAssociatedQuantity = (((that.associatedQuantity!= null)&&(!that.associatedQuantity.isEmpty()))?that.getAssociatedQuantity():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedQuantity", lhsAssociatedQuantity), LocatorUtils.property(thatLocator, "associatedQuantity", rhsAssociatedQuantity), lhsAssociatedQuantity, rhsAssociatedQuantity)) {
                return false;
            }
        }
        {
            VerificationType.StartLocation lhsStartLocation;
            lhsStartLocation = this.getStartLocation();
            VerificationType.StartLocation rhsStartLocation;
            rhsStartLocation = that.getStartLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "startLocation", lhsStartLocation), LocatorUtils.property(thatLocator, "startLocation", rhsStartLocation), lhsStartLocation, rhsStartLocation)) {
                return false;
            }
        }
        {
            VerificationType.EndLocation lhsEndLocation;
            lhsEndLocation = this.getEndLocation();
            VerificationType.EndLocation rhsEndLocation;
            rhsEndLocation = that.getEndLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "endLocation", lhsEndLocation), LocatorUtils.property(thatLocator, "endLocation", rhsEndLocation), lhsEndLocation, rhsEndLocation)) {
                return false;
            }
        }
        {
            TPAExtensionsType lhsTPAExtensions;
            lhsTPAExtensions = this.getTPAExtensions();
            TPAExtensionsType rhsTPAExtensions;
            rhsTPAExtensions = that.getTPAExtensions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tpaExtensions", lhsTPAExtensions), LocatorUtils.property(thatLocator, "tpaExtensions", rhsTPAExtensions), lhsTPAExtensions, rhsTPAExtensions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            VerificationType.PersonName thePersonName;
            thePersonName = this.getPersonName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "personName", thePersonName), currentHashCode, thePersonName);
        }
        {
            EmailType theEmail;
            theEmail = this.getEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEmail), currentHashCode, theEmail);
        }
        {
            VerificationType.TelephoneInfo theTelephoneInfo;
            theTelephoneInfo = this.getTelephoneInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telephoneInfo", theTelephoneInfo), currentHashCode, theTelephoneInfo);
        }
        {
            PaymentCardType thePaymentCard;
            thePaymentCard = this.getPaymentCard();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentCard", thePaymentCard), currentHashCode, thePaymentCard);
        }
        {
            AddressInfoType theAddressInfo;
            theAddressInfo = this.getAddressInfo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addressInfo", theAddressInfo), currentHashCode, theAddressInfo);
        }
        {
            List<VerificationType.CustLoyalty> theCustLoyalty;
            theCustLoyalty = (((this.custLoyalty!= null)&&(!this.custLoyalty.isEmpty()))?this.getCustLoyalty():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "custLoyalty", theCustLoyalty), currentHashCode, theCustLoyalty);
        }
        {
            List<CompanyNameType> theVendor;
            theVendor = (((this.vendor!= null)&&(!this.vendor.isEmpty()))?this.getVendor():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendor", theVendor), currentHashCode, theVendor);
        }
        {
            VerificationType.ReservationTimeSpan theReservationTimeSpan;
            theReservationTimeSpan = this.getReservationTimeSpan();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reservationTimeSpan", theReservationTimeSpan), currentHashCode, theReservationTimeSpan);
        }
        {
            List<VerificationType.AssociatedQuantity> theAssociatedQuantity;
            theAssociatedQuantity = (((this.associatedQuantity!= null)&&(!this.associatedQuantity.isEmpty()))?this.getAssociatedQuantity():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedQuantity", theAssociatedQuantity), currentHashCode, theAssociatedQuantity);
        }
        {
            VerificationType.StartLocation theStartLocation;
            theStartLocation = this.getStartLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "startLocation", theStartLocation), currentHashCode, theStartLocation);
        }
        {
            VerificationType.EndLocation theEndLocation;
            theEndLocation = this.getEndLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endLocation", theEndLocation), currentHashCode, theEndLocation);
        }
        {
            TPAExtensionsType theTPAExtensions;
            theTPAExtensions = this.getTPAExtensions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tpaExtensions", theTPAExtensions), currentHashCode, theTPAExtensions);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof VerificationType) {
            final VerificationType copy = ((VerificationType) draftCopy);
            if (this.personName!= null) {
                VerificationType.PersonName sourcePersonName;
                sourcePersonName = this.getPersonName();
                VerificationType.PersonName copyPersonName = ((VerificationType.PersonName) strategy.copy(LocatorUtils.property(locator, "personName", sourcePersonName), sourcePersonName));
                copy.setPersonName(copyPersonName);
            } else {
                copy.personName = null;
            }
            if (this.email!= null) {
                EmailType sourceEmail;
                sourceEmail = this.getEmail();
                EmailType copyEmail = ((EmailType) strategy.copy(LocatorUtils.property(locator, "email", sourceEmail), sourceEmail));
                copy.setEmail(copyEmail);
            } else {
                copy.email = null;
            }
            if (this.telephoneInfo!= null) {
                VerificationType.TelephoneInfo sourceTelephoneInfo;
                sourceTelephoneInfo = this.getTelephoneInfo();
                VerificationType.TelephoneInfo copyTelephoneInfo = ((VerificationType.TelephoneInfo) strategy.copy(LocatorUtils.property(locator, "telephoneInfo", sourceTelephoneInfo), sourceTelephoneInfo));
                copy.setTelephoneInfo(copyTelephoneInfo);
            } else {
                copy.telephoneInfo = null;
            }
            if (this.paymentCard!= null) {
                PaymentCardType sourcePaymentCard;
                sourcePaymentCard = this.getPaymentCard();
                PaymentCardType copyPaymentCard = ((PaymentCardType) strategy.copy(LocatorUtils.property(locator, "paymentCard", sourcePaymentCard), sourcePaymentCard));
                copy.setPaymentCard(copyPaymentCard);
            } else {
                copy.paymentCard = null;
            }
            if (this.addressInfo!= null) {
                AddressInfoType sourceAddressInfo;
                sourceAddressInfo = this.getAddressInfo();
                AddressInfoType copyAddressInfo = ((AddressInfoType) strategy.copy(LocatorUtils.property(locator, "addressInfo", sourceAddressInfo), sourceAddressInfo));
                copy.setAddressInfo(copyAddressInfo);
            } else {
                copy.addressInfo = null;
            }
            if ((this.custLoyalty!= null)&&(!this.custLoyalty.isEmpty())) {
                List<VerificationType.CustLoyalty> sourceCustLoyalty;
                sourceCustLoyalty = (((this.custLoyalty!= null)&&(!this.custLoyalty.isEmpty()))?this.getCustLoyalty():null);
                @SuppressWarnings("unchecked")
                List<VerificationType.CustLoyalty> copyCustLoyalty = ((List<VerificationType.CustLoyalty> ) strategy.copy(LocatorUtils.property(locator, "custLoyalty", sourceCustLoyalty), sourceCustLoyalty));
                copy.custLoyalty = null;
                if (copyCustLoyalty!= null) {
                    List<VerificationType.CustLoyalty> uniqueCustLoyaltyl = copy.getCustLoyalty();
                    uniqueCustLoyaltyl.addAll(copyCustLoyalty);
                }
            } else {
                copy.custLoyalty = null;
            }
            if ((this.vendor!= null)&&(!this.vendor.isEmpty())) {
                List<CompanyNameType> sourceVendor;
                sourceVendor = (((this.vendor!= null)&&(!this.vendor.isEmpty()))?this.getVendor():null);
                @SuppressWarnings("unchecked")
                List<CompanyNameType> copyVendor = ((List<CompanyNameType> ) strategy.copy(LocatorUtils.property(locator, "vendor", sourceVendor), sourceVendor));
                copy.vendor = null;
                if (copyVendor!= null) {
                    List<CompanyNameType> uniqueVendorl = copy.getVendor();
                    uniqueVendorl.addAll(copyVendor);
                }
            } else {
                copy.vendor = null;
            }
            if (this.reservationTimeSpan!= null) {
                VerificationType.ReservationTimeSpan sourceReservationTimeSpan;
                sourceReservationTimeSpan = this.getReservationTimeSpan();
                VerificationType.ReservationTimeSpan copyReservationTimeSpan = ((VerificationType.ReservationTimeSpan) strategy.copy(LocatorUtils.property(locator, "reservationTimeSpan", sourceReservationTimeSpan), sourceReservationTimeSpan));
                copy.setReservationTimeSpan(copyReservationTimeSpan);
            } else {
                copy.reservationTimeSpan = null;
            }
            if ((this.associatedQuantity!= null)&&(!this.associatedQuantity.isEmpty())) {
                List<VerificationType.AssociatedQuantity> sourceAssociatedQuantity;
                sourceAssociatedQuantity = (((this.associatedQuantity!= null)&&(!this.associatedQuantity.isEmpty()))?this.getAssociatedQuantity():null);
                @SuppressWarnings("unchecked")
                List<VerificationType.AssociatedQuantity> copyAssociatedQuantity = ((List<VerificationType.AssociatedQuantity> ) strategy.copy(LocatorUtils.property(locator, "associatedQuantity", sourceAssociatedQuantity), sourceAssociatedQuantity));
                copy.associatedQuantity = null;
                if (copyAssociatedQuantity!= null) {
                    List<VerificationType.AssociatedQuantity> uniqueAssociatedQuantityl = copy.getAssociatedQuantity();
                    uniqueAssociatedQuantityl.addAll(copyAssociatedQuantity);
                }
            } else {
                copy.associatedQuantity = null;
            }
            if (this.startLocation!= null) {
                VerificationType.StartLocation sourceStartLocation;
                sourceStartLocation = this.getStartLocation();
                VerificationType.StartLocation copyStartLocation = ((VerificationType.StartLocation) strategy.copy(LocatorUtils.property(locator, "startLocation", sourceStartLocation), sourceStartLocation));
                copy.setStartLocation(copyStartLocation);
            } else {
                copy.startLocation = null;
            }
            if (this.endLocation!= null) {
                VerificationType.EndLocation sourceEndLocation;
                sourceEndLocation = this.getEndLocation();
                VerificationType.EndLocation copyEndLocation = ((VerificationType.EndLocation) strategy.copy(LocatorUtils.property(locator, "endLocation", sourceEndLocation), sourceEndLocation));
                copy.setEndLocation(copyEndLocation);
            } else {
                copy.endLocation = null;
            }
            if (this.tpaExtensions!= null) {
                TPAExtensionsType sourceTPAExtensions;
                sourceTPAExtensions = this.getTPAExtensions();
                TPAExtensionsType copyTPAExtensions = ((TPAExtensionsType) strategy.copy(LocatorUtils.property(locator, "tpaExtensions", sourceTPAExtensions), sourceTPAExtensions));
                copy.setTPAExtensions(copyTPAExtensions);
            } else {
                copy.tpaExtensions = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new VerificationType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CodeListGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class AssociatedQuantity
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "URI")
        @XmlSchemaType(name = "anyURI")
        protected String uri;
        @XmlAttribute(name = "Code")
        protected String code;
        @XmlAttribute(name = "CodeContext")
        protected String codeContext;
        @XmlAttribute(name = "Quantity")
        @XmlSchemaType(name = "nonNegativeInteger")
        protected BigInteger quantity;

        /**
         * Gets the value of the uri property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getURI() {
            return uri;
        }

        /**
         * Sets the value of the uri property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setURI(String value) {
            this.uri = value;
        }

        /**
         * Gets the value of the code property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCode() {
            return code;
        }

        /**
         * Sets the value of the code property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCode(String value) {
            this.code = value;
        }

        /**
         * Gets the value of the codeContext property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCodeContext() {
            return codeContext;
        }

        /**
         * Sets the value of the codeContext property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCodeContext(String value) {
            this.codeContext = value;
        }

        /**
         * Gets the value of the quantity property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getQuantity() {
            return quantity;
        }

        /**
         * Sets the value of the quantity property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setQuantity(BigInteger value) {
            this.quantity = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theURI;
                theURI = this.getURI();
                strategy.appendField(locator, this, "uri", buffer, theURI);
            }
            {
                String theCode;
                theCode = this.getCode();
                strategy.appendField(locator, this, "code", buffer, theCode);
            }
            {
                String theCodeContext;
                theCodeContext = this.getCodeContext();
                strategy.appendField(locator, this, "codeContext", buffer, theCodeContext);
            }
            {
                BigInteger theQuantity;
                theQuantity = this.getQuantity();
                strategy.appendField(locator, this, "quantity", buffer, theQuantity);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.AssociatedQuantity)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VerificationType.AssociatedQuantity that = ((VerificationType.AssociatedQuantity) object);
            {
                String lhsURI;
                lhsURI = this.getURI();
                String rhsURI;
                rhsURI = that.getURI();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "uri", lhsURI), LocatorUtils.property(thatLocator, "uri", rhsURI), lhsURI, rhsURI)) {
                    return false;
                }
            }
            {
                String lhsCode;
                lhsCode = this.getCode();
                String rhsCode;
                rhsCode = that.getCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                    return false;
                }
            }
            {
                String lhsCodeContext;
                lhsCodeContext = this.getCodeContext();
                String rhsCodeContext;
                rhsCodeContext = that.getCodeContext();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "codeContext", lhsCodeContext), LocatorUtils.property(thatLocator, "codeContext", rhsCodeContext), lhsCodeContext, rhsCodeContext)) {
                    return false;
                }
            }
            {
                BigInteger lhsQuantity;
                lhsQuantity = this.getQuantity();
                BigInteger rhsQuantity;
                rhsQuantity = that.getQuantity();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "quantity", lhsQuantity), LocatorUtils.property(thatLocator, "quantity", rhsQuantity), lhsQuantity, rhsQuantity)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theURI;
                theURI = this.getURI();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uri", theURI), currentHashCode, theURI);
            }
            {
                String theCode;
                theCode = this.getCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
            }
            {
                String theCodeContext;
                theCodeContext = this.getCodeContext();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "codeContext", theCodeContext), currentHashCode, theCodeContext);
            }
            {
                BigInteger theQuantity;
                theQuantity = this.getQuantity();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "quantity", theQuantity), currentHashCode, theQuantity);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof VerificationType.AssociatedQuantity) {
                final VerificationType.AssociatedQuantity copy = ((VerificationType.AssociatedQuantity) draftCopy);
                if (this.uri!= null) {
                    String sourceURI;
                    sourceURI = this.getURI();
                    String copyURI = ((String) strategy.copy(LocatorUtils.property(locator, "uri", sourceURI), sourceURI));
                    copy.setURI(copyURI);
                } else {
                    copy.uri = null;
                }
                if (this.code!= null) {
                    String sourceCode;
                    sourceCode = this.getCode();
                    String copyCode = ((String) strategy.copy(LocatorUtils.property(locator, "code", sourceCode), sourceCode));
                    copy.setCode(copyCode);
                } else {
                    copy.code = null;
                }
                if (this.codeContext!= null) {
                    String sourceCodeContext;
                    sourceCodeContext = this.getCodeContext();
                    String copyCodeContext = ((String) strategy.copy(LocatorUtils.property(locator, "codeContext", sourceCodeContext), sourceCodeContext));
                    copy.setCodeContext(copyCodeContext);
                } else {
                    copy.codeContext = null;
                }
                if (this.quantity!= null) {
                    BigInteger sourceQuantity;
                    sourceQuantity = this.getQuantity();
                    BigInteger copyQuantity = ((BigInteger) strategy.copy(LocatorUtils.property(locator, "quantity", sourceQuantity), sourceQuantity));
                    copy.setQuantity(copyQuantity);
                } else {
                    copy.quantity = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.AssociatedQuantity();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}CustomerLoyaltyGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class CustLoyalty
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "ProgramID")
        protected String programID;
        @XmlAttribute(name = "MembershipID")
        protected String membershipID;
        @XmlAttribute(name = "TravelSector")
        protected String travelSector;
        @XmlAttribute(name = "RPH")
        protected String rph;
        @XmlAttribute(name = "VendorCode")
        protected List<String> vendorCode;
        @XmlAttribute(name = "LoyalLevel")
        protected String loyalLevel;
        @XmlAttribute(name = "SingleVendorInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String singleVendorInd;
        @XmlAttribute(name = "SignupDate")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar signupDate;
        @XmlAttribute(name = "ShareSynchInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareSynchInd;
        @XmlAttribute(name = "ShareMarketInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareMarketInd;
        @XmlAttribute(name = "EffectiveDate")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar effectiveDate;
        @XmlAttribute(name = "ExpireDate")
        @XmlSchemaType(name = "date")
        protected XMLGregorianCalendar expireDate;

        /**
         * Gets the value of the programID property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getProgramID() {
            return programID;
        }

        /**
         * Sets the value of the programID property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setProgramID(String value) {
            this.programID = value;
        }

        /**
         * Gets the value of the membershipID property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getMembershipID() {
            return membershipID;
        }

        /**
         * Sets the value of the membershipID property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setMembershipID(String value) {
            this.membershipID = value;
        }

        /**
         * Gets the value of the travelSector property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getTravelSector() {
            return travelSector;
        }

        /**
         * Sets the value of the travelSector property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setTravelSector(String value) {
            this.travelSector = value;
        }

        /**
         * Gets the value of the rph property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRPH() {
            return rph;
        }

        /**
         * Sets the value of the rph property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRPH(String value) {
            this.rph = value;
        }

        /**
         * Gets the value of the vendorCode property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the vendorCode property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getVendorCode().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getVendorCode() {
            if (vendorCode == null) {
                vendorCode = new ArrayList<String>();
            }
            return this.vendorCode;
        }

        /**
         * Gets the value of the loyalLevel property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLoyalLevel() {
            return loyalLevel;
        }

        /**
         * Sets the value of the loyalLevel property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setLoyalLevel(String value) {
            this.loyalLevel = value;
        }

        /**
         * Gets the value of the singleVendorInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSingleVendorInd() {
            return singleVendorInd;
        }

        /**
         * Sets the value of the singleVendorInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSingleVendorInd(String value) {
            this.singleVendorInd = value;
        }

        /**
         * Gets the value of the signupDate property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getSignupDate() {
            return signupDate;
        }

        /**
         * Sets the value of the signupDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setSignupDate(XMLGregorianCalendar value) {
            this.signupDate = value;
        }

        /**
         * Gets the value of the shareSynchInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareSynchInd() {
            return shareSynchInd;
        }

        /**
         * Sets the value of the shareSynchInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareSynchInd(String value) {
            this.shareSynchInd = value;
        }

        /**
         * Gets the value of the shareMarketInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareMarketInd() {
            return shareMarketInd;
        }

        /**
         * Sets the value of the shareMarketInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareMarketInd(String value) {
            this.shareMarketInd = value;
        }

        /**
         * Gets the value of the effectiveDate property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getEffectiveDate() {
            return effectiveDate;
        }

        /**
         * Sets the value of the effectiveDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setEffectiveDate(XMLGregorianCalendar value) {
            this.effectiveDate = value;
        }

        /**
         * Gets the value of the expireDate property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getExpireDate() {
            return expireDate;
        }

        /**
         * Sets the value of the expireDate property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setExpireDate(XMLGregorianCalendar value) {
            this.expireDate = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theProgramID;
                theProgramID = this.getProgramID();
                strategy.appendField(locator, this, "programID", buffer, theProgramID);
            }
            {
                String theMembershipID;
                theMembershipID = this.getMembershipID();
                strategy.appendField(locator, this, "membershipID", buffer, theMembershipID);
            }
            {
                String theTravelSector;
                theTravelSector = this.getTravelSector();
                strategy.appendField(locator, this, "travelSector", buffer, theTravelSector);
            }
            {
                String theRPH;
                theRPH = this.getRPH();
                strategy.appendField(locator, this, "rph", buffer, theRPH);
            }
            {
                List<String> theVendorCode;
                theVendorCode = (((this.vendorCode!= null)&&(!this.vendorCode.isEmpty()))?this.getVendorCode():null);
                strategy.appendField(locator, this, "vendorCode", buffer, theVendorCode);
            }
            {
                String theLoyalLevel;
                theLoyalLevel = this.getLoyalLevel();
                strategy.appendField(locator, this, "loyalLevel", buffer, theLoyalLevel);
            }
            {
                String theSingleVendorInd;
                theSingleVendorInd = this.getSingleVendorInd();
                strategy.appendField(locator, this, "singleVendorInd", buffer, theSingleVendorInd);
            }
            {
                XMLGregorianCalendar theSignupDate;
                theSignupDate = this.getSignupDate();
                strategy.appendField(locator, this, "signupDate", buffer, theSignupDate);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
            }
            {
                XMLGregorianCalendar theEffectiveDate;
                theEffectiveDate = this.getEffectiveDate();
                strategy.appendField(locator, this, "effectiveDate", buffer, theEffectiveDate);
            }
            {
                XMLGregorianCalendar theExpireDate;
                theExpireDate = this.getExpireDate();
                strategy.appendField(locator, this, "expireDate", buffer, theExpireDate);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.CustLoyalty)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VerificationType.CustLoyalty that = ((VerificationType.CustLoyalty) object);
            {
                String lhsProgramID;
                lhsProgramID = this.getProgramID();
                String rhsProgramID;
                rhsProgramID = that.getProgramID();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "programID", lhsProgramID), LocatorUtils.property(thatLocator, "programID", rhsProgramID), lhsProgramID, rhsProgramID)) {
                    return false;
                }
            }
            {
                String lhsMembershipID;
                lhsMembershipID = this.getMembershipID();
                String rhsMembershipID;
                rhsMembershipID = that.getMembershipID();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "membershipID", lhsMembershipID), LocatorUtils.property(thatLocator, "membershipID", rhsMembershipID), lhsMembershipID, rhsMembershipID)) {
                    return false;
                }
            }
            {
                String lhsTravelSector;
                lhsTravelSector = this.getTravelSector();
                String rhsTravelSector;
                rhsTravelSector = that.getTravelSector();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "travelSector", lhsTravelSector), LocatorUtils.property(thatLocator, "travelSector", rhsTravelSector), lhsTravelSector, rhsTravelSector)) {
                    return false;
                }
            }
            {
                String lhsRPH;
                lhsRPH = this.getRPH();
                String rhsRPH;
                rhsRPH = that.getRPH();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rph", lhsRPH), LocatorUtils.property(thatLocator, "rph", rhsRPH), lhsRPH, rhsRPH)) {
                    return false;
                }
            }
            {
                List<String> lhsVendorCode;
                lhsVendorCode = (((this.vendorCode!= null)&&(!this.vendorCode.isEmpty()))?this.getVendorCode():null);
                List<String> rhsVendorCode;
                rhsVendorCode = (((that.vendorCode!= null)&&(!that.vendorCode.isEmpty()))?that.getVendorCode():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorCode", lhsVendorCode), LocatorUtils.property(thatLocator, "vendorCode", rhsVendorCode), lhsVendorCode, rhsVendorCode)) {
                    return false;
                }
            }
            {
                String lhsLoyalLevel;
                lhsLoyalLevel = this.getLoyalLevel();
                String rhsLoyalLevel;
                rhsLoyalLevel = that.getLoyalLevel();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "loyalLevel", lhsLoyalLevel), LocatorUtils.property(thatLocator, "loyalLevel", rhsLoyalLevel), lhsLoyalLevel, rhsLoyalLevel)) {
                    return false;
                }
            }
            {
                String lhsSingleVendorInd;
                lhsSingleVendorInd = this.getSingleVendorInd();
                String rhsSingleVendorInd;
                rhsSingleVendorInd = that.getSingleVendorInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "singleVendorInd", lhsSingleVendorInd), LocatorUtils.property(thatLocator, "singleVendorInd", rhsSingleVendorInd), lhsSingleVendorInd, rhsSingleVendorInd)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsSignupDate;
                lhsSignupDate = this.getSignupDate();
                XMLGregorianCalendar rhsSignupDate;
                rhsSignupDate = that.getSignupDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "signupDate", lhsSignupDate), LocatorUtils.property(thatLocator, "signupDate", rhsSignupDate), lhsSignupDate, rhsSignupDate)) {
                    return false;
                }
            }
            {
                String lhsShareSynchInd;
                lhsShareSynchInd = this.getShareSynchInd();
                String rhsShareSynchInd;
                rhsShareSynchInd = that.getShareSynchInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                    return false;
                }
            }
            {
                String lhsShareMarketInd;
                lhsShareMarketInd = this.getShareMarketInd();
                String rhsShareMarketInd;
                rhsShareMarketInd = that.getShareMarketInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsEffectiveDate;
                lhsEffectiveDate = this.getEffectiveDate();
                XMLGregorianCalendar rhsEffectiveDate;
                rhsEffectiveDate = that.getEffectiveDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "effectiveDate", lhsEffectiveDate), LocatorUtils.property(thatLocator, "effectiveDate", rhsEffectiveDate), lhsEffectiveDate, rhsEffectiveDate)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsExpireDate;
                lhsExpireDate = this.getExpireDate();
                XMLGregorianCalendar rhsExpireDate;
                rhsExpireDate = that.getExpireDate();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "expireDate", lhsExpireDate), LocatorUtils.property(thatLocator, "expireDate", rhsExpireDate), lhsExpireDate, rhsExpireDate)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theProgramID;
                theProgramID = this.getProgramID();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "programID", theProgramID), currentHashCode, theProgramID);
            }
            {
                String theMembershipID;
                theMembershipID = this.getMembershipID();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membershipID", theMembershipID), currentHashCode, theMembershipID);
            }
            {
                String theTravelSector;
                theTravelSector = this.getTravelSector();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "travelSector", theTravelSector), currentHashCode, theTravelSector);
            }
            {
                String theRPH;
                theRPH = this.getRPH();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rph", theRPH), currentHashCode, theRPH);
            }
            {
                List<String> theVendorCode;
                theVendorCode = (((this.vendorCode!= null)&&(!this.vendorCode.isEmpty()))?this.getVendorCode():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorCode", theVendorCode), currentHashCode, theVendorCode);
            }
            {
                String theLoyalLevel;
                theLoyalLevel = this.getLoyalLevel();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "loyalLevel", theLoyalLevel), currentHashCode, theLoyalLevel);
            }
            {
                String theSingleVendorInd;
                theSingleVendorInd = this.getSingleVendorInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "singleVendorInd", theSingleVendorInd), currentHashCode, theSingleVendorInd);
            }
            {
                XMLGregorianCalendar theSignupDate;
                theSignupDate = this.getSignupDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "signupDate", theSignupDate), currentHashCode, theSignupDate);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
            }
            {
                XMLGregorianCalendar theEffectiveDate;
                theEffectiveDate = this.getEffectiveDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effectiveDate", theEffectiveDate), currentHashCode, theEffectiveDate);
            }
            {
                XMLGregorianCalendar theExpireDate;
                theExpireDate = this.getExpireDate();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expireDate", theExpireDate), currentHashCode, theExpireDate);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof VerificationType.CustLoyalty) {
                final VerificationType.CustLoyalty copy = ((VerificationType.CustLoyalty) draftCopy);
                if (this.programID!= null) {
                    String sourceProgramID;
                    sourceProgramID = this.getProgramID();
                    String copyProgramID = ((String) strategy.copy(LocatorUtils.property(locator, "programID", sourceProgramID), sourceProgramID));
                    copy.setProgramID(copyProgramID);
                } else {
                    copy.programID = null;
                }
                if (this.membershipID!= null) {
                    String sourceMembershipID;
                    sourceMembershipID = this.getMembershipID();
                    String copyMembershipID = ((String) strategy.copy(LocatorUtils.property(locator, "membershipID", sourceMembershipID), sourceMembershipID));
                    copy.setMembershipID(copyMembershipID);
                } else {
                    copy.membershipID = null;
                }
                if (this.travelSector!= null) {
                    String sourceTravelSector;
                    sourceTravelSector = this.getTravelSector();
                    String copyTravelSector = ((String) strategy.copy(LocatorUtils.property(locator, "travelSector", sourceTravelSector), sourceTravelSector));
                    copy.setTravelSector(copyTravelSector);
                } else {
                    copy.travelSector = null;
                }
                if (this.rph!= null) {
                    String sourceRPH;
                    sourceRPH = this.getRPH();
                    String copyRPH = ((String) strategy.copy(LocatorUtils.property(locator, "rph", sourceRPH), sourceRPH));
                    copy.setRPH(copyRPH);
                } else {
                    copy.rph = null;
                }
                if ((this.vendorCode!= null)&&(!this.vendorCode.isEmpty())) {
                    List<String> sourceVendorCode;
                    sourceVendorCode = (((this.vendorCode!= null)&&(!this.vendorCode.isEmpty()))?this.getVendorCode():null);
                    @SuppressWarnings("unchecked")
                    List<String> copyVendorCode = ((List<String> ) strategy.copy(LocatorUtils.property(locator, "vendorCode", sourceVendorCode), sourceVendorCode));
                    copy.vendorCode = null;
                    if (copyVendorCode!= null) {
                        List<String> uniqueVendorCodel = copy.getVendorCode();
                        uniqueVendorCodel.addAll(copyVendorCode);
                    }
                } else {
                    copy.vendorCode = null;
                }
                if (this.loyalLevel!= null) {
                    String sourceLoyalLevel;
                    sourceLoyalLevel = this.getLoyalLevel();
                    String copyLoyalLevel = ((String) strategy.copy(LocatorUtils.property(locator, "loyalLevel", sourceLoyalLevel), sourceLoyalLevel));
                    copy.setLoyalLevel(copyLoyalLevel);
                } else {
                    copy.loyalLevel = null;
                }
                if (this.singleVendorInd!= null) {
                    String sourceSingleVendorInd;
                    sourceSingleVendorInd = this.getSingleVendorInd();
                    String copySingleVendorInd = ((String) strategy.copy(LocatorUtils.property(locator, "singleVendorInd", sourceSingleVendorInd), sourceSingleVendorInd));
                    copy.setSingleVendorInd(copySingleVendorInd);
                } else {
                    copy.singleVendorInd = null;
                }
                if (this.signupDate!= null) {
                    XMLGregorianCalendar sourceSignupDate;
                    sourceSignupDate = this.getSignupDate();
                    XMLGregorianCalendar copySignupDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "signupDate", sourceSignupDate), sourceSignupDate));
                    copy.setSignupDate(copySignupDate);
                } else {
                    copy.signupDate = null;
                }
                if (this.shareSynchInd!= null) {
                    String sourceShareSynchInd;
                    sourceShareSynchInd = this.getShareSynchInd();
                    String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                    copy.setShareSynchInd(copyShareSynchInd);
                } else {
                    copy.shareSynchInd = null;
                }
                if (this.shareMarketInd!= null) {
                    String sourceShareMarketInd;
                    sourceShareMarketInd = this.getShareMarketInd();
                    String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                    copy.setShareMarketInd(copyShareMarketInd);
                } else {
                    copy.shareMarketInd = null;
                }
                if (this.effectiveDate!= null) {
                    XMLGregorianCalendar sourceEffectiveDate;
                    sourceEffectiveDate = this.getEffectiveDate();
                    XMLGregorianCalendar copyEffectiveDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "effectiveDate", sourceEffectiveDate), sourceEffectiveDate));
                    copy.setEffectiveDate(copyEffectiveDate);
                } else {
                    copy.effectiveDate = null;
                }
                if (this.expireDate!= null) {
                    XMLGregorianCalendar sourceExpireDate;
                    sourceExpireDate = this.getExpireDate();
                    XMLGregorianCalendar copyExpireDate = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "expireDate", sourceExpireDate), sourceExpireDate));
                    copy.setExpireDate(copyExpireDate);
                } else {
                    copy.expireDate = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.CustLoyalty();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;LocationType"&gt;
     *       &lt;attribute name="AssociatedDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class EndLocation
        extends LocationType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "AssociatedDateTime")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar associatedDateTime;

        /**
         * Gets the value of the associatedDateTime property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getAssociatedDateTime() {
            return associatedDateTime;
        }

        /**
         * Sets the value of the associatedDateTime property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setAssociatedDateTime(XMLGregorianCalendar value) {
            this.associatedDateTime = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                XMLGregorianCalendar theAssociatedDateTime;
                theAssociatedDateTime = this.getAssociatedDateTime();
                strategy.appendField(locator, this, "associatedDateTime", buffer, theAssociatedDateTime);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.EndLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final VerificationType.EndLocation that = ((VerificationType.EndLocation) object);
            {
                XMLGregorianCalendar lhsAssociatedDateTime;
                lhsAssociatedDateTime = this.getAssociatedDateTime();
                XMLGregorianCalendar rhsAssociatedDateTime;
                rhsAssociatedDateTime = that.getAssociatedDateTime();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedDateTime", lhsAssociatedDateTime), LocatorUtils.property(thatLocator, "associatedDateTime", rhsAssociatedDateTime), lhsAssociatedDateTime, rhsAssociatedDateTime)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                XMLGregorianCalendar theAssociatedDateTime;
                theAssociatedDateTime = this.getAssociatedDateTime();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedDateTime", theAssociatedDateTime), currentHashCode, theAssociatedDateTime);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof VerificationType.EndLocation) {
                final VerificationType.EndLocation copy = ((VerificationType.EndLocation) draftCopy);
                if (this.associatedDateTime!= null) {
                    XMLGregorianCalendar sourceAssociatedDateTime;
                    sourceAssociatedDateTime = this.getAssociatedDateTime();
                    XMLGregorianCalendar copyAssociatedDateTime = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "associatedDateTime", sourceAssociatedDateTime), sourceAssociatedDateTime));
                    copy.setAssociatedDateTime(copyAssociatedDateTime);
                } else {
                    copy.associatedDateTime = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.EndLocation();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;extension base="{http://www.opentravel.org/OTA/2003/05}PersonNameType"&gt;
     *       &lt;attribute name="PartialName" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PersonName
        extends PersonNameType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "PartialName")
        protected Boolean partialName;

        /**
         * Gets the value of the partialName property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public Boolean isPartialName() {
            return partialName;
        }

        /**
         * Sets the value of the partialName property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setPartialName(Boolean value) {
            this.partialName = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                Boolean thePartialName;
                thePartialName = this.isPartialName();
                strategy.appendField(locator, this, "partialName", buffer, thePartialName);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.PersonName)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final VerificationType.PersonName that = ((VerificationType.PersonName) object);
            {
                Boolean lhsPartialName;
                lhsPartialName = this.isPartialName();
                Boolean rhsPartialName;
                rhsPartialName = that.isPartialName();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "partialName", lhsPartialName), LocatorUtils.property(thatLocator, "partialName", rhsPartialName), lhsPartialName, rhsPartialName)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                Boolean thePartialName;
                thePartialName = this.isPartialName();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "partialName", thePartialName), currentHashCode, thePartialName);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof VerificationType.PersonName) {
                final VerificationType.PersonName copy = ((VerificationType.PersonName) draftCopy);
                if (this.partialName!= null) {
                    Boolean sourcePartialName;
                    sourcePartialName = this.isPartialName();
                    Boolean copyPartialName = ((Boolean) strategy.copy(LocatorUtils.property(locator, "partialName", sourcePartialName), sourcePartialName));
                    copy.setPartialName(copyPartialName);
                } else {
                    copy.partialName = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.PersonName();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}DateTimeSpanGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class ReservationTimeSpan
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "Start")
        protected String start;
        @XmlAttribute(name = "Duration")
        protected String duration;
        @XmlAttribute(name = "End")
        protected String end;

        /**
         * Gets the value of the start property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getStart() {
            return start;
        }

        /**
         * Sets the value of the start property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setStart(String value) {
            this.start = value;
        }

        /**
         * Gets the value of the duration property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getDuration() {
            return duration;
        }

        /**
         * Sets the value of the duration property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setDuration(String value) {
            this.duration = value;
        }

        /**
         * Gets the value of the end property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getEnd() {
            return end;
        }

        /**
         * Sets the value of the end property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEnd(String value) {
            this.end = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theStart;
                theStart = this.getStart();
                strategy.appendField(locator, this, "start", buffer, theStart);
            }
            {
                String theDuration;
                theDuration = this.getDuration();
                strategy.appendField(locator, this, "duration", buffer, theDuration);
            }
            {
                String theEnd;
                theEnd = this.getEnd();
                strategy.appendField(locator, this, "end", buffer, theEnd);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.ReservationTimeSpan)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VerificationType.ReservationTimeSpan that = ((VerificationType.ReservationTimeSpan) object);
            {
                String lhsStart;
                lhsStart = this.getStart();
                String rhsStart;
                rhsStart = that.getStart();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "start", lhsStart), LocatorUtils.property(thatLocator, "start", rhsStart), lhsStart, rhsStart)) {
                    return false;
                }
            }
            {
                String lhsDuration;
                lhsDuration = this.getDuration();
                String rhsDuration;
                rhsDuration = that.getDuration();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                    return false;
                }
            }
            {
                String lhsEnd;
                lhsEnd = this.getEnd();
                String rhsEnd;
                rhsEnd = that.getEnd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "end", lhsEnd), LocatorUtils.property(thatLocator, "end", rhsEnd), lhsEnd, rhsEnd)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theStart;
                theStart = this.getStart();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "start", theStart), currentHashCode, theStart);
            }
            {
                String theDuration;
                theDuration = this.getDuration();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
            }
            {
                String theEnd;
                theEnd = this.getEnd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "end", theEnd), currentHashCode, theEnd);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof VerificationType.ReservationTimeSpan) {
                final VerificationType.ReservationTimeSpan copy = ((VerificationType.ReservationTimeSpan) draftCopy);
                if (this.start!= null) {
                    String sourceStart;
                    sourceStart = this.getStart();
                    String copyStart = ((String) strategy.copy(LocatorUtils.property(locator, "start", sourceStart), sourceStart));
                    copy.setStart(copyStart);
                } else {
                    copy.start = null;
                }
                if (this.duration!= null) {
                    String sourceDuration;
                    sourceDuration = this.getDuration();
                    String copyDuration = ((String) strategy.copy(LocatorUtils.property(locator, "duration", sourceDuration), sourceDuration));
                    copy.setDuration(copyDuration);
                } else {
                    copy.duration = null;
                }
                if (this.end!= null) {
                    String sourceEnd;
                    sourceEnd = this.getEnd();
                    String copyEnd = ((String) strategy.copy(LocatorUtils.property(locator, "end", sourceEnd), sourceEnd));
                    copy.setEnd(copyEnd);
                } else {
                    copy.end = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.ReservationTimeSpan();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;simpleContent&gt;
     *     &lt;extension base="&lt;http://www.opentravel.org/OTA/2003/05&gt;LocationType"&gt;
     *       &lt;attribute name="AssociatedDateTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" /&gt;
     *     &lt;/extension&gt;
     *   &lt;/simpleContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class StartLocation
        extends LocationType
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "AssociatedDateTime")
        @XmlSchemaType(name = "dateTime")
        protected XMLGregorianCalendar associatedDateTime;

        /**
         * Gets the value of the associatedDateTime property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getAssociatedDateTime() {
            return associatedDateTime;
        }

        /**
         * Sets the value of the associatedDateTime property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setAssociatedDateTime(XMLGregorianCalendar value) {
            this.associatedDateTime = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            super.appendFields(locator, buffer, strategy);
            {
                XMLGregorianCalendar theAssociatedDateTime;
                theAssociatedDateTime = this.getAssociatedDateTime();
                strategy.appendField(locator, this, "associatedDateTime", buffer, theAssociatedDateTime);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.StartLocation)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                return false;
            }
            final VerificationType.StartLocation that = ((VerificationType.StartLocation) object);
            {
                XMLGregorianCalendar lhsAssociatedDateTime;
                lhsAssociatedDateTime = this.getAssociatedDateTime();
                XMLGregorianCalendar rhsAssociatedDateTime;
                rhsAssociatedDateTime = that.getAssociatedDateTime();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "associatedDateTime", lhsAssociatedDateTime), LocatorUtils.property(thatLocator, "associatedDateTime", rhsAssociatedDateTime), lhsAssociatedDateTime, rhsAssociatedDateTime)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = super.hashCode(locator, strategy);
            {
                XMLGregorianCalendar theAssociatedDateTime;
                theAssociatedDateTime = this.getAssociatedDateTime();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "associatedDateTime", theAssociatedDateTime), currentHashCode, theAssociatedDateTime);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            super.copyTo(locator, draftCopy, strategy);
            if (draftCopy instanceof VerificationType.StartLocation) {
                final VerificationType.StartLocation copy = ((VerificationType.StartLocation) draftCopy);
                if (this.associatedDateTime!= null) {
                    XMLGregorianCalendar sourceAssociatedDateTime;
                    sourceAssociatedDateTime = this.getAssociatedDateTime();
                    XMLGregorianCalendar copyAssociatedDateTime = ((XMLGregorianCalendar) strategy.copy(LocatorUtils.property(locator, "associatedDateTime", sourceAssociatedDateTime), sourceAssociatedDateTime));
                    copy.setAssociatedDateTime(copyAssociatedDateTime);
                } else {
                    copy.associatedDateTime = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.StartLocation();
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TelephoneInfoGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class TelephoneInfo
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "RPH")
        protected String rph;
        @XmlAttribute(name = "ShareSynchInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareSynchInd;
        @XmlAttribute(name = "ShareMarketInd")
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String shareMarketInd;
        @XmlAttribute(name = "PhoneLocationType")
        protected String phoneLocationType;
        @XmlAttribute(name = "PhoneTechType")
        protected String phoneTechType;
        @XmlAttribute(name = "PhoneUseType")
        protected String phoneUseType;
        @XmlAttribute(name = "CountryAccessCode")
        protected String countryAccessCode;
        @XmlAttribute(name = "AreaCityCode")
        protected String areaCityCode;
        @XmlAttribute(name = "PhoneNumber", required = true)
        protected String phoneNumber;
        @XmlAttribute(name = "Extension")
        protected String extension;
        @XmlAttribute(name = "PIN")
        protected String pin;
        @XmlAttribute(name = "Remark")
        protected String remark;
        @XmlAttribute(name = "FormattedInd")
        protected Boolean formattedInd;
        @XmlAttribute(name = "DefaultInd")
        protected Boolean defaultInd;

        /**
         * Gets the value of the rph property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRPH() {
            return rph;
        }

        /**
         * Sets the value of the rph property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRPH(String value) {
            this.rph = value;
        }

        /**
         * Gets the value of the shareSynchInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareSynchInd() {
            return shareSynchInd;
        }

        /**
         * Sets the value of the shareSynchInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareSynchInd(String value) {
            this.shareSynchInd = value;
        }

        /**
         * Gets the value of the shareMarketInd property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getShareMarketInd() {
            return shareMarketInd;
        }

        /**
         * Sets the value of the shareMarketInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setShareMarketInd(String value) {
            this.shareMarketInd = value;
        }

        /**
         * Gets the value of the phoneLocationType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneLocationType() {
            return phoneLocationType;
        }

        /**
         * Sets the value of the phoneLocationType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneLocationType(String value) {
            this.phoneLocationType = value;
        }

        /**
         * Gets the value of the phoneTechType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneTechType() {
            return phoneTechType;
        }

        /**
         * Sets the value of the phoneTechType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneTechType(String value) {
            this.phoneTechType = value;
        }

        /**
         * Gets the value of the phoneUseType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneUseType() {
            return phoneUseType;
        }

        /**
         * Sets the value of the phoneUseType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneUseType(String value) {
            this.phoneUseType = value;
        }

        /**
         * Gets the value of the countryAccessCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCountryAccessCode() {
            return countryAccessCode;
        }

        /**
         * Sets the value of the countryAccessCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCountryAccessCode(String value) {
            this.countryAccessCode = value;
        }

        /**
         * Gets the value of the areaCityCode property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getAreaCityCode() {
            return areaCityCode;
        }

        /**
         * Sets the value of the areaCityCode property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setAreaCityCode(String value) {
            this.areaCityCode = value;
        }

        /**
         * Gets the value of the phoneNumber property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPhoneNumber() {
            return phoneNumber;
        }

        /**
         * Sets the value of the phoneNumber property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPhoneNumber(String value) {
            this.phoneNumber = value;
        }

        /**
         * Gets the value of the extension property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getExtension() {
            return extension;
        }

        /**
         * Sets the value of the extension property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setExtension(String value) {
            this.extension = value;
        }

        /**
         * Gets the value of the pin property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPIN() {
            return pin;
        }

        /**
         * Sets the value of the pin property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPIN(String value) {
            this.pin = value;
        }

        /**
         * Gets the value of the remark property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRemark() {
            return remark;
        }

        /**
         * Sets the value of the remark property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRemark(String value) {
            this.remark = value;
        }

        /**
         * Gets the value of the formattedInd property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isFormattedInd() {
            if (formattedInd == null) {
                return false;
            } else {
                return formattedInd;
            }
        }

        /**
         * Sets the value of the formattedInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setFormattedInd(Boolean value) {
            this.formattedInd = value;
        }

        /**
         * Gets the value of the defaultInd property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isDefaultInd() {
            if (defaultInd == null) {
                return false;
            } else {
                return defaultInd;
            }
        }

        /**
         * Sets the value of the defaultInd property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setDefaultInd(Boolean value) {
            this.defaultInd = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theRPH;
                theRPH = this.getRPH();
                strategy.appendField(locator, this, "rph", buffer, theRPH);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
            }
            {
                String thePhoneLocationType;
                thePhoneLocationType = this.getPhoneLocationType();
                strategy.appendField(locator, this, "phoneLocationType", buffer, thePhoneLocationType);
            }
            {
                String thePhoneTechType;
                thePhoneTechType = this.getPhoneTechType();
                strategy.appendField(locator, this, "phoneTechType", buffer, thePhoneTechType);
            }
            {
                String thePhoneUseType;
                thePhoneUseType = this.getPhoneUseType();
                strategy.appendField(locator, this, "phoneUseType", buffer, thePhoneUseType);
            }
            {
                String theCountryAccessCode;
                theCountryAccessCode = this.getCountryAccessCode();
                strategy.appendField(locator, this, "countryAccessCode", buffer, theCountryAccessCode);
            }
            {
                String theAreaCityCode;
                theAreaCityCode = this.getAreaCityCode();
                strategy.appendField(locator, this, "areaCityCode", buffer, theAreaCityCode);
            }
            {
                String thePhoneNumber;
                thePhoneNumber = this.getPhoneNumber();
                strategy.appendField(locator, this, "phoneNumber", buffer, thePhoneNumber);
            }
            {
                String theExtension;
                theExtension = this.getExtension();
                strategy.appendField(locator, this, "extension", buffer, theExtension);
            }
            {
                String thePIN;
                thePIN = this.getPIN();
                strategy.appendField(locator, this, "pin", buffer, thePIN);
            }
            {
                String theRemark;
                theRemark = this.getRemark();
                strategy.appendField(locator, this, "remark", buffer, theRemark);
            }
            {
                boolean theFormattedInd;
                theFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                strategy.appendField(locator, this, "formattedInd", buffer, theFormattedInd);
            }
            {
                boolean theDefaultInd;
                theDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                strategy.appendField(locator, this, "defaultInd", buffer, theDefaultInd);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof VerificationType.TelephoneInfo)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final VerificationType.TelephoneInfo that = ((VerificationType.TelephoneInfo) object);
            {
                String lhsRPH;
                lhsRPH = this.getRPH();
                String rhsRPH;
                rhsRPH = that.getRPH();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rph", lhsRPH), LocatorUtils.property(thatLocator, "rph", rhsRPH), lhsRPH, rhsRPH)) {
                    return false;
                }
            }
            {
                String lhsShareSynchInd;
                lhsShareSynchInd = this.getShareSynchInd();
                String rhsShareSynchInd;
                rhsShareSynchInd = that.getShareSynchInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                    return false;
                }
            }
            {
                String lhsShareMarketInd;
                lhsShareMarketInd = this.getShareMarketInd();
                String rhsShareMarketInd;
                rhsShareMarketInd = that.getShareMarketInd();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                    return false;
                }
            }
            {
                String lhsPhoneLocationType;
                lhsPhoneLocationType = this.getPhoneLocationType();
                String rhsPhoneLocationType;
                rhsPhoneLocationType = that.getPhoneLocationType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneLocationType", lhsPhoneLocationType), LocatorUtils.property(thatLocator, "phoneLocationType", rhsPhoneLocationType), lhsPhoneLocationType, rhsPhoneLocationType)) {
                    return false;
                }
            }
            {
                String lhsPhoneTechType;
                lhsPhoneTechType = this.getPhoneTechType();
                String rhsPhoneTechType;
                rhsPhoneTechType = that.getPhoneTechType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneTechType", lhsPhoneTechType), LocatorUtils.property(thatLocator, "phoneTechType", rhsPhoneTechType), lhsPhoneTechType, rhsPhoneTechType)) {
                    return false;
                }
            }
            {
                String lhsPhoneUseType;
                lhsPhoneUseType = this.getPhoneUseType();
                String rhsPhoneUseType;
                rhsPhoneUseType = that.getPhoneUseType();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneUseType", lhsPhoneUseType), LocatorUtils.property(thatLocator, "phoneUseType", rhsPhoneUseType), lhsPhoneUseType, rhsPhoneUseType)) {
                    return false;
                }
            }
            {
                String lhsCountryAccessCode;
                lhsCountryAccessCode = this.getCountryAccessCode();
                String rhsCountryAccessCode;
                rhsCountryAccessCode = that.getCountryAccessCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "countryAccessCode", lhsCountryAccessCode), LocatorUtils.property(thatLocator, "countryAccessCode", rhsCountryAccessCode), lhsCountryAccessCode, rhsCountryAccessCode)) {
                    return false;
                }
            }
            {
                String lhsAreaCityCode;
                lhsAreaCityCode = this.getAreaCityCode();
                String rhsAreaCityCode;
                rhsAreaCityCode = that.getAreaCityCode();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "areaCityCode", lhsAreaCityCode), LocatorUtils.property(thatLocator, "areaCityCode", rhsAreaCityCode), lhsAreaCityCode, rhsAreaCityCode)) {
                    return false;
                }
            }
            {
                String lhsPhoneNumber;
                lhsPhoneNumber = this.getPhoneNumber();
                String rhsPhoneNumber;
                rhsPhoneNumber = that.getPhoneNumber();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phoneNumber", lhsPhoneNumber), LocatorUtils.property(thatLocator, "phoneNumber", rhsPhoneNumber), lhsPhoneNumber, rhsPhoneNumber)) {
                    return false;
                }
            }
            {
                String lhsExtension;
                lhsExtension = this.getExtension();
                String rhsExtension;
                rhsExtension = that.getExtension();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "extension", lhsExtension), LocatorUtils.property(thatLocator, "extension", rhsExtension), lhsExtension, rhsExtension)) {
                    return false;
                }
            }
            {
                String lhsPIN;
                lhsPIN = this.getPIN();
                String rhsPIN;
                rhsPIN = that.getPIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "pin", lhsPIN), LocatorUtils.property(thatLocator, "pin", rhsPIN), lhsPIN, rhsPIN)) {
                    return false;
                }
            }
            {
                String lhsRemark;
                lhsRemark = this.getRemark();
                String rhsRemark;
                rhsRemark = that.getRemark();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "remark", lhsRemark), LocatorUtils.property(thatLocator, "remark", rhsRemark), lhsRemark, rhsRemark)) {
                    return false;
                }
            }
            {
                boolean lhsFormattedInd;
                lhsFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                boolean rhsFormattedInd;
                rhsFormattedInd = ((that.formattedInd!= null)?that.isFormattedInd():false);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "formattedInd", lhsFormattedInd), LocatorUtils.property(thatLocator, "formattedInd", rhsFormattedInd), lhsFormattedInd, rhsFormattedInd)) {
                    return false;
                }
            }
            {
                boolean lhsDefaultInd;
                lhsDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                boolean rhsDefaultInd;
                rhsDefaultInd = ((that.defaultInd!= null)?that.isDefaultInd():false);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "defaultInd", lhsDefaultInd), LocatorUtils.property(thatLocator, "defaultInd", rhsDefaultInd), lhsDefaultInd, rhsDefaultInd)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theRPH;
                theRPH = this.getRPH();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rph", theRPH), currentHashCode, theRPH);
            }
            {
                String theShareSynchInd;
                theShareSynchInd = this.getShareSynchInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
            }
            {
                String theShareMarketInd;
                theShareMarketInd = this.getShareMarketInd();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
            }
            {
                String thePhoneLocationType;
                thePhoneLocationType = this.getPhoneLocationType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneLocationType", thePhoneLocationType), currentHashCode, thePhoneLocationType);
            }
            {
                String thePhoneTechType;
                thePhoneTechType = this.getPhoneTechType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneTechType", thePhoneTechType), currentHashCode, thePhoneTechType);
            }
            {
                String thePhoneUseType;
                thePhoneUseType = this.getPhoneUseType();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneUseType", thePhoneUseType), currentHashCode, thePhoneUseType);
            }
            {
                String theCountryAccessCode;
                theCountryAccessCode = this.getCountryAccessCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "countryAccessCode", theCountryAccessCode), currentHashCode, theCountryAccessCode);
            }
            {
                String theAreaCityCode;
                theAreaCityCode = this.getAreaCityCode();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "areaCityCode", theAreaCityCode), currentHashCode, theAreaCityCode);
            }
            {
                String thePhoneNumber;
                thePhoneNumber = this.getPhoneNumber();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phoneNumber", thePhoneNumber), currentHashCode, thePhoneNumber);
            }
            {
                String theExtension;
                theExtension = this.getExtension();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extension", theExtension), currentHashCode, theExtension);
            }
            {
                String thePIN;
                thePIN = this.getPIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pin", thePIN), currentHashCode, thePIN);
            }
            {
                String theRemark;
                theRemark = this.getRemark();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "remark", theRemark), currentHashCode, theRemark);
            }
            {
                boolean theFormattedInd;
                theFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "formattedInd", theFormattedInd), currentHashCode, theFormattedInd);
            }
            {
                boolean theDefaultInd;
                theDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "defaultInd", theDefaultInd), currentHashCode, theDefaultInd);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof VerificationType.TelephoneInfo) {
                final VerificationType.TelephoneInfo copy = ((VerificationType.TelephoneInfo) draftCopy);
                if (this.rph!= null) {
                    String sourceRPH;
                    sourceRPH = this.getRPH();
                    String copyRPH = ((String) strategy.copy(LocatorUtils.property(locator, "rph", sourceRPH), sourceRPH));
                    copy.setRPH(copyRPH);
                } else {
                    copy.rph = null;
                }
                if (this.shareSynchInd!= null) {
                    String sourceShareSynchInd;
                    sourceShareSynchInd = this.getShareSynchInd();
                    String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                    copy.setShareSynchInd(copyShareSynchInd);
                } else {
                    copy.shareSynchInd = null;
                }
                if (this.shareMarketInd!= null) {
                    String sourceShareMarketInd;
                    sourceShareMarketInd = this.getShareMarketInd();
                    String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                    copy.setShareMarketInd(copyShareMarketInd);
                } else {
                    copy.shareMarketInd = null;
                }
                if (this.phoneLocationType!= null) {
                    String sourcePhoneLocationType;
                    sourcePhoneLocationType = this.getPhoneLocationType();
                    String copyPhoneLocationType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneLocationType", sourcePhoneLocationType), sourcePhoneLocationType));
                    copy.setPhoneLocationType(copyPhoneLocationType);
                } else {
                    copy.phoneLocationType = null;
                }
                if (this.phoneTechType!= null) {
                    String sourcePhoneTechType;
                    sourcePhoneTechType = this.getPhoneTechType();
                    String copyPhoneTechType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneTechType", sourcePhoneTechType), sourcePhoneTechType));
                    copy.setPhoneTechType(copyPhoneTechType);
                } else {
                    copy.phoneTechType = null;
                }
                if (this.phoneUseType!= null) {
                    String sourcePhoneUseType;
                    sourcePhoneUseType = this.getPhoneUseType();
                    String copyPhoneUseType = ((String) strategy.copy(LocatorUtils.property(locator, "phoneUseType", sourcePhoneUseType), sourcePhoneUseType));
                    copy.setPhoneUseType(copyPhoneUseType);
                } else {
                    copy.phoneUseType = null;
                }
                if (this.countryAccessCode!= null) {
                    String sourceCountryAccessCode;
                    sourceCountryAccessCode = this.getCountryAccessCode();
                    String copyCountryAccessCode = ((String) strategy.copy(LocatorUtils.property(locator, "countryAccessCode", sourceCountryAccessCode), sourceCountryAccessCode));
                    copy.setCountryAccessCode(copyCountryAccessCode);
                } else {
                    copy.countryAccessCode = null;
                }
                if (this.areaCityCode!= null) {
                    String sourceAreaCityCode;
                    sourceAreaCityCode = this.getAreaCityCode();
                    String copyAreaCityCode = ((String) strategy.copy(LocatorUtils.property(locator, "areaCityCode", sourceAreaCityCode), sourceAreaCityCode));
                    copy.setAreaCityCode(copyAreaCityCode);
                } else {
                    copy.areaCityCode = null;
                }
                if (this.phoneNumber!= null) {
                    String sourcePhoneNumber;
                    sourcePhoneNumber = this.getPhoneNumber();
                    String copyPhoneNumber = ((String) strategy.copy(LocatorUtils.property(locator, "phoneNumber", sourcePhoneNumber), sourcePhoneNumber));
                    copy.setPhoneNumber(copyPhoneNumber);
                } else {
                    copy.phoneNumber = null;
                }
                if (this.extension!= null) {
                    String sourceExtension;
                    sourceExtension = this.getExtension();
                    String copyExtension = ((String) strategy.copy(LocatorUtils.property(locator, "extension", sourceExtension), sourceExtension));
                    copy.setExtension(copyExtension);
                } else {
                    copy.extension = null;
                }
                if (this.pin!= null) {
                    String sourcePIN;
                    sourcePIN = this.getPIN();
                    String copyPIN = ((String) strategy.copy(LocatorUtils.property(locator, "pin", sourcePIN), sourcePIN));
                    copy.setPIN(copyPIN);
                } else {
                    copy.pin = null;
                }
                if (this.remark!= null) {
                    String sourceRemark;
                    sourceRemark = this.getRemark();
                    String copyRemark = ((String) strategy.copy(LocatorUtils.property(locator, "remark", sourceRemark), sourceRemark));
                    copy.setRemark(copyRemark);
                } else {
                    copy.remark = null;
                }
                if (this.formattedInd!= null) {
                    boolean sourceFormattedInd;
                    sourceFormattedInd = ((this.formattedInd!= null)?this.isFormattedInd():false);
                    boolean copyFormattedInd = strategy.copy(LocatorUtils.property(locator, "formattedInd", sourceFormattedInd), sourceFormattedInd);
                    copy.setFormattedInd(copyFormattedInd);
                } else {
                    copy.formattedInd = null;
                }
                if (this.defaultInd!= null) {
                    boolean sourceDefaultInd;
                    sourceDefaultInd = ((this.defaultInd!= null)?this.isDefaultInd():false);
                    boolean copyDefaultInd = strategy.copy(LocatorUtils.property(locator, "defaultInd", sourceDefaultInd), sourceDefaultInd);
                    copy.setDefaultInd(copyDefaultInd);
                } else {
                    copy.defaultInd = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new VerificationType.TelephoneInfo();
        }

    }

}
