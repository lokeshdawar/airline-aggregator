//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Other Service Information (OSI) for relevant airlines 
 * 
 * <p>Java class for OtherServiceInfoType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OtherServiceInfoType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="TravelerRefNumber" maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TravelerRefNumberGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Airline" type="{http://www.opentravel.org/OTA/2003/05}CompanyNameType"/&gt;
 *         &lt;element name="Text" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OtherServiceInfoType", propOrder = {
    "travelerRefNumber",
    "airline",
    "text"
})
@XmlSeeAlso({
    org.lucksoft.airlineaggregator.domain.SpecialReqDetailsType.OtherServiceInformations.OtherServiceInformation.class
})
public class OtherServiceInfoType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "TravelerRefNumber")
    protected List<OtherServiceInfoType.TravelerRefNumber> travelerRefNumber;
    @XmlElement(name = "Airline", required = true)
    protected CompanyNameType airline;
    @XmlElement(name = "Text", required = true)
    protected String text;

    /**
     * Gets the value of the travelerRefNumber property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the travelerRefNumber property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTravelerRefNumber().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherServiceInfoType.TravelerRefNumber }
     * 
     * 
     */
    public List<OtherServiceInfoType.TravelerRefNumber> getTravelerRefNumber() {
        if (travelerRefNumber == null) {
            travelerRefNumber = new ArrayList<OtherServiceInfoType.TravelerRefNumber>();
        }
        return this.travelerRefNumber;
    }

    /**
     * Gets the value of the airline property.
     * 
     * @return
     *     possible object is
     *     {@link CompanyNameType }
     *     
     */
    public CompanyNameType getAirline() {
        return airline;
    }

    /**
     * Sets the value of the airline property.
     * 
     * @param value
     *     allowed object is
     *     {@link CompanyNameType }
     *     
     */
    public void setAirline(CompanyNameType value) {
        this.airline = value;
    }

    /**
     * Gets the value of the text property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getText() {
        return text;
    }

    /**
     * Sets the value of the text property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setText(String value) {
        this.text = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<OtherServiceInfoType.TravelerRefNumber> theTravelerRefNumber;
            theTravelerRefNumber = (((this.travelerRefNumber!= null)&&(!this.travelerRefNumber.isEmpty()))?this.getTravelerRefNumber():null);
            strategy.appendField(locator, this, "travelerRefNumber", buffer, theTravelerRefNumber);
        }
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            strategy.appendField(locator, this, "airline", buffer, theAirline);
        }
        {
            String theText;
            theText = this.getText();
            strategy.appendField(locator, this, "text", buffer, theText);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OtherServiceInfoType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OtherServiceInfoType that = ((OtherServiceInfoType) object);
        {
            List<OtherServiceInfoType.TravelerRefNumber> lhsTravelerRefNumber;
            lhsTravelerRefNumber = (((this.travelerRefNumber!= null)&&(!this.travelerRefNumber.isEmpty()))?this.getTravelerRefNumber():null);
            List<OtherServiceInfoType.TravelerRefNumber> rhsTravelerRefNumber;
            rhsTravelerRefNumber = (((that.travelerRefNumber!= null)&&(!that.travelerRefNumber.isEmpty()))?that.getTravelerRefNumber():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "travelerRefNumber", lhsTravelerRefNumber), LocatorUtils.property(thatLocator, "travelerRefNumber", rhsTravelerRefNumber), lhsTravelerRefNumber, rhsTravelerRefNumber)) {
                return false;
            }
        }
        {
            CompanyNameType lhsAirline;
            lhsAirline = this.getAirline();
            CompanyNameType rhsAirline;
            rhsAirline = that.getAirline();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "airline", lhsAirline), LocatorUtils.property(thatLocator, "airline", rhsAirline), lhsAirline, rhsAirline)) {
                return false;
            }
        }
        {
            String lhsText;
            lhsText = this.getText();
            String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<OtherServiceInfoType.TravelerRefNumber> theTravelerRefNumber;
            theTravelerRefNumber = (((this.travelerRefNumber!= null)&&(!this.travelerRefNumber.isEmpty()))?this.getTravelerRefNumber():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "travelerRefNumber", theTravelerRefNumber), currentHashCode, theTravelerRefNumber);
        }
        {
            CompanyNameType theAirline;
            theAirline = this.getAirline();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "airline", theAirline), currentHashCode, theAirline);
        }
        {
            String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof OtherServiceInfoType) {
            final OtherServiceInfoType copy = ((OtherServiceInfoType) draftCopy);
            if ((this.travelerRefNumber!= null)&&(!this.travelerRefNumber.isEmpty())) {
                List<OtherServiceInfoType.TravelerRefNumber> sourceTravelerRefNumber;
                sourceTravelerRefNumber = (((this.travelerRefNumber!= null)&&(!this.travelerRefNumber.isEmpty()))?this.getTravelerRefNumber():null);
                @SuppressWarnings("unchecked")
                List<OtherServiceInfoType.TravelerRefNumber> copyTravelerRefNumber = ((List<OtherServiceInfoType.TravelerRefNumber> ) strategy.copy(LocatorUtils.property(locator, "travelerRefNumber", sourceTravelerRefNumber), sourceTravelerRefNumber));
                copy.travelerRefNumber = null;
                if (copyTravelerRefNumber!= null) {
                    List<OtherServiceInfoType.TravelerRefNumber> uniqueTravelerRefNumberl = copy.getTravelerRefNumber();
                    uniqueTravelerRefNumberl.addAll(copyTravelerRefNumber);
                }
            } else {
                copy.travelerRefNumber = null;
            }
            if (this.airline!= null) {
                CompanyNameType sourceAirline;
                sourceAirline = this.getAirline();
                CompanyNameType copyAirline = ((CompanyNameType) strategy.copy(LocatorUtils.property(locator, "airline", sourceAirline), sourceAirline));
                copy.setAirline(copyAirline);
            } else {
                copy.airline = null;
            }
            if (this.text!= null) {
                String sourceText;
                sourceText = this.getText();
                String copyText = ((String) strategy.copy(LocatorUtils.property(locator, "text", sourceText), sourceText));
                copy.setText(copyText);
            } else {
                copy.text = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new OtherServiceInfoType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}TravelerRefNumberGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class TravelerRefNumber
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "RPH")
        protected String rph;
        @XmlAttribute(name = "SurnameRefNumber")
        protected String surnameRefNumber;

        /**
         * Gets the value of the rph property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getRPH() {
            return rph;
        }

        /**
         * Sets the value of the rph property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setRPH(String value) {
            this.rph = value;
        }

        /**
         * Gets the value of the surnameRefNumber property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSurnameRefNumber() {
            return surnameRefNumber;
        }

        /**
         * Sets the value of the surnameRefNumber property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSurnameRefNumber(String value) {
            this.surnameRefNumber = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theRPH;
                theRPH = this.getRPH();
                strategy.appendField(locator, this, "rph", buffer, theRPH);
            }
            {
                String theSurnameRefNumber;
                theSurnameRefNumber = this.getSurnameRefNumber();
                strategy.appendField(locator, this, "surnameRefNumber", buffer, theSurnameRefNumber);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof OtherServiceInfoType.TravelerRefNumber)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final OtherServiceInfoType.TravelerRefNumber that = ((OtherServiceInfoType.TravelerRefNumber) object);
            {
                String lhsRPH;
                lhsRPH = this.getRPH();
                String rhsRPH;
                rhsRPH = that.getRPH();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "rph", lhsRPH), LocatorUtils.property(thatLocator, "rph", rhsRPH), lhsRPH, rhsRPH)) {
                    return false;
                }
            }
            {
                String lhsSurnameRefNumber;
                lhsSurnameRefNumber = this.getSurnameRefNumber();
                String rhsSurnameRefNumber;
                rhsSurnameRefNumber = that.getSurnameRefNumber();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "surnameRefNumber", lhsSurnameRefNumber), LocatorUtils.property(thatLocator, "surnameRefNumber", rhsSurnameRefNumber), lhsSurnameRefNumber, rhsSurnameRefNumber)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theRPH;
                theRPH = this.getRPH();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rph", theRPH), currentHashCode, theRPH);
            }
            {
                String theSurnameRefNumber;
                theSurnameRefNumber = this.getSurnameRefNumber();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "surnameRefNumber", theSurnameRefNumber), currentHashCode, theSurnameRefNumber);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof OtherServiceInfoType.TravelerRefNumber) {
                final OtherServiceInfoType.TravelerRefNumber copy = ((OtherServiceInfoType.TravelerRefNumber) draftCopy);
                if (this.rph!= null) {
                    String sourceRPH;
                    sourceRPH = this.getRPH();
                    String copyRPH = ((String) strategy.copy(LocatorUtils.property(locator, "rph", sourceRPH), sourceRPH));
                    copy.setRPH(copyRPH);
                } else {
                    copy.rph = null;
                }
                if (this.surnameRefNumber!= null) {
                    String sourceSurnameRefNumber;
                    sourceSurnameRefNumber = this.getSurnameRefNumber();
                    String copySurnameRefNumber = ((String) strategy.copy(LocatorUtils.property(locator, "surnameRefNumber", sourceSurnameRefNumber), sourceSurnameRefNumber));
                    copy.setSurnameRefNumber(copySurnameRefNumber);
                } else {
                    copy.surnameRefNumber = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new OtherServiceInfoType.TravelerRefNumber();
        }

    }

}
