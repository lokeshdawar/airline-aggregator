//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Other travel service preferences.
 * 
 * <p>Java class for OtherSrvcPrefType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OtherSrvcPrefType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="OtherSrvcName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to32"/&gt;
 *         &lt;element name="VendorPref" type="{http://www.opentravel.org/OTA/2003/05}CompanyNamePrefType" maxOccurs="5" minOccurs="0"/&gt;
 *         &lt;element name="LoyaltyPref" type="{http://www.opentravel.org/OTA/2003/05}LoyaltyPrefType" maxOccurs="5" minOccurs="0"/&gt;
 *         &lt;element name="PaymentFormPref" type="{http://www.opentravel.org/OTA/2003/05}PaymentFormPrefType" maxOccurs="5" minOccurs="0"/&gt;
 *         &lt;element name="SpecRequestPref" type="{http://www.opentravel.org/OTA/2003/05}SpecRequestPrefType" maxOccurs="5" minOccurs="0"/&gt;
 *         &lt;element ref="{http://www.opentravel.org/OTA/2003/05}TPA_Extensions" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PrivacyGroup"/&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PreferLevelGroup"/&gt;
 *       &lt;attribute name="TravelPurpose" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OtherSrvcPrefType", propOrder = {
    "otherSrvcName",
    "vendorPref",
    "loyaltyPref",
    "paymentFormPref",
    "specRequestPref",
    "tpaExtensions"
})
public class OtherSrvcPrefType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "OtherSrvcName", required = true)
    protected String otherSrvcName;
    @XmlElement(name = "VendorPref")
    protected List<CompanyNamePrefType> vendorPref;
    @XmlElement(name = "LoyaltyPref")
    protected List<LoyaltyPrefType> loyaltyPref;
    @XmlElement(name = "PaymentFormPref")
    protected List<PaymentFormPrefType> paymentFormPref;
    @XmlElement(name = "SpecRequestPref")
    protected List<SpecRequestPrefType> specRequestPref;
    @XmlElement(name = "TPA_Extensions")
    protected TPAExtensionsType tpaExtensions;
    @XmlAttribute(name = "TravelPurpose")
    protected String travelPurpose;
    @XmlAttribute(name = "ShareSynchInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareSynchInd;
    @XmlAttribute(name = "ShareMarketInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareMarketInd;
    @XmlAttribute(name = "PreferLevel")
    protected PreferLevelType preferLevel;

    /**
     * Gets the value of the otherSrvcName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOtherSrvcName() {
        return otherSrvcName;
    }

    /**
     * Sets the value of the otherSrvcName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOtherSrvcName(String value) {
        this.otherSrvcName = value;
    }

    /**
     * Gets the value of the vendorPref property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the vendorPref property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVendorPref().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CompanyNamePrefType }
     * 
     * 
     */
    public List<CompanyNamePrefType> getVendorPref() {
        if (vendorPref == null) {
            vendorPref = new ArrayList<CompanyNamePrefType>();
        }
        return this.vendorPref;
    }

    /**
     * Gets the value of the loyaltyPref property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the loyaltyPref property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLoyaltyPref().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LoyaltyPrefType }
     * 
     * 
     */
    public List<LoyaltyPrefType> getLoyaltyPref() {
        if (loyaltyPref == null) {
            loyaltyPref = new ArrayList<LoyaltyPrefType>();
        }
        return this.loyaltyPref;
    }

    /**
     * Gets the value of the paymentFormPref property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the paymentFormPref property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPaymentFormPref().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PaymentFormPrefType }
     * 
     * 
     */
    public List<PaymentFormPrefType> getPaymentFormPref() {
        if (paymentFormPref == null) {
            paymentFormPref = new ArrayList<PaymentFormPrefType>();
        }
        return this.paymentFormPref;
    }

    /**
     * Gets the value of the specRequestPref property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specRequestPref property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecRequestPref().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecRequestPrefType }
     * 
     * 
     */
    public List<SpecRequestPrefType> getSpecRequestPref() {
        if (specRequestPref == null) {
            specRequestPref = new ArrayList<SpecRequestPrefType>();
        }
        return this.specRequestPref;
    }

    /**
     * Gets the value of the tpaExtensions property.
     * 
     * @return
     *     possible object is
     *     {@link TPAExtensionsType }
     *     
     */
    public TPAExtensionsType getTPAExtensions() {
        return tpaExtensions;
    }

    /**
     * Sets the value of the tpaExtensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link TPAExtensionsType }
     *     
     */
    public void setTPAExtensions(TPAExtensionsType value) {
        this.tpaExtensions = value;
    }

    /**
     * Gets the value of the travelPurpose property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTravelPurpose() {
        return travelPurpose;
    }

    /**
     * Sets the value of the travelPurpose property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTravelPurpose(String value) {
        this.travelPurpose = value;
    }

    /**
     * Gets the value of the shareSynchInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareSynchInd() {
        return shareSynchInd;
    }

    /**
     * Sets the value of the shareSynchInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareSynchInd(String value) {
        this.shareSynchInd = value;
    }

    /**
     * Gets the value of the shareMarketInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareMarketInd() {
        return shareMarketInd;
    }

    /**
     * Sets the value of the shareMarketInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareMarketInd(String value) {
        this.shareMarketInd = value;
    }

    /**
     * Gets the value of the preferLevel property.
     * 
     * @return
     *     possible object is
     *     {@link PreferLevelType }
     *     
     */
    public PreferLevelType getPreferLevel() {
        if (preferLevel == null) {
            return PreferLevelType.PREFERRED;
        } else {
            return preferLevel;
        }
    }

    /**
     * Sets the value of the preferLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link PreferLevelType }
     *     
     */
    public void setPreferLevel(PreferLevelType value) {
        this.preferLevel = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theOtherSrvcName;
            theOtherSrvcName = this.getOtherSrvcName();
            strategy.appendField(locator, this, "otherSrvcName", buffer, theOtherSrvcName);
        }
        {
            List<CompanyNamePrefType> theVendorPref;
            theVendorPref = (((this.vendorPref!= null)&&(!this.vendorPref.isEmpty()))?this.getVendorPref():null);
            strategy.appendField(locator, this, "vendorPref", buffer, theVendorPref);
        }
        {
            List<LoyaltyPrefType> theLoyaltyPref;
            theLoyaltyPref = (((this.loyaltyPref!= null)&&(!this.loyaltyPref.isEmpty()))?this.getLoyaltyPref():null);
            strategy.appendField(locator, this, "loyaltyPref", buffer, theLoyaltyPref);
        }
        {
            List<PaymentFormPrefType> thePaymentFormPref;
            thePaymentFormPref = (((this.paymentFormPref!= null)&&(!this.paymentFormPref.isEmpty()))?this.getPaymentFormPref():null);
            strategy.appendField(locator, this, "paymentFormPref", buffer, thePaymentFormPref);
        }
        {
            List<SpecRequestPrefType> theSpecRequestPref;
            theSpecRequestPref = (((this.specRequestPref!= null)&&(!this.specRequestPref.isEmpty()))?this.getSpecRequestPref():null);
            strategy.appendField(locator, this, "specRequestPref", buffer, theSpecRequestPref);
        }
        {
            TPAExtensionsType theTPAExtensions;
            theTPAExtensions = this.getTPAExtensions();
            strategy.appendField(locator, this, "tpaExtensions", buffer, theTPAExtensions);
        }
        {
            String theTravelPurpose;
            theTravelPurpose = this.getTravelPurpose();
            strategy.appendField(locator, this, "travelPurpose", buffer, theTravelPurpose);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
        }
        {
            PreferLevelType thePreferLevel;
            thePreferLevel = this.getPreferLevel();
            strategy.appendField(locator, this, "preferLevel", buffer, thePreferLevel);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof OtherSrvcPrefType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final OtherSrvcPrefType that = ((OtherSrvcPrefType) object);
        {
            String lhsOtherSrvcName;
            lhsOtherSrvcName = this.getOtherSrvcName();
            String rhsOtherSrvcName;
            rhsOtherSrvcName = that.getOtherSrvcName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "otherSrvcName", lhsOtherSrvcName), LocatorUtils.property(thatLocator, "otherSrvcName", rhsOtherSrvcName), lhsOtherSrvcName, rhsOtherSrvcName)) {
                return false;
            }
        }
        {
            List<CompanyNamePrefType> lhsVendorPref;
            lhsVendorPref = (((this.vendorPref!= null)&&(!this.vendorPref.isEmpty()))?this.getVendorPref():null);
            List<CompanyNamePrefType> rhsVendorPref;
            rhsVendorPref = (((that.vendorPref!= null)&&(!that.vendorPref.isEmpty()))?that.getVendorPref():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "vendorPref", lhsVendorPref), LocatorUtils.property(thatLocator, "vendorPref", rhsVendorPref), lhsVendorPref, rhsVendorPref)) {
                return false;
            }
        }
        {
            List<LoyaltyPrefType> lhsLoyaltyPref;
            lhsLoyaltyPref = (((this.loyaltyPref!= null)&&(!this.loyaltyPref.isEmpty()))?this.getLoyaltyPref():null);
            List<LoyaltyPrefType> rhsLoyaltyPref;
            rhsLoyaltyPref = (((that.loyaltyPref!= null)&&(!that.loyaltyPref.isEmpty()))?that.getLoyaltyPref():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "loyaltyPref", lhsLoyaltyPref), LocatorUtils.property(thatLocator, "loyaltyPref", rhsLoyaltyPref), lhsLoyaltyPref, rhsLoyaltyPref)) {
                return false;
            }
        }
        {
            List<PaymentFormPrefType> lhsPaymentFormPref;
            lhsPaymentFormPref = (((this.paymentFormPref!= null)&&(!this.paymentFormPref.isEmpty()))?this.getPaymentFormPref():null);
            List<PaymentFormPrefType> rhsPaymentFormPref;
            rhsPaymentFormPref = (((that.paymentFormPref!= null)&&(!that.paymentFormPref.isEmpty()))?that.getPaymentFormPref():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "paymentFormPref", lhsPaymentFormPref), LocatorUtils.property(thatLocator, "paymentFormPref", rhsPaymentFormPref), lhsPaymentFormPref, rhsPaymentFormPref)) {
                return false;
            }
        }
        {
            List<SpecRequestPrefType> lhsSpecRequestPref;
            lhsSpecRequestPref = (((this.specRequestPref!= null)&&(!this.specRequestPref.isEmpty()))?this.getSpecRequestPref():null);
            List<SpecRequestPrefType> rhsSpecRequestPref;
            rhsSpecRequestPref = (((that.specRequestPref!= null)&&(!that.specRequestPref.isEmpty()))?that.getSpecRequestPref():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specRequestPref", lhsSpecRequestPref), LocatorUtils.property(thatLocator, "specRequestPref", rhsSpecRequestPref), lhsSpecRequestPref, rhsSpecRequestPref)) {
                return false;
            }
        }
        {
            TPAExtensionsType lhsTPAExtensions;
            lhsTPAExtensions = this.getTPAExtensions();
            TPAExtensionsType rhsTPAExtensions;
            rhsTPAExtensions = that.getTPAExtensions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tpaExtensions", lhsTPAExtensions), LocatorUtils.property(thatLocator, "tpaExtensions", rhsTPAExtensions), lhsTPAExtensions, rhsTPAExtensions)) {
                return false;
            }
        }
        {
            String lhsTravelPurpose;
            lhsTravelPurpose = this.getTravelPurpose();
            String rhsTravelPurpose;
            rhsTravelPurpose = that.getTravelPurpose();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "travelPurpose", lhsTravelPurpose), LocatorUtils.property(thatLocator, "travelPurpose", rhsTravelPurpose), lhsTravelPurpose, rhsTravelPurpose)) {
                return false;
            }
        }
        {
            String lhsShareSynchInd;
            lhsShareSynchInd = this.getShareSynchInd();
            String rhsShareSynchInd;
            rhsShareSynchInd = that.getShareSynchInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                return false;
            }
        }
        {
            String lhsShareMarketInd;
            lhsShareMarketInd = this.getShareMarketInd();
            String rhsShareMarketInd;
            rhsShareMarketInd = that.getShareMarketInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                return false;
            }
        }
        {
            PreferLevelType lhsPreferLevel;
            lhsPreferLevel = this.getPreferLevel();
            PreferLevelType rhsPreferLevel;
            rhsPreferLevel = that.getPreferLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "preferLevel", lhsPreferLevel), LocatorUtils.property(thatLocator, "preferLevel", rhsPreferLevel), lhsPreferLevel, rhsPreferLevel)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theOtherSrvcName;
            theOtherSrvcName = this.getOtherSrvcName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "otherSrvcName", theOtherSrvcName), currentHashCode, theOtherSrvcName);
        }
        {
            List<CompanyNamePrefType> theVendorPref;
            theVendorPref = (((this.vendorPref!= null)&&(!this.vendorPref.isEmpty()))?this.getVendorPref():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "vendorPref", theVendorPref), currentHashCode, theVendorPref);
        }
        {
            List<LoyaltyPrefType> theLoyaltyPref;
            theLoyaltyPref = (((this.loyaltyPref!= null)&&(!this.loyaltyPref.isEmpty()))?this.getLoyaltyPref():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "loyaltyPref", theLoyaltyPref), currentHashCode, theLoyaltyPref);
        }
        {
            List<PaymentFormPrefType> thePaymentFormPref;
            thePaymentFormPref = (((this.paymentFormPref!= null)&&(!this.paymentFormPref.isEmpty()))?this.getPaymentFormPref():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "paymentFormPref", thePaymentFormPref), currentHashCode, thePaymentFormPref);
        }
        {
            List<SpecRequestPrefType> theSpecRequestPref;
            theSpecRequestPref = (((this.specRequestPref!= null)&&(!this.specRequestPref.isEmpty()))?this.getSpecRequestPref():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specRequestPref", theSpecRequestPref), currentHashCode, theSpecRequestPref);
        }
        {
            TPAExtensionsType theTPAExtensions;
            theTPAExtensions = this.getTPAExtensions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tpaExtensions", theTPAExtensions), currentHashCode, theTPAExtensions);
        }
        {
            String theTravelPurpose;
            theTravelPurpose = this.getTravelPurpose();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "travelPurpose", theTravelPurpose), currentHashCode, theTravelPurpose);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
        }
        {
            PreferLevelType thePreferLevel;
            thePreferLevel = this.getPreferLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "preferLevel", thePreferLevel), currentHashCode, thePreferLevel);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof OtherSrvcPrefType) {
            final OtherSrvcPrefType copy = ((OtherSrvcPrefType) draftCopy);
            if (this.otherSrvcName!= null) {
                String sourceOtherSrvcName;
                sourceOtherSrvcName = this.getOtherSrvcName();
                String copyOtherSrvcName = ((String) strategy.copy(LocatorUtils.property(locator, "otherSrvcName", sourceOtherSrvcName), sourceOtherSrvcName));
                copy.setOtherSrvcName(copyOtherSrvcName);
            } else {
                copy.otherSrvcName = null;
            }
            if ((this.vendorPref!= null)&&(!this.vendorPref.isEmpty())) {
                List<CompanyNamePrefType> sourceVendorPref;
                sourceVendorPref = (((this.vendorPref!= null)&&(!this.vendorPref.isEmpty()))?this.getVendorPref():null);
                @SuppressWarnings("unchecked")
                List<CompanyNamePrefType> copyVendorPref = ((List<CompanyNamePrefType> ) strategy.copy(LocatorUtils.property(locator, "vendorPref", sourceVendorPref), sourceVendorPref));
                copy.vendorPref = null;
                if (copyVendorPref!= null) {
                    List<CompanyNamePrefType> uniqueVendorPrefl = copy.getVendorPref();
                    uniqueVendorPrefl.addAll(copyVendorPref);
                }
            } else {
                copy.vendorPref = null;
            }
            if ((this.loyaltyPref!= null)&&(!this.loyaltyPref.isEmpty())) {
                List<LoyaltyPrefType> sourceLoyaltyPref;
                sourceLoyaltyPref = (((this.loyaltyPref!= null)&&(!this.loyaltyPref.isEmpty()))?this.getLoyaltyPref():null);
                @SuppressWarnings("unchecked")
                List<LoyaltyPrefType> copyLoyaltyPref = ((List<LoyaltyPrefType> ) strategy.copy(LocatorUtils.property(locator, "loyaltyPref", sourceLoyaltyPref), sourceLoyaltyPref));
                copy.loyaltyPref = null;
                if (copyLoyaltyPref!= null) {
                    List<LoyaltyPrefType> uniqueLoyaltyPrefl = copy.getLoyaltyPref();
                    uniqueLoyaltyPrefl.addAll(copyLoyaltyPref);
                }
            } else {
                copy.loyaltyPref = null;
            }
            if ((this.paymentFormPref!= null)&&(!this.paymentFormPref.isEmpty())) {
                List<PaymentFormPrefType> sourcePaymentFormPref;
                sourcePaymentFormPref = (((this.paymentFormPref!= null)&&(!this.paymentFormPref.isEmpty()))?this.getPaymentFormPref():null);
                @SuppressWarnings("unchecked")
                List<PaymentFormPrefType> copyPaymentFormPref = ((List<PaymentFormPrefType> ) strategy.copy(LocatorUtils.property(locator, "paymentFormPref", sourcePaymentFormPref), sourcePaymentFormPref));
                copy.paymentFormPref = null;
                if (copyPaymentFormPref!= null) {
                    List<PaymentFormPrefType> uniquePaymentFormPrefl = copy.getPaymentFormPref();
                    uniquePaymentFormPrefl.addAll(copyPaymentFormPref);
                }
            } else {
                copy.paymentFormPref = null;
            }
            if ((this.specRequestPref!= null)&&(!this.specRequestPref.isEmpty())) {
                List<SpecRequestPrefType> sourceSpecRequestPref;
                sourceSpecRequestPref = (((this.specRequestPref!= null)&&(!this.specRequestPref.isEmpty()))?this.getSpecRequestPref():null);
                @SuppressWarnings("unchecked")
                List<SpecRequestPrefType> copySpecRequestPref = ((List<SpecRequestPrefType> ) strategy.copy(LocatorUtils.property(locator, "specRequestPref", sourceSpecRequestPref), sourceSpecRequestPref));
                copy.specRequestPref = null;
                if (copySpecRequestPref!= null) {
                    List<SpecRequestPrefType> uniqueSpecRequestPrefl = copy.getSpecRequestPref();
                    uniqueSpecRequestPrefl.addAll(copySpecRequestPref);
                }
            } else {
                copy.specRequestPref = null;
            }
            if (this.tpaExtensions!= null) {
                TPAExtensionsType sourceTPAExtensions;
                sourceTPAExtensions = this.getTPAExtensions();
                TPAExtensionsType copyTPAExtensions = ((TPAExtensionsType) strategy.copy(LocatorUtils.property(locator, "tpaExtensions", sourceTPAExtensions), sourceTPAExtensions));
                copy.setTPAExtensions(copyTPAExtensions);
            } else {
                copy.tpaExtensions = null;
            }
            if (this.travelPurpose!= null) {
                String sourceTravelPurpose;
                sourceTravelPurpose = this.getTravelPurpose();
                String copyTravelPurpose = ((String) strategy.copy(LocatorUtils.property(locator, "travelPurpose", sourceTravelPurpose), sourceTravelPurpose));
                copy.setTravelPurpose(copyTravelPurpose);
            } else {
                copy.travelPurpose = null;
            }
            if (this.shareSynchInd!= null) {
                String sourceShareSynchInd;
                sourceShareSynchInd = this.getShareSynchInd();
                String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                copy.setShareSynchInd(copyShareSynchInd);
            } else {
                copy.shareSynchInd = null;
            }
            if (this.shareMarketInd!= null) {
                String sourceShareMarketInd;
                sourceShareMarketInd = this.getShareMarketInd();
                String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                copy.setShareMarketInd(copyShareMarketInd);
            } else {
                copy.shareMarketInd = null;
            }
            if (this.preferLevel!= null) {
                PreferLevelType sourcePreferLevel;
                sourcePreferLevel = this.getPreferLevel();
                PreferLevelType copyPreferLevel = ((PreferLevelType) strategy.copy(LocatorUtils.property(locator, "preferLevel", sourcePreferLevel), sourcePreferLevel));
                copy.setPreferLevel(copyPreferLevel);
            } else {
                copy.preferLevel = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new OtherSrvcPrefType();
    }

}
