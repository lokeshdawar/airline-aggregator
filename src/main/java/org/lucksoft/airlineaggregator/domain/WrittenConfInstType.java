//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Method by which confirmations should be delivered.
 * 
 * <p>Java class for WrittenConfInstType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="WrittenConfInstType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="SupplementalData" type="{http://www.opentravel.org/OTA/2003/05}ParagraphType" minOccurs="0"/&gt;
 *         &lt;element name="Email" type="{http://www.opentravel.org/OTA/2003/05}EmailType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="LanguageID" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="AddresseeName" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="Address" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="Telephone" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="ConfirmInd" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "WrittenConfInstType", propOrder = {
    "supplementalData",
    "email"
})
public class WrittenConfInstType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "SupplementalData")
    protected ParagraphType supplementalData;
    @XmlElement(name = "Email")
    protected EmailType email;
    @XmlAttribute(name = "LanguageID")
    protected String languageID;
    @XmlAttribute(name = "AddresseeName")
    protected String addresseeName;
    @XmlAttribute(name = "Address")
    protected String address;
    @XmlAttribute(name = "Telephone")
    protected String telephone;
    @XmlAttribute(name = "ConfirmInd")
    protected Boolean confirmInd;

    /**
     * Gets the value of the supplementalData property.
     * 
     * @return
     *     possible object is
     *     {@link ParagraphType }
     *     
     */
    public ParagraphType getSupplementalData() {
        return supplementalData;
    }

    /**
     * Sets the value of the supplementalData property.
     * 
     * @param value
     *     allowed object is
     *     {@link ParagraphType }
     *     
     */
    public void setSupplementalData(ParagraphType value) {
        this.supplementalData = value;
    }

    /**
     * Gets the value of the email property.
     * 
     * @return
     *     possible object is
     *     {@link EmailType }
     *     
     */
    public EmailType getEmail() {
        return email;
    }

    /**
     * Sets the value of the email property.
     * 
     * @param value
     *     allowed object is
     *     {@link EmailType }
     *     
     */
    public void setEmail(EmailType value) {
        this.email = value;
    }

    /**
     * Gets the value of the languageID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguageID() {
        return languageID;
    }

    /**
     * Sets the value of the languageID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguageID(String value) {
        this.languageID = value;
    }

    /**
     * Gets the value of the addresseeName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAddresseeName() {
        return addresseeName;
    }

    /**
     * Sets the value of the addresseeName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddresseeName(String value) {
        this.addresseeName = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAddress(String value) {
        this.address = value;
    }

    /**
     * Gets the value of the telephone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTelephone() {
        return telephone;
    }

    /**
     * Sets the value of the telephone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTelephone(String value) {
        this.telephone = value;
    }

    /**
     * Gets the value of the confirmInd property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isConfirmInd() {
        return confirmInd;
    }

    /**
     * Sets the value of the confirmInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setConfirmInd(Boolean value) {
        this.confirmInd = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ParagraphType theSupplementalData;
            theSupplementalData = this.getSupplementalData();
            strategy.appendField(locator, this, "supplementalData", buffer, theSupplementalData);
        }
        {
            EmailType theEmail;
            theEmail = this.getEmail();
            strategy.appendField(locator, this, "email", buffer, theEmail);
        }
        {
            String theLanguageID;
            theLanguageID = this.getLanguageID();
            strategy.appendField(locator, this, "languageID", buffer, theLanguageID);
        }
        {
            String theAddresseeName;
            theAddresseeName = this.getAddresseeName();
            strategy.appendField(locator, this, "addresseeName", buffer, theAddresseeName);
        }
        {
            String theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            String theTelephone;
            theTelephone = this.getTelephone();
            strategy.appendField(locator, this, "telephone", buffer, theTelephone);
        }
        {
            Boolean theConfirmInd;
            theConfirmInd = this.isConfirmInd();
            strategy.appendField(locator, this, "confirmInd", buffer, theConfirmInd);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof WrittenConfInstType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final WrittenConfInstType that = ((WrittenConfInstType) object);
        {
            ParagraphType lhsSupplementalData;
            lhsSupplementalData = this.getSupplementalData();
            ParagraphType rhsSupplementalData;
            rhsSupplementalData = that.getSupplementalData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "supplementalData", lhsSupplementalData), LocatorUtils.property(thatLocator, "supplementalData", rhsSupplementalData), lhsSupplementalData, rhsSupplementalData)) {
                return false;
            }
        }
        {
            EmailType lhsEmail;
            lhsEmail = this.getEmail();
            EmailType rhsEmail;
            rhsEmail = that.getEmail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEmail), LocatorUtils.property(thatLocator, "email", rhsEmail), lhsEmail, rhsEmail)) {
                return false;
            }
        }
        {
            String lhsLanguageID;
            lhsLanguageID = this.getLanguageID();
            String rhsLanguageID;
            rhsLanguageID = that.getLanguageID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "languageID", lhsLanguageID), LocatorUtils.property(thatLocator, "languageID", rhsLanguageID), lhsLanguageID, rhsLanguageID)) {
                return false;
            }
        }
        {
            String lhsAddresseeName;
            lhsAddresseeName = this.getAddresseeName();
            String rhsAddresseeName;
            rhsAddresseeName = that.getAddresseeName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "addresseeName", lhsAddresseeName), LocatorUtils.property(thatLocator, "addresseeName", rhsAddresseeName), lhsAddresseeName, rhsAddresseeName)) {
                return false;
            }
        }
        {
            String lhsAddress;
            lhsAddress = this.getAddress();
            String rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            String lhsTelephone;
            lhsTelephone = this.getTelephone();
            String rhsTelephone;
            rhsTelephone = that.getTelephone();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telephone", lhsTelephone), LocatorUtils.property(thatLocator, "telephone", rhsTelephone), lhsTelephone, rhsTelephone)) {
                return false;
            }
        }
        {
            Boolean lhsConfirmInd;
            lhsConfirmInd = this.isConfirmInd();
            Boolean rhsConfirmInd;
            rhsConfirmInd = that.isConfirmInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "confirmInd", lhsConfirmInd), LocatorUtils.property(thatLocator, "confirmInd", rhsConfirmInd), lhsConfirmInd, rhsConfirmInd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ParagraphType theSupplementalData;
            theSupplementalData = this.getSupplementalData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "supplementalData", theSupplementalData), currentHashCode, theSupplementalData);
        }
        {
            EmailType theEmail;
            theEmail = this.getEmail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEmail), currentHashCode, theEmail);
        }
        {
            String theLanguageID;
            theLanguageID = this.getLanguageID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "languageID", theLanguageID), currentHashCode, theLanguageID);
        }
        {
            String theAddresseeName;
            theAddresseeName = this.getAddresseeName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addresseeName", theAddresseeName), currentHashCode, theAddresseeName);
        }
        {
            String theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            String theTelephone;
            theTelephone = this.getTelephone();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telephone", theTelephone), currentHashCode, theTelephone);
        }
        {
            Boolean theConfirmInd;
            theConfirmInd = this.isConfirmInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "confirmInd", theConfirmInd), currentHashCode, theConfirmInd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof WrittenConfInstType) {
            final WrittenConfInstType copy = ((WrittenConfInstType) draftCopy);
            if (this.supplementalData!= null) {
                ParagraphType sourceSupplementalData;
                sourceSupplementalData = this.getSupplementalData();
                ParagraphType copySupplementalData = ((ParagraphType) strategy.copy(LocatorUtils.property(locator, "supplementalData", sourceSupplementalData), sourceSupplementalData));
                copy.setSupplementalData(copySupplementalData);
            } else {
                copy.supplementalData = null;
            }
            if (this.email!= null) {
                EmailType sourceEmail;
                sourceEmail = this.getEmail();
                EmailType copyEmail = ((EmailType) strategy.copy(LocatorUtils.property(locator, "email", sourceEmail), sourceEmail));
                copy.setEmail(copyEmail);
            } else {
                copy.email = null;
            }
            if (this.languageID!= null) {
                String sourceLanguageID;
                sourceLanguageID = this.getLanguageID();
                String copyLanguageID = ((String) strategy.copy(LocatorUtils.property(locator, "languageID", sourceLanguageID), sourceLanguageID));
                copy.setLanguageID(copyLanguageID);
            } else {
                copy.languageID = null;
            }
            if (this.addresseeName!= null) {
                String sourceAddresseeName;
                sourceAddresseeName = this.getAddresseeName();
                String copyAddresseeName = ((String) strategy.copy(LocatorUtils.property(locator, "addresseeName", sourceAddresseeName), sourceAddresseeName));
                copy.setAddresseeName(copyAddresseeName);
            } else {
                copy.addresseeName = null;
            }
            if (this.address!= null) {
                String sourceAddress;
                sourceAddress = this.getAddress();
                String copyAddress = ((String) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.setAddress(copyAddress);
            } else {
                copy.address = null;
            }
            if (this.telephone!= null) {
                String sourceTelephone;
                sourceTelephone = this.getTelephone();
                String copyTelephone = ((String) strategy.copy(LocatorUtils.property(locator, "telephone", sourceTelephone), sourceTelephone));
                copy.setTelephone(copyTelephone);
            } else {
                copy.telephone = null;
            }
            if (this.confirmInd!= null) {
                Boolean sourceConfirmInd;
                sourceConfirmInd = this.isConfirmInd();
                Boolean copyConfirmInd = ((Boolean) strategy.copy(LocatorUtils.property(locator, "confirmInd", sourceConfirmInd), sourceConfirmInd));
                copy.setConfirmInd(copyConfirmInd);
            } else {
                copy.confirmInd = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new WrittenConfInstType();
    }

}
