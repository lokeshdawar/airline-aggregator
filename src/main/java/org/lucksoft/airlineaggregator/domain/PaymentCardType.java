//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.08.02 at 10:21:37 AM IST 
//


package org.lucksoft.airlineaggregator.domain;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Identification about a specific credit card
 * 
 * <p>Java class for PaymentCardType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PaymentCardType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="CardHolderName" type="{http://www.opentravel.org/OTA/2003/05}StringLength1to64" minOccurs="0"/&gt;
 *         &lt;element name="CardIssuerName" minOccurs="0"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}IssuerNameGroup"/&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *         &lt;element name="Address" type="{http://www.opentravel.org/OTA/2003/05}AddressType" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PaymentCardDateGroup"/&gt;
 *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}PrivacyGroup"/&gt;
 *       &lt;attribute name="CardType" type="{http://www.opentravel.org/OTA/2003/05}OTA_CodeType" /&gt;
 *       &lt;attribute name="CardCode" type="{http://www.opentravel.org/OTA/2003/05}PaymentCardCodeType" /&gt;
 *       &lt;attribute name="CardNumber" type="{http://www.opentravel.org/OTA/2003/05}NumericStringLength1to19" /&gt;
 *       &lt;attribute name="SeriesCode" type="{http://www.opentravel.org/OTA/2003/05}NumericStringLength1to8" /&gt;
 *       &lt;attribute name="MaskedCardNumber" type="{http://www.opentravel.org/OTA/2003/05}AlphaNumericStringLength1to19" /&gt;
 *       &lt;attribute name="CardHolderRPH" type="{http://www.opentravel.org/OTA/2003/05}RPH_Type" /&gt;
 *       &lt;attribute name="ExtendPaymentIndicator" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PaymentCardType", propOrder = {
    "cardHolderName",
    "cardIssuerName",
    "address"
})
public class PaymentCardType
    implements Cloneable, CopyTo, Equals, HashCode, ToString
{

    @XmlElement(name = "CardHolderName")
    protected String cardHolderName;
    @XmlElement(name = "CardIssuerName")
    protected PaymentCardType.CardIssuerName cardIssuerName;
    @XmlElement(name = "Address")
    protected AddressType address;
    @XmlAttribute(name = "CardType")
    protected String cardType;
    @XmlAttribute(name = "CardCode")
    protected String cardCode;
    @XmlAttribute(name = "CardNumber")
    protected String cardNumber;
    @XmlAttribute(name = "SeriesCode")
    protected String seriesCode;
    @XmlAttribute(name = "MaskedCardNumber")
    protected String maskedCardNumber;
    @XmlAttribute(name = "CardHolderRPH")
    protected String cardHolderRPH;
    @XmlAttribute(name = "ExtendPaymentIndicator")
    protected Boolean extendPaymentIndicator;
    @XmlAttribute(name = "EffectiveDate")
    protected String effectiveDate;
    @XmlAttribute(name = "ExpireDate")
    protected String expireDate;
    @XmlAttribute(name = "ShareSynchInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareSynchInd;
    @XmlAttribute(name = "ShareMarketInd")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String shareMarketInd;

    /**
     * Gets the value of the cardHolderName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardHolderName() {
        return cardHolderName;
    }

    /**
     * Sets the value of the cardHolderName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardHolderName(String value) {
        this.cardHolderName = value;
    }

    /**
     * Gets the value of the cardIssuerName property.
     * 
     * @return
     *     possible object is
     *     {@link PaymentCardType.CardIssuerName }
     *     
     */
    public PaymentCardType.CardIssuerName getCardIssuerName() {
        return cardIssuerName;
    }

    /**
     * Sets the value of the cardIssuerName property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaymentCardType.CardIssuerName }
     *     
     */
    public void setCardIssuerName(PaymentCardType.CardIssuerName value) {
        this.cardIssuerName = value;
    }

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link AddressType }
     *     
     */
    public AddressType getAddress() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link AddressType }
     *     
     */
    public void setAddress(AddressType value) {
        this.address = value;
    }

    /**
     * Gets the value of the cardType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardType() {
        return cardType;
    }

    /**
     * Sets the value of the cardType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardType(String value) {
        this.cardType = value;
    }

    /**
     * Gets the value of the cardCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardCode() {
        return cardCode;
    }

    /**
     * Sets the value of the cardCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardCode(String value) {
        this.cardCode = value;
    }

    /**
     * Gets the value of the cardNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardNumber() {
        return cardNumber;
    }

    /**
     * Sets the value of the cardNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardNumber(String value) {
        this.cardNumber = value;
    }

    /**
     * Gets the value of the seriesCode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSeriesCode() {
        return seriesCode;
    }

    /**
     * Sets the value of the seriesCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSeriesCode(String value) {
        this.seriesCode = value;
    }

    /**
     * Gets the value of the maskedCardNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMaskedCardNumber() {
        return maskedCardNumber;
    }

    /**
     * Sets the value of the maskedCardNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMaskedCardNumber(String value) {
        this.maskedCardNumber = value;
    }

    /**
     * Gets the value of the cardHolderRPH property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCardHolderRPH() {
        return cardHolderRPH;
    }

    /**
     * Sets the value of the cardHolderRPH property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCardHolderRPH(String value) {
        this.cardHolderRPH = value;
    }

    /**
     * Gets the value of the extendPaymentIndicator property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isExtendPaymentIndicator() {
        return extendPaymentIndicator;
    }

    /**
     * Sets the value of the extendPaymentIndicator property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setExtendPaymentIndicator(Boolean value) {
        this.extendPaymentIndicator = value;
    }

    /**
     * Gets the value of the effectiveDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEffectiveDate() {
        return effectiveDate;
    }

    /**
     * Sets the value of the effectiveDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEffectiveDate(String value) {
        this.effectiveDate = value;
    }

    /**
     * Gets the value of the expireDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpireDate() {
        return expireDate;
    }

    /**
     * Sets the value of the expireDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpireDate(String value) {
        this.expireDate = value;
    }

    /**
     * Gets the value of the shareSynchInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareSynchInd() {
        return shareSynchInd;
    }

    /**
     * Sets the value of the shareSynchInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareSynchInd(String value) {
        this.shareSynchInd = value;
    }

    /**
     * Gets the value of the shareMarketInd property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getShareMarketInd() {
        return shareMarketInd;
    }

    /**
     * Sets the value of the shareMarketInd property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setShareMarketInd(String value) {
        this.shareMarketInd = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theCardHolderName;
            theCardHolderName = this.getCardHolderName();
            strategy.appendField(locator, this, "cardHolderName", buffer, theCardHolderName);
        }
        {
            PaymentCardType.CardIssuerName theCardIssuerName;
            theCardIssuerName = this.getCardIssuerName();
            strategy.appendField(locator, this, "cardIssuerName", buffer, theCardIssuerName);
        }
        {
            AddressType theAddress;
            theAddress = this.getAddress();
            strategy.appendField(locator, this, "address", buffer, theAddress);
        }
        {
            String theCardType;
            theCardType = this.getCardType();
            strategy.appendField(locator, this, "cardType", buffer, theCardType);
        }
        {
            String theCardCode;
            theCardCode = this.getCardCode();
            strategy.appendField(locator, this, "cardCode", buffer, theCardCode);
        }
        {
            String theCardNumber;
            theCardNumber = this.getCardNumber();
            strategy.appendField(locator, this, "cardNumber", buffer, theCardNumber);
        }
        {
            String theSeriesCode;
            theSeriesCode = this.getSeriesCode();
            strategy.appendField(locator, this, "seriesCode", buffer, theSeriesCode);
        }
        {
            String theMaskedCardNumber;
            theMaskedCardNumber = this.getMaskedCardNumber();
            strategy.appendField(locator, this, "maskedCardNumber", buffer, theMaskedCardNumber);
        }
        {
            String theCardHolderRPH;
            theCardHolderRPH = this.getCardHolderRPH();
            strategy.appendField(locator, this, "cardHolderRPH", buffer, theCardHolderRPH);
        }
        {
            Boolean theExtendPaymentIndicator;
            theExtendPaymentIndicator = this.isExtendPaymentIndicator();
            strategy.appendField(locator, this, "extendPaymentIndicator", buffer, theExtendPaymentIndicator);
        }
        {
            String theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            strategy.appendField(locator, this, "effectiveDate", buffer, theEffectiveDate);
        }
        {
            String theExpireDate;
            theExpireDate = this.getExpireDate();
            strategy.appendField(locator, this, "expireDate", buffer, theExpireDate);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            strategy.appendField(locator, this, "shareSynchInd", buffer, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            strategy.appendField(locator, this, "shareMarketInd", buffer, theShareMarketInd);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PaymentCardType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final PaymentCardType that = ((PaymentCardType) object);
        {
            String lhsCardHolderName;
            lhsCardHolderName = this.getCardHolderName();
            String rhsCardHolderName;
            rhsCardHolderName = that.getCardHolderName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardHolderName", lhsCardHolderName), LocatorUtils.property(thatLocator, "cardHolderName", rhsCardHolderName), lhsCardHolderName, rhsCardHolderName)) {
                return false;
            }
        }
        {
            PaymentCardType.CardIssuerName lhsCardIssuerName;
            lhsCardIssuerName = this.getCardIssuerName();
            PaymentCardType.CardIssuerName rhsCardIssuerName;
            rhsCardIssuerName = that.getCardIssuerName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardIssuerName", lhsCardIssuerName), LocatorUtils.property(thatLocator, "cardIssuerName", rhsCardIssuerName), lhsCardIssuerName, rhsCardIssuerName)) {
                return false;
            }
        }
        {
            AddressType lhsAddress;
            lhsAddress = this.getAddress();
            AddressType rhsAddress;
            rhsAddress = that.getAddress();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsAddress), LocatorUtils.property(thatLocator, "address", rhsAddress), lhsAddress, rhsAddress)) {
                return false;
            }
        }
        {
            String lhsCardType;
            lhsCardType = this.getCardType();
            String rhsCardType;
            rhsCardType = that.getCardType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardType", lhsCardType), LocatorUtils.property(thatLocator, "cardType", rhsCardType), lhsCardType, rhsCardType)) {
                return false;
            }
        }
        {
            String lhsCardCode;
            lhsCardCode = this.getCardCode();
            String rhsCardCode;
            rhsCardCode = that.getCardCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardCode", lhsCardCode), LocatorUtils.property(thatLocator, "cardCode", rhsCardCode), lhsCardCode, rhsCardCode)) {
                return false;
            }
        }
        {
            String lhsCardNumber;
            lhsCardNumber = this.getCardNumber();
            String rhsCardNumber;
            rhsCardNumber = that.getCardNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardNumber", lhsCardNumber), LocatorUtils.property(thatLocator, "cardNumber", rhsCardNumber), lhsCardNumber, rhsCardNumber)) {
                return false;
            }
        }
        {
            String lhsSeriesCode;
            lhsSeriesCode = this.getSeriesCode();
            String rhsSeriesCode;
            rhsSeriesCode = that.getSeriesCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "seriesCode", lhsSeriesCode), LocatorUtils.property(thatLocator, "seriesCode", rhsSeriesCode), lhsSeriesCode, rhsSeriesCode)) {
                return false;
            }
        }
        {
            String lhsMaskedCardNumber;
            lhsMaskedCardNumber = this.getMaskedCardNumber();
            String rhsMaskedCardNumber;
            rhsMaskedCardNumber = that.getMaskedCardNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "maskedCardNumber", lhsMaskedCardNumber), LocatorUtils.property(thatLocator, "maskedCardNumber", rhsMaskedCardNumber), lhsMaskedCardNumber, rhsMaskedCardNumber)) {
                return false;
            }
        }
        {
            String lhsCardHolderRPH;
            lhsCardHolderRPH = this.getCardHolderRPH();
            String rhsCardHolderRPH;
            rhsCardHolderRPH = that.getCardHolderRPH();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cardHolderRPH", lhsCardHolderRPH), LocatorUtils.property(thatLocator, "cardHolderRPH", rhsCardHolderRPH), lhsCardHolderRPH, rhsCardHolderRPH)) {
                return false;
            }
        }
        {
            Boolean lhsExtendPaymentIndicator;
            lhsExtendPaymentIndicator = this.isExtendPaymentIndicator();
            Boolean rhsExtendPaymentIndicator;
            rhsExtendPaymentIndicator = that.isExtendPaymentIndicator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extendPaymentIndicator", lhsExtendPaymentIndicator), LocatorUtils.property(thatLocator, "extendPaymentIndicator", rhsExtendPaymentIndicator), lhsExtendPaymentIndicator, rhsExtendPaymentIndicator)) {
                return false;
            }
        }
        {
            String lhsEffectiveDate;
            lhsEffectiveDate = this.getEffectiveDate();
            String rhsEffectiveDate;
            rhsEffectiveDate = that.getEffectiveDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effectiveDate", lhsEffectiveDate), LocatorUtils.property(thatLocator, "effectiveDate", rhsEffectiveDate), lhsEffectiveDate, rhsEffectiveDate)) {
                return false;
            }
        }
        {
            String lhsExpireDate;
            lhsExpireDate = this.getExpireDate();
            String rhsExpireDate;
            rhsExpireDate = that.getExpireDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expireDate", lhsExpireDate), LocatorUtils.property(thatLocator, "expireDate", rhsExpireDate), lhsExpireDate, rhsExpireDate)) {
                return false;
            }
        }
        {
            String lhsShareSynchInd;
            lhsShareSynchInd = this.getShareSynchInd();
            String rhsShareSynchInd;
            rhsShareSynchInd = that.getShareSynchInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareSynchInd", lhsShareSynchInd), LocatorUtils.property(thatLocator, "shareSynchInd", rhsShareSynchInd), lhsShareSynchInd, rhsShareSynchInd)) {
                return false;
            }
        }
        {
            String lhsShareMarketInd;
            lhsShareMarketInd = this.getShareMarketInd();
            String rhsShareMarketInd;
            rhsShareMarketInd = that.getShareMarketInd();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shareMarketInd", lhsShareMarketInd), LocatorUtils.property(thatLocator, "shareMarketInd", rhsShareMarketInd), lhsShareMarketInd, rhsShareMarketInd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCardHolderName;
            theCardHolderName = this.getCardHolderName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardHolderName", theCardHolderName), currentHashCode, theCardHolderName);
        }
        {
            PaymentCardType.CardIssuerName theCardIssuerName;
            theCardIssuerName = this.getCardIssuerName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardIssuerName", theCardIssuerName), currentHashCode, theCardIssuerName);
        }
        {
            AddressType theAddress;
            theAddress = this.getAddress();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theAddress), currentHashCode, theAddress);
        }
        {
            String theCardType;
            theCardType = this.getCardType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardType", theCardType), currentHashCode, theCardType);
        }
        {
            String theCardCode;
            theCardCode = this.getCardCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardCode", theCardCode), currentHashCode, theCardCode);
        }
        {
            String theCardNumber;
            theCardNumber = this.getCardNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardNumber", theCardNumber), currentHashCode, theCardNumber);
        }
        {
            String theSeriesCode;
            theSeriesCode = this.getSeriesCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "seriesCode", theSeriesCode), currentHashCode, theSeriesCode);
        }
        {
            String theMaskedCardNumber;
            theMaskedCardNumber = this.getMaskedCardNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "maskedCardNumber", theMaskedCardNumber), currentHashCode, theMaskedCardNumber);
        }
        {
            String theCardHolderRPH;
            theCardHolderRPH = this.getCardHolderRPH();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cardHolderRPH", theCardHolderRPH), currentHashCode, theCardHolderRPH);
        }
        {
            Boolean theExtendPaymentIndicator;
            theExtendPaymentIndicator = this.isExtendPaymentIndicator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extendPaymentIndicator", theExtendPaymentIndicator), currentHashCode, theExtendPaymentIndicator);
        }
        {
            String theEffectiveDate;
            theEffectiveDate = this.getEffectiveDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effectiveDate", theEffectiveDate), currentHashCode, theEffectiveDate);
        }
        {
            String theExpireDate;
            theExpireDate = this.getExpireDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expireDate", theExpireDate), currentHashCode, theExpireDate);
        }
        {
            String theShareSynchInd;
            theShareSynchInd = this.getShareSynchInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareSynchInd", theShareSynchInd), currentHashCode, theShareSynchInd);
        }
        {
            String theShareMarketInd;
            theShareMarketInd = this.getShareMarketInd();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shareMarketInd", theShareMarketInd), currentHashCode, theShareMarketInd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof PaymentCardType) {
            final PaymentCardType copy = ((PaymentCardType) draftCopy);
            if (this.cardHolderName!= null) {
                String sourceCardHolderName;
                sourceCardHolderName = this.getCardHolderName();
                String copyCardHolderName = ((String) strategy.copy(LocatorUtils.property(locator, "cardHolderName", sourceCardHolderName), sourceCardHolderName));
                copy.setCardHolderName(copyCardHolderName);
            } else {
                copy.cardHolderName = null;
            }
            if (this.cardIssuerName!= null) {
                PaymentCardType.CardIssuerName sourceCardIssuerName;
                sourceCardIssuerName = this.getCardIssuerName();
                PaymentCardType.CardIssuerName copyCardIssuerName = ((PaymentCardType.CardIssuerName) strategy.copy(LocatorUtils.property(locator, "cardIssuerName", sourceCardIssuerName), sourceCardIssuerName));
                copy.setCardIssuerName(copyCardIssuerName);
            } else {
                copy.cardIssuerName = null;
            }
            if (this.address!= null) {
                AddressType sourceAddress;
                sourceAddress = this.getAddress();
                AddressType copyAddress = ((AddressType) strategy.copy(LocatorUtils.property(locator, "address", sourceAddress), sourceAddress));
                copy.setAddress(copyAddress);
            } else {
                copy.address = null;
            }
            if (this.cardType!= null) {
                String sourceCardType;
                sourceCardType = this.getCardType();
                String copyCardType = ((String) strategy.copy(LocatorUtils.property(locator, "cardType", sourceCardType), sourceCardType));
                copy.setCardType(copyCardType);
            } else {
                copy.cardType = null;
            }
            if (this.cardCode!= null) {
                String sourceCardCode;
                sourceCardCode = this.getCardCode();
                String copyCardCode = ((String) strategy.copy(LocatorUtils.property(locator, "cardCode", sourceCardCode), sourceCardCode));
                copy.setCardCode(copyCardCode);
            } else {
                copy.cardCode = null;
            }
            if (this.cardNumber!= null) {
                String sourceCardNumber;
                sourceCardNumber = this.getCardNumber();
                String copyCardNumber = ((String) strategy.copy(LocatorUtils.property(locator, "cardNumber", sourceCardNumber), sourceCardNumber));
                copy.setCardNumber(copyCardNumber);
            } else {
                copy.cardNumber = null;
            }
            if (this.seriesCode!= null) {
                String sourceSeriesCode;
                sourceSeriesCode = this.getSeriesCode();
                String copySeriesCode = ((String) strategy.copy(LocatorUtils.property(locator, "seriesCode", sourceSeriesCode), sourceSeriesCode));
                copy.setSeriesCode(copySeriesCode);
            } else {
                copy.seriesCode = null;
            }
            if (this.maskedCardNumber!= null) {
                String sourceMaskedCardNumber;
                sourceMaskedCardNumber = this.getMaskedCardNumber();
                String copyMaskedCardNumber = ((String) strategy.copy(LocatorUtils.property(locator, "maskedCardNumber", sourceMaskedCardNumber), sourceMaskedCardNumber));
                copy.setMaskedCardNumber(copyMaskedCardNumber);
            } else {
                copy.maskedCardNumber = null;
            }
            if (this.cardHolderRPH!= null) {
                String sourceCardHolderRPH;
                sourceCardHolderRPH = this.getCardHolderRPH();
                String copyCardHolderRPH = ((String) strategy.copy(LocatorUtils.property(locator, "cardHolderRPH", sourceCardHolderRPH), sourceCardHolderRPH));
                copy.setCardHolderRPH(copyCardHolderRPH);
            } else {
                copy.cardHolderRPH = null;
            }
            if (this.extendPaymentIndicator!= null) {
                Boolean sourceExtendPaymentIndicator;
                sourceExtendPaymentIndicator = this.isExtendPaymentIndicator();
                Boolean copyExtendPaymentIndicator = ((Boolean) strategy.copy(LocatorUtils.property(locator, "extendPaymentIndicator", sourceExtendPaymentIndicator), sourceExtendPaymentIndicator));
                copy.setExtendPaymentIndicator(copyExtendPaymentIndicator);
            } else {
                copy.extendPaymentIndicator = null;
            }
            if (this.effectiveDate!= null) {
                String sourceEffectiveDate;
                sourceEffectiveDate = this.getEffectiveDate();
                String copyEffectiveDate = ((String) strategy.copy(LocatorUtils.property(locator, "effectiveDate", sourceEffectiveDate), sourceEffectiveDate));
                copy.setEffectiveDate(copyEffectiveDate);
            } else {
                copy.effectiveDate = null;
            }
            if (this.expireDate!= null) {
                String sourceExpireDate;
                sourceExpireDate = this.getExpireDate();
                String copyExpireDate = ((String) strategy.copy(LocatorUtils.property(locator, "expireDate", sourceExpireDate), sourceExpireDate));
                copy.setExpireDate(copyExpireDate);
            } else {
                copy.expireDate = null;
            }
            if (this.shareSynchInd!= null) {
                String sourceShareSynchInd;
                sourceShareSynchInd = this.getShareSynchInd();
                String copyShareSynchInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareSynchInd", sourceShareSynchInd), sourceShareSynchInd));
                copy.setShareSynchInd(copyShareSynchInd);
            } else {
                copy.shareSynchInd = null;
            }
            if (this.shareMarketInd!= null) {
                String sourceShareMarketInd;
                sourceShareMarketInd = this.getShareMarketInd();
                String copyShareMarketInd = ((String) strategy.copy(LocatorUtils.property(locator, "shareMarketInd", sourceShareMarketInd), sourceShareMarketInd));
                copy.setShareMarketInd(copyShareMarketInd);
            } else {
                copy.shareMarketInd = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new PaymentCardType();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attGroup ref="{http://www.opentravel.org/OTA/2003/05}IssuerNameGroup"/&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class CardIssuerName
        implements Cloneable, CopyTo, Equals, HashCode, ToString
    {

        @XmlAttribute(name = "BankID")
        protected String bankID;

        /**
         * Gets the value of the bankID property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getBankID() {
            return bankID;
        }

        /**
         * Sets the value of the bankID property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setBankID(String value) {
            this.bankID = value;
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theBankID;
                theBankID = this.getBankID();
                strategy.appendField(locator, this, "bankID", buffer, theBankID);
            }
            return buffer;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof PaymentCardType.CardIssuerName)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final PaymentCardType.CardIssuerName that = ((PaymentCardType.CardIssuerName) object);
            {
                String lhsBankID;
                lhsBankID = this.getBankID();
                String rhsBankID;
                rhsBankID = that.getBankID();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "bankID", lhsBankID), LocatorUtils.property(thatLocator, "bankID", rhsBankID), lhsBankID, rhsBankID)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theBankID;
                theBankID = this.getBankID();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bankID", theBankID), currentHashCode, theBankID);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof PaymentCardType.CardIssuerName) {
                final PaymentCardType.CardIssuerName copy = ((PaymentCardType.CardIssuerName) draftCopy);
                if (this.bankID!= null) {
                    String sourceBankID;
                    sourceBankID = this.getBankID();
                    String copyBankID = ((String) strategy.copy(LocatorUtils.property(locator, "bankID", sourceBankID), sourceBankID));
                    copy.setBankID(copyBankID);
                } else {
                    copy.bankID = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new PaymentCardType.CardIssuerName();
        }

    }

}
